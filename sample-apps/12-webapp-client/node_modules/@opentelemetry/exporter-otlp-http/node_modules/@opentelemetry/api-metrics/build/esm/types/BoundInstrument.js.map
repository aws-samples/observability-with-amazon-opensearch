{"version":3,"file":"BoundInstrument.js","sourceRoot":"","sources":["../../../src/types/BoundInstrument.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** An Instrument for Counter Metric. */\nexport interface BoundCounter {\n  /**\n   * Adds the given value to the current value. Values cannot be negative.\n   * @param value the value to add.\n   */\n  add(value: number): void;\n}\n\n/** ValueRecorder to report instantaneous measurement of a value. */\nexport interface BoundValueRecorder {\n  /**\n   * Records the given value to this value recorder.\n   * @param value to record.\n   */\n  record(value: number): void;\n}\n\n/** An Instrument for Base Observer */\nexport interface BoundBaseObserver {\n  update(value: number): void;\n}\n"]}