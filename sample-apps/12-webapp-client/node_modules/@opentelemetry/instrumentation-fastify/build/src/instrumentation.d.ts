import { InstrumentationBase, InstrumentationConfig, InstrumentationNodeModuleDefinition } from '@opentelemetry/instrumentation';
import type { HookHandlerDoneFunction } from 'fastify/types/hooks';
import type { FastifyReply } from 'fastify/types/reply';
import type { FastifyRequest } from 'fastify/types/request';
export declare const ANONYMOUS_NAME = "anonymous";
/** Fastify instrumentation for OpenTelemetry */
export declare class FastifyInstrumentation extends InstrumentationBase {
    constructor(config?: InstrumentationConfig);
    init(): InstrumentationNodeModuleDefinition<any>[];
    private _hookOnRequest;
    private _wrapHandler;
    private _wrapAddHook;
    private _patchConstructor;
    _patchSend(): (original: () => FastifyReply) => () => FastifyReply;
    _hookPreHandler(): (this: any, request: FastifyRequest, reply: FastifyReply, done: HookHandlerDoneFunction) => void;
}
//# sourceMappingURL=instrumentation.d.ts.map