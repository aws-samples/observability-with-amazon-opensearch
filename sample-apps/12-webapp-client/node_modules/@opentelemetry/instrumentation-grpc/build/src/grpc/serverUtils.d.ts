import type * as grpcTypes from 'grpc';
import { SendUnaryDataCallback, ServerCallWithMeta } from './types';
import { GrpcNativeInstrumentation } from './';
import { Span } from '@opentelemetry/api';
export declare const clientStreamAndUnaryHandler: <RequestType, ResponseType_1>(grpcClient: typeof grpcTypes, span: Span, call: ServerCallWithMeta, callback: SendUnaryDataCallback, original: grpcTypes.handleCall<RequestType, ResponseType_1> | grpcTypes.ClientReadableStream<RequestType>, self: {}) => any;
export declare const serverStreamAndBidiHandler: <RequestType, ResponseType_1>(span: Span, call: ServerCallWithMeta, original: grpcTypes.handleCall<RequestType, ResponseType_1>, self: {}) => any;
/**
 * Returns true if the server call should not be traced.
 */
export declare const shouldNotTraceServerCall: (this: GrpcNativeInstrumentation, call: ServerCallWithMeta, name: string) => boolean;
//# sourceMappingURL=serverUtils.d.ts.map