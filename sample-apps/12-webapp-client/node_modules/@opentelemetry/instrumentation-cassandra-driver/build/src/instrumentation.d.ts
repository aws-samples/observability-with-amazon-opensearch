import { Span } from '@opentelemetry/api';
import { InstrumentationBase, InstrumentationNodeModuleDefinition } from '@opentelemetry/instrumentation';
import { CassandraDriverInstrumentationConfig } from './types';
import type * as CassandraDriver from 'cassandra-driver';
export declare class CassandraDriverInstrumentation extends InstrumentationBase {
    constructor(config?: CassandraDriverInstrumentationConfig);
    protected init(): InstrumentationNodeModuleDefinition<typeof CassandraDriver>;
    private _getMaxQueryLength;
    private _shouldIncludeDbStatement;
    private _getPatchedExecute;
    private _getPatchedSendOnConnection;
    private _getPatchedBatch;
    private _getPatchedStream;
    startSpan({ op, query }: {
        op: string;
        query?: unknown;
    }, client: CassandraDriver.Client): Span;
}
//# sourceMappingURL=instrumentation.d.ts.map