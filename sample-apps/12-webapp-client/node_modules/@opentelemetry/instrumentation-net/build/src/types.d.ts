/// <reference types="node" />
import type * as net from 'net';
export declare type Net = typeof net;
export interface NormalizedOptions {
    host?: string;
    port?: number;
    path?: string;
}
export declare enum SocketEvent {
    CLOSE = "close",
    CONNECT = "connect",
    ERROR = "error",
    SECURE_CONNECT = "secureConnect"
}
export declare enum TLSAttributes {
    PROTOCOL = "tls.protocol",
    AUTHORIZED = "tls.authorized",
    CIPHER_NAME = "tls.cipher.name",
    CIPHER_VERSION = "tls.cipher.version",
    CERTIFICATE_FINGERPRINT = "tls.certificate.fingerprint",
    CERTIFICATE_SERIAL_NUMBER = "tls.certificate.serialNumber",
    CERTIFICATE_VALID_FROM = "tls.certificate.validFrom",
    CERTIFICATE_VALID_TO = "tls.certificate.validTo",
    ALPN_PROTOCOL = "tls.alpnProtocol"
}
//# sourceMappingURL=types.d.ts.map