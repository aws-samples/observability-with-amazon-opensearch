"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useCollection = void 0;
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
var react_1 = require("react");
var index_js_1 = require("./operations/index.js");
var utils_js_1 = require("./utils.js");
var use_collection_state_js_1 = require("./use-collection-state.js");
function useCollection(allItems, options) {
    var collectionRef = (0, react_1.useRef)(null);
    var _a = (0, use_collection_state_js_1.useCollectionState)(options, collectionRef), state = _a[0], actions = _a[1];
    var _b = (0, index_js_1.processItems)(allItems, state, options), items = _b.items, pagesCount = _b.pagesCount, filteredItemsCount = _b.filteredItemsCount, actualPageIndex = _b.actualPageIndex;
    if (options.selection && !options.selection.keepSelection) {
        var newSelectedItems = (0, index_js_1.processSelectedItems)(items, state.selectedItems, options.selection.trackBy);
        if (!(0, index_js_1.itemsAreEqual)(newSelectedItems, state.selectedItems, options.selection.trackBy)) {
            // This is a recommended pattern for how to handle the state, dependent on the incoming props
            // https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops
            actions.setSelectedItems(newSelectedItems);
        }
    }
    return __assign({ items: items, filteredItemsCount: filteredItemsCount, actions: actions }, (0, utils_js_1.createSyncProps)(options, state, actions, collectionRef, {
        actualPageIndex: actualPageIndex,
        pagesCount: pagesCount,
        allItems: allItems,
    }));
}
exports.useCollection = useCollection;
