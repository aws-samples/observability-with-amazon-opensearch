"use strict";
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
exports.compareTimestamps = exports.compareDates = void 0;
var parse_iso_date_js_1 = require("./parse-iso-date.js");
/**
 * Compares dates up to a day.
 * @param date - item value as Date.
 * @param dateToCompare - token value as ISO8601 date string.
 * @returns diff in milliseconds between date and dateToCompare with a step of one day.
 */
function compareDates(date, dateToCompare) {
    if (date instanceof Date && typeof dateToCompare === 'string') {
        return startOfDay(date).getTime() - startOfDay((0, parse_iso_date_js_1.parseIsoDate)(dateToCompare)).getTime();
    }
    return NaN;
}
exports.compareDates = compareDates;
/**
 * Compares dates up to a millisecond.
 * @param date - item value as Date.
 * @param dateToCompare - token value as ISO8601 date string.
 * @returns diff in milliseconds between date and dateToCompare with a step of one millisecond.
 */
function compareTimestamps(date, dateToCompare) {
    if (date instanceof Date && typeof dateToCompare === 'string') {
        return date.getTime() - (0, parse_iso_date_js_1.parseIsoDate)(dateToCompare).getTime();
    }
    return NaN;
}
exports.compareTimestamps = compareTimestamps;
function startOfDay(date) {
    var copy = new Date(date.getTime());
    copy.setHours(0, 0, 0, 0);
    return copy;
}
