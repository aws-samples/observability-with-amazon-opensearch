import { __spreadArray } from "tslib";
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
import { merge } from '../theme';
import { RuleCreator } from './rule';
import { SingleThemeCreator } from './single';
import { MultiThemeCreator } from './multi';
import { Selector } from './selector';
import { AllPropertyRegistry, UsedPropertyRegistry } from './registry';
import { MinimalTransformer } from './transformer';
export function createOverrideDeclarations(base, override, propertiesMap, selectorCustomizer) {
    // In the future, we might optimize the output by taking the base theme into account
    var merged = merge(base, override);
    var ruleCreator = new RuleCreator(new Selector(selectorCustomizer), new AllPropertyRegistry(propertiesMap));
    var stylesheetCreator = new SingleThemeCreator(merged, ruleCreator);
    var stylesheet = stylesheetCreator.create();
    return stylesheet.toString();
}
export function createBuildDeclarations(primary, secondary, propertiesMap, selectorCustomizer, used) {
    var ruleCreator = new RuleCreator(new Selector(selectorCustomizer), new UsedPropertyRegistry(propertiesMap, used));
    var stylesheetCreator = new MultiThemeCreator(__spreadArray([primary], secondary, true), ruleCreator);
    var stylesheet = stylesheetCreator.create();
    var transformer = new MinimalTransformer();
    var minimal = transformer.transform(stylesheet);
    return minimal.toString();
}
