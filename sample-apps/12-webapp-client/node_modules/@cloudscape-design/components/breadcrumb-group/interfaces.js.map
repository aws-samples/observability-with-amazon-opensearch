{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/breadcrumb-group/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BaseNavigationDetail, CancelableEventHandler } from '../internal/events';\nimport { LinkItem } from '../button-dropdown/interfaces';\nimport { BaseComponentProps } from '../internal/base-component';\n\nexport interface BreadcrumbGroupProps<T extends BreadcrumbGroupProps.Item = BreadcrumbGroupProps.Item>\n  extends BaseComponentProps {\n  /**\n   * An array of breadcrumb items that describes the link hierarchy for this navigation.\n   * Each option has the following properties:\n\n   * * `text` (string) - Specifies the title text of the breadcrumb item.\n   * * `href` (string) - Specifies the URL for the link in the breadcrumb item.\n   * You should specify the link even if you have a click handler for a breadcrumb item\n   * to ensure that valid markup is generated.\n\n   * Note: The last breadcrumb item is automatically considered the current item, and it's\n   * attributed with the proper `aria-current` value and rendered as inactive.\n   */\n  items: ReadonlyArray<T>;\n  /**\n   * Provides an `aria-label` to the breadcrumb group that screen readers can read (for accessibility).\n   */\n  ariaLabel?: string;\n\n  /**\n   * Provides an `aria-label` to the ellipsis button that screen readers can read (for accessibility).\n   */\n  expandAriaLabel?: string;\n  /**\n   * Called when the user clicks on a breadcrumb item.\n   */\n  onClick?: CancelableEventHandler<BreadcrumbGroupProps.ClickDetail<T>>;\n  /**\n   * Called when the user clicks on a breadcrumb item with the left mouse button\n   * without pressing modifier keys (that is, CTRL, ALT, SHIFT, META).\n   */\n  onFollow?: CancelableEventHandler<BreadcrumbGroupProps.ClickDetail<T>>;\n}\n\nexport namespace BreadcrumbGroupProps {\n  export interface Item {\n    text: string;\n    href: string;\n  }\n\n  export interface ClickDetail<T extends BreadcrumbGroupProps.Item = BreadcrumbGroupProps.Item>\n    extends BaseNavigationDetail {\n    item: T;\n    text: string;\n    href: string;\n  }\n}\n\nexport interface BreadcrumbItemProps<T extends BreadcrumbGroupProps.Item> {\n  item: T;\n  isLast?: boolean;\n  isCompressed?: boolean;\n  onClick?: CancelableEventHandler<BreadcrumbGroupProps.ClickDetail<T>>;\n  onFollow?: CancelableEventHandler<BreadcrumbGroupProps.ClickDetail<T>>;\n}\n\nexport interface EllipsisDropdownProps {\n  ariaLabel?: BreadcrumbGroupProps['expandAriaLabel'];\n  dropdownItems: ReadonlyArray<LinkItem>;\n  onDropdownItemClick: CancelableEventHandler<{ id: string; event?: any }>;\n  onDropdownItemFollow: CancelableEventHandler<{ id: string; event?: any }>;\n}\n"]}