import { PropertyFilterProps } from './interfaces';
import { AutosuggestProps } from '../autosuggest/interfaces';
interface TokenProps extends Pick<PropertyFilterProps, 'filteringOptions' | 'filteringProperties' | 'onLoadItems' | 'i18nStrings' | 'asyncProperties' | 'hideOperations' | 'customGroupsText' | 'disabled' | 'disableFreeTextFiltering' | 'expandToViewport'> {
    operation: PropertyFilterProps.JoinOperation;
    token: PropertyFilterProps.Token;
    first?: boolean;
    removeToken: () => void;
    setToken: (newToken: PropertyFilterProps.Token) => void;
    setOperation: (newOperation: PropertyFilterProps.JoinOperation) => void;
    asyncProps: Pick<AutosuggestProps, 'empty' | 'loadingText' | 'finishedText' | 'errorText' | 'recoveryText' | 'statusType'>;
}
export declare const Token: ({ token, operation, first, removeToken, setToken, setOperation, filteringOptions, filteringProperties, asyncProps, onLoadItems, i18nStrings, asyncProperties, hideOperations, customGroupsText, disabled, disableFreeTextFiltering, expandToViewport, }: TokenProps) => JSX.Element;
export {};
//# sourceMappingURL=token.d.ts.map