{"version":3,"file":"token-editor.js","sourceRoot":"","sources":["../../../src/property-filter/token-editor.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAChD,OAAO,IAAI,MAAM,MAAM,CAAC;AAGxB,OAAO,cAAc,MAAM,oBAAoB,CAAC;AAChD,OAAO,oBAAoB,MAAM,2BAA2B,CAAC;AAC7D,OAAO,mBAAmB,MAAM,yBAAyB,CAAC;AAC1D,OAAO,eAAuC,MAAM,qBAAqB,CAAC;AAC1E,OAAO,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AACpD,OAAO,EAAE,WAAW,EAAE,MAAM,uCAAuC,CAAC;AAWpE,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAChD,OAAO,EACL,mBAAmB,EACnB,kBAAkB,EAClB,gBAAgB,EAChB,qBAAqB,EACrB,sBAAsB,GACvB,MAAM,cAAc,CAAC;AAItB,IAAM,iBAAiB,GAAyB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;AAQ5D,SAAS,gBAAgB,CAAC,EAAqD;QAAnD,SAAS,eAAA,EAAE,KAAK,WAAA,EAAE,QAAQ,cAAA;IACpD,IAAM,SAAS,GAAG,WAAW,EAAE,CAAC;IAChC,OAAO,CACL,6BAAK,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAE,SAAS,CAAC;QAC1D,+BAAO,SAAS,EAAE,MAAM,CAAC,oBAAoB,CAAC,EAAE,OAAO,EAAE,SAAS,IAC/D,KAAK,CACA;QACR,6BAAK,SAAS,EAAE,MAAM,CAAC,oBAAoB,CAAC,IAAG,QAAQ,CAAC,EAAE,SAAS,WAAA,EAAE,CAAC,CAAO,CACzE,CACP,CAAC;AACJ,CAAC;AAcD,SAAS,aAAa,CAAC,EAUF;QATnB,SAAS,eAAA,EACT,WAAW,iBAAA,EACX,mBAAmB,yBAAA,EACnB,UAAU,gBAAA,EACV,mBAAmB,yBAAA,EACnB,WAAW,iBAAA,EACX,gBAAgB,sBAAA,EAChB,WAAW,iBAAA,EACX,wBAAwB,8BAAA;IAExB,IAAM,QAAQ,GAAG,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAC5G,IAAM,sBAAsB,GAAG,YAAY,CAAC,WAAW,CAAC,CAAC;IACzD,IAAM,wBAAwB,GAAG,UAAU,CAAC,CAAC,uBAAM,UAAU,GAAK,sBAAsB,EAAG,CAAC,CAAC,EAAE,CAAC;IAChG,IAAM,eAAe,GAAqD,sBAAsB,CAC9F,mBAAmB,EACnB,gBAAgB,EAChB,WAAW,EACX,UAAC,EAAsB;YAApB,aAAa,mBAAA,EAAE,GAAG,SAAA;QAAO,OAAA,CAAC;YAC3B,KAAK,EAAE,GAAG;YACV,KAAK,EAAE,aAAa;YACpB,iBAAiB,EAAE,IAAI;SACxB,CAAC;IAJ0B,CAI1B,CACH,CAAC;IACF,IAAM,mBAAmB,GAAG;QAC1B,KAAK,EAAE,WAAW,CAAC,kBAAkB;QACrC,KAAK,EAAE,SAAS;KACjB,CAAC;IACF,IAAI,CAAC,wBAAwB,EAAE;QAC7B,eAAe,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;KAC9C;IACD,OAAO,CACL,oBAAC,cAAc,aACb,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,eAAe,EACxB,cAAc,EACZ,QAAQ;YACN,CAAC,CAAC;gBACE,KAAK,EAAE,WAAW,aAAX,WAAW,cAAX,WAAW,GAAI,SAAS;gBAC/B,KAAK,EAAE,QAAQ,CAAC,aAAa;aAC9B;YACH,CAAC,CAAC,mBAAmB,EAEzB,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,mBAAmB,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,EAAlD,CAAkD,IAC7D,wBAAwB,EAC5B,CACH,CAAC;AACJ,CAAC;AAWD,SAAS,aAAa,CAAC,EAOF;QANnB,SAAS,eAAA,EACT,WAAW,iBAAA,EACX,QAAQ,cAAA,EACR,gBAAgB,sBAAA,EAChB,mBAAmB,yBAAA,EACnB,WAAW,iBAAA;IAEX,IAAM,QAAQ,GAAG,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAC5G,IAAM,iBAAiB,GAAyB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAC5D,IAAM,eAAe,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,CAAC;QACtG,KAAK,EAAE,QAAQ;QACf,KAAK,EAAE,QAAQ;QACf,WAAW,EAAE,qBAAqB,CAAC,QAAQ,EAAE,WAAW,CAAC;KAC1D,CAAC,EAJqG,CAIrG,CAAC,CAAC;IACJ,OAAO,CACL,oBAAC,cAAc,IACb,SAAS,EAAE,SAAS,EACpB,OAAO,EAAE,eAAe,EACxB,cAAc,EAAC,QAAQ,EACvB,cAAc,EACZ,QAAQ;YACN,CAAC,CAAC;gBACE,KAAK,EAAE,QAAQ;gBACf,KAAK,EAAE,QAAQ;gBACf,WAAW,EAAE,qBAAqB,CAAC,QAAQ,EAAE,WAAW,CAAC;aAC1D;YACH,CAAC,CAAC,IAAI,EAEV,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,gBAAgB,CAAC,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,KAA2B,CAAC,EAArE,CAAqE,GACpF,CACH,CAAC;AACJ,CAAC;AAeD,SAAS,UAAU,CAAC,EAWF;QAVhB,SAAS,eAAA,EACT,WAAW,iBAAA,EACX,QAAQ,cAAA,EACR,KAAK,WAAA,EACL,aAAa,mBAAA,EACb,UAAU,gBAAA,EACV,mBAAmB,yBAAA,EACnB,gBAAgB,sBAAA,EAChB,WAAW,iBAAA,EACX,WAAW,iBAAA;IAEX,IAAM,QAAQ,GAAG,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,gBAAgB,CAAC,mBAAmB,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;IAC5G,IAAM,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,kBAAkB,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC,GAAG,CAAC,UAAC,EAAS;YAAP,KAAK,WAAA;QAAO,OAAA,CAAC,EAAE,KAAK,OAAA,EAAE,CAAC;IAAX,CAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACpH,IAAM,wBAAwB,GAAG,YAAY,CAAC,WAAW,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;IACzE,IAAM,yBAAyB,GAAG,WAAW;QAC3C,CAAC,uBAAM,wBAAwB,GAAK,UAAU,EAC9C,CAAC,CAAC,EAAE,KAAK,EAAE,UAAU,CAAC,KAAK,EAAE,CAAC;IAChC,OAAO,CACL,oBAAC,mBAAmB,aAClB,SAAS,EAAE,SAAS,EACpB,gBAAgB,EAAE,WAAW,CAAC,gBAAgB,EAC9C,KAAK,EAAE,KAAK,aAAL,KAAK,cAAL,KAAK,GAAI,EAAE,EAClB,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAA7B,CAA6B,EAC5C,QAAQ,EAAE,CAAC,QAAQ,EACnB,OAAO,EAAE,YAAY,IACjB,yBAAyB,IAC7B,aAAa,EAAE,IAAI,IACnB,CACH,CAAC;AACJ,CAAC;AASD,SAAS,eAAe,CAAC,EAAmE;QAAjE,WAAW,iBAAA,EAAE,QAAQ,cAAA,EAAE,QAAQ,cAAA,EAAE,QAAQ,cAAA;IAClE,OAAO,CACL,6BAAK,SAAS,EAAE,MAAM,CAAC,cAAc,CAAC;QACnC,QAAQ;QAET,6BAAK,SAAS,EAAE,MAAM,CAAC,sBAAsB,CAAC;YAC5C,oBAAC,cAAc,IAAC,OAAO,EAAC,MAAM,EAAC,SAAS,EAAE,MAAM,CAAC,qBAAqB,CAAC,EAAE,OAAO,EAAE,QAAQ,IACvF,WAAW,CAAC,gBAAgB,CACd;YACjB,oBAAC,cAAc,IAAC,SAAS,EAAE,MAAM,CAAC,qBAAqB,CAAC,EAAE,OAAO,EAAE,QAAQ,IACxE,WAAW,CAAC,eAAe,CACb,CACb,CACF,CACP,CAAC;AACJ,CAAC;AAkBD,MAAM,UAAU,WAAW,CAAC,EAaT;QAZjB,eAAe,qBAAA,EACf,UAAU,gBAAA,EACV,gBAAgB,sBAAA,EAChB,wBAAwB,8BAAA,EACxB,gBAAgB,sBAAA,EAChB,gBAAgB,sBAAA,EAChB,mBAAmB,yBAAA,EACnB,WAAW,iBAAA,EACX,WAAW,iBAAA,EACX,QAAQ,cAAA,EACR,KAAK,WAAA,EACL,gBAAgB,sBAAA;IAEV,IAAA,KAAsC,QAAQ,CAAQ,KAAK,CAAC,EAA3D,cAAc,QAAA,EAAE,iBAAiB,QAA0B,CAAC;IACnE,IAAM,UAAU,GAAG,MAAM,CAAqB,IAAI,CAAC,CAAC;IACpD,IAAM,YAAY,GAAG;QACnB,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;IAC5D,CAAC,CAAC;IAEF,IAAM,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC;IAC/C,IAAM,mBAAmB,GAAG,UAAC,cAAkC;QAC7D,IAAM,iBAAiB,GAAG,mBAAmB,CAAC,MAAM,CAClD,UAAC,GAAG,EAAE,QAAQ,IAAK,OAAA,CAAC,QAAQ,CAAC,GAAG,KAAK,cAAc,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAlD,CAAkD,EACrE,SAAS,CACV,CAAC;QACF,IAAM,gBAAgB,GAAG,iBAAiB,CAAC,CAAC,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC;QACxG,IAAM,QAAQ,GACZ,cAAc,CAAC,QAAQ,IAAI,gBAAgB,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACjF,CAAC,CAAC,cAAc,CAAC,QAAQ;YACzB,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAC1B,iBAAiB,uBAAM,cAAc,KAAE,WAAW,EAAE,cAAc,EAAE,QAAQ,UAAA,IAAG,CAAC;IAClF,CAAC,CAAC;IAEF,IAAM,QAAQ,GAAG,cAAc,CAAC,QAAQ,CAAC;IACzC,IAAM,gBAAgB,GAAG,UAAC,WAA+B;QACvD,iBAAiB,uBAAM,cAAc,KAAE,QAAQ,EAAE,WAAW,IAAG,CAAC;IAClE,CAAC,CAAC;IAEF,IAAM,KAAK,GAAG,cAAc,CAAC,KAAK,CAAC;IACnC,IAAM,aAAa,GAAG,UAAC,QAAgB;QACrC,iBAAiB,uBAAM,cAAc,KAAE,KAAK,EAAE,QAAQ,IAAG,CAAC;IAC5D,CAAC,CAAC;IAEF,OAAO,CACL,oBAAC,eAAe,IACd,GAAG,EAAE,UAAU,EACf,SAAS,EAAE,MAAM,CAAC,aAAa,CAAC,EAChC,WAAW,EAAC,MAAM,EAClB,MAAM,EAAE,WAAW,CAAC,eAAe,EACnC,IAAI,EAAC,OAAO,EACZ,QAAQ,EAAC,OAAO,EAChB,gBAAgB,EAAE,WAAW,CAAC,gBAAgB,EAC9C,QAAQ,EAAE,cAAM,OAAA,iBAAiB,CAAC,KAAK,CAAC,EAAxB,CAAwB,EACxC,gBAAgB,EAAE,gBAAgB,EAClC,OAAO,EACL,oBAAC,eAAe,IACd,WAAW,EAAE,WAAW,EACxB,QAAQ,EAAE,YAAY,EACtB,QAAQ,EAAE;gBACR,QAAQ,CAAC,cAAuB,CAAC,CAAC;gBAClC,YAAY,EAAE,CAAC;YACjB,CAAC;YAED,oBAAC,oBAAoB,IAAC,IAAI,EAAC,GAAG;gBAC5B,oBAAC,gBAAgB,IAAC,KAAK,EAAE,WAAW,CAAC,YAAY,EAAE,SAAS,EAAE,MAAM,CAAC,mBAAmB,CAAC,IACtF,UAAC,EAAa;wBAAX,SAAS,eAAA;oBAAO,OAAA,CAClB,oBAAC,aAAa,IACZ,SAAS,EAAE,SAAS,EACpB,WAAW,EAAE,WAAW,EACxB,mBAAmB,EAAE,mBAAmB,EACxC,UAAU,EAAE,eAAe,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,EAC/C,mBAAmB,EAAE,mBAAmB,EACxC,WAAW,EAAE,WAAW,EACxB,gBAAgB,EAAE,gBAAgB,EAClC,WAAW,EAAE,WAAW,EACxB,wBAAwB,EAAE,wBAAwB,GAClD,CACH;gBAZmB,CAYnB,CACgB;gBAEnB,oBAAC,gBAAgB,IAAC,KAAK,EAAE,WAAW,CAAC,YAAY,EAAE,SAAS,EAAE,MAAM,CAAC,mBAAmB,CAAC,IACtF,UAAC,EAAa;wBAAX,SAAS,eAAA;oBAAO,OAAA,CAClB,oBAAC,aAAa,IACZ,SAAS,EAAE,SAAS,EACpB,WAAW,EAAE,WAAW,EACxB,QAAQ,EAAE,QAAQ,EAClB,gBAAgB,EAAE,gBAAgB,EAClC,mBAAmB,EAAE,mBAAmB,EACxC,WAAW,EAAE,WAAW,GACxB,CACH;gBATmB,CASnB,CACgB;gBAEnB,oBAAC,gBAAgB,IAAC,KAAK,EAAE,WAAW,CAAC,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC,gBAAgB,CAAC,IAChF,UAAC,EAAa;wBAAX,SAAS,eAAA;oBAAO,OAAA,CAClB,oBAAC,UAAU,IACT,SAAS,EAAE,SAAS,EACpB,WAAW,EAAE,WAAW,EACxB,QAAQ,EAAE,QAAQ,EAClB,KAAK,EAAE,KAAK,EACZ,aAAa,EAAE,aAAa,EAC5B,UAAU,EAAE,UAAU,EACtB,mBAAmB,EAAE,mBAAmB,EACxC,gBAAgB,EAAE,gBAAgB,EAClC,WAAW,EAAE,WAAW,EACxB,WAAW,EAAE,WAAW,GACxB,CACH;gBAbmB,CAanB,CACgB,CACE,CACP,IAGnB,gBAAgB,CACD,CACnB,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { SelectProps } from '../select/interfaces';\nimport InternalSelect from '../select/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport InternalAutosuggest from '../autosuggest/internal';\nimport InternalPopover, { InternalPopoverRef } from '../popover/internal';\nimport { InternalButton } from '../button/internal';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index';\n\nimport {\n  ComparisonOperator,\n  FilteringOption,\n  FilteringProperty,\n  GroupText,\n  I18nStrings,\n  LoadItemsDetail,\n  Token,\n} from './interfaces';\nimport styles from './styles.css.js';\nimport { useLoadItems } from './use-load-items';\nimport {\n  getAllowedOperators,\n  getPropertyOptions,\n  getPropertyByKey,\n  operatorToDescription,\n  getPropertySuggestions,\n} from './controller';\nimport { NonCancelableEventHandler } from '../internal/events';\nimport { DropdownStatusProps } from '../internal/components/dropdown-status/interfaces';\n\nconst freeTextOperators: ComparisonOperator[] = [':', '!:'];\n\ninterface TokenEditorFieldProps {\n  label: React.ReactNode;\n  className: string;\n  children: ({ controlId }: { controlId: string }) => React.ReactNode;\n}\n\nfunction TokenEditorField({ className, label, children }: TokenEditorFieldProps) {\n  const controlId = useUniqueId();\n  return (\n    <div className={clsx(styles['token-editor-line'], className)}>\n      <label className={styles['token-editor-label']} htmlFor={controlId}>\n        {label}\n      </label>\n      <div className={styles['token-editor-field']}>{children({ controlId })}</div>\n    </div>\n  );\n}\n\ninterface PropertyInputProps {\n  controlId: string;\n  asyncProps: null | DropdownStatusProps;\n  customGroupsText: readonly GroupText[];\n  disableFreeTextFiltering?: boolean;\n  filteringProperties: readonly FilteringProperty[];\n  i18nStrings: I18nStrings;\n  onChangePropertyKey: (propertyKey: undefined | string) => void;\n  onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>;\n  propertyKey: undefined | string;\n}\n\nfunction PropertyInput({\n  controlId,\n  propertyKey,\n  onChangePropertyKey,\n  asyncProps,\n  filteringProperties,\n  onLoadItems,\n  customGroupsText,\n  i18nStrings,\n  disableFreeTextFiltering,\n}: PropertyInputProps) {\n  const property = propertyKey !== undefined ? getPropertyByKey(filteringProperties, propertyKey) : undefined;\n  const propertySelectHandlers = useLoadItems(onLoadItems);\n  const asyncPropertySelectProps = asyncProps ? { ...asyncProps, ...propertySelectHandlers } : {};\n  const propertyOptions: (SelectProps.Option | SelectProps.OptionGroup)[] = getPropertySuggestions(\n    filteringProperties,\n    customGroupsText,\n    i18nStrings,\n    ({ propertyLabel, key }) => ({\n      value: key,\n      label: propertyLabel,\n      dontCloseOnSelect: true,\n    })\n  );\n  const allPropertiesOption = {\n    label: i18nStrings.allPropertiesLabel,\n    value: undefined,\n  };\n  if (!disableFreeTextFiltering) {\n    propertyOptions.unshift(allPropertiesOption);\n  }\n  return (\n    <InternalSelect\n      controlId={controlId}\n      options={propertyOptions}\n      selectedOption={\n        property\n          ? {\n              value: propertyKey ?? undefined,\n              label: property.propertyLabel,\n            }\n          : allPropertiesOption\n      }\n      onChange={e => onChangePropertyKey(e.detail.selectedOption.value)}\n      {...asyncPropertySelectProps}\n    />\n  );\n}\n\ninterface OperatorInputProps {\n  controlId: string;\n  filteringProperties: readonly FilteringProperty[];\n  i18nStrings: I18nStrings;\n  onChangeOperator: (operator: ComparisonOperator) => void;\n  operator: undefined | ComparisonOperator;\n  propertyKey: undefined | string;\n}\n\nfunction OperatorInput({\n  controlId,\n  propertyKey,\n  operator,\n  onChangeOperator,\n  filteringProperties,\n  i18nStrings,\n}: OperatorInputProps) {\n  const property = propertyKey !== undefined ? getPropertyByKey(filteringProperties, propertyKey) : undefined;\n  const freeTextOperators: ComparisonOperator[] = [':', '!:'];\n  const operatorOptions = (property ? getAllowedOperators(property) : freeTextOperators).map(operator => ({\n    value: operator,\n    label: operator,\n    description: operatorToDescription(operator, i18nStrings),\n  }));\n  return (\n    <InternalSelect\n      controlId={controlId}\n      options={operatorOptions}\n      triggerVariant=\"option\"\n      selectedOption={\n        operator\n          ? {\n              value: operator,\n              label: operator,\n              description: operatorToDescription(operator, i18nStrings),\n            }\n          : null\n      }\n      onChange={e => onChangeOperator(e.detail.selectedOption.value as ComparisonOperator)}\n    />\n  );\n}\n\ninterface ValueInputProps {\n  controlId: string;\n  asyncProps: DropdownStatusProps;\n  filteringOptions: readonly FilteringOption[];\n  filteringProperties: readonly FilteringProperty[];\n  i18nStrings: I18nStrings;\n  onChangeValue: (value: string) => void;\n  onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>;\n  operator: undefined | ComparisonOperator;\n  propertyKey: undefined | string;\n  value: undefined | string;\n}\n\nfunction ValueInput({\n  controlId,\n  propertyKey,\n  operator,\n  value,\n  onChangeValue,\n  asyncProps,\n  filteringProperties,\n  filteringOptions,\n  onLoadItems,\n  i18nStrings,\n}: ValueInputProps) {\n  const property = propertyKey !== undefined ? getPropertyByKey(filteringProperties, propertyKey) : undefined;\n  const valueOptions = property ? getPropertyOptions(property, filteringOptions).map(({ value }) => ({ value })) : [];\n  const valueAutosuggestHandlers = useLoadItems(onLoadItems, '', property);\n  const asyncValueAutosuggesProps = propertyKey\n    ? { ...valueAutosuggestHandlers, ...asyncProps }\n    : { empty: asyncProps.empty };\n  return (\n    <InternalAutosuggest\n      controlId={controlId}\n      enteredTextLabel={i18nStrings.enteredTextLabel}\n      value={value ?? ''}\n      onChange={e => onChangeValue(e.detail.value)}\n      disabled={!operator}\n      options={valueOptions}\n      {...asyncValueAutosuggesProps}\n      virtualScroll={true}\n    />\n  );\n}\n\ninterface TokenEditorFormProps {\n  i18nStrings: I18nStrings;\n  onCancel(): void;\n  onSubmit(): void;\n  children: React.ReactNode;\n}\n\nfunction TokenEditorForm({ i18nStrings, onCancel, onSubmit, children }: TokenEditorFormProps) {\n  return (\n    <div className={styles['token-editor']}>\n      {children}\n\n      <div className={styles['token-editor-actions']}>\n        <InternalButton variant=\"link\" className={styles['token-editor-cancel']} onClick={onCancel}>\n          {i18nStrings.cancelActionText}\n        </InternalButton>\n        <InternalButton className={styles['token-editor-submit']} onClick={onSubmit}>\n          {i18nStrings.applyActionText}\n        </InternalButton>\n      </div>\n    </div>\n  );\n}\n\ninterface TokenEditorProps {\n  asyncProperties?: boolean;\n  asyncProps: DropdownStatusProps;\n  customGroupsText: readonly GroupText[];\n  disabled?: boolean;\n  disableFreeTextFiltering?: boolean;\n  expandToViewport?: boolean;\n  filteringOptions: readonly FilteringOption[];\n  filteringProperties: readonly FilteringProperty[];\n  i18nStrings: I18nStrings;\n  onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>;\n  setToken: (newToken: Token) => void;\n  token: Token;\n  triggerComponent?: React.ReactNode;\n}\n\nexport function TokenEditor({\n  asyncProperties,\n  asyncProps,\n  customGroupsText,\n  disableFreeTextFiltering,\n  expandToViewport,\n  filteringOptions,\n  filteringProperties,\n  i18nStrings,\n  onLoadItems,\n  setToken,\n  token,\n  triggerComponent,\n}: TokenEditorProps) {\n  const [temporaryToken, setTemporaryToken] = useState<Token>(token);\n  const popoverRef = useRef<InternalPopoverRef>(null);\n  const closePopover = () => {\n    popoverRef.current && popoverRef.current.dismissPopover();\n  };\n\n  const propertyKey = temporaryToken.propertyKey;\n  const onChangePropertyKey = (newPropertyKey: undefined | string) => {\n    const filteringProperty = filteringProperties.reduce<FilteringProperty | undefined>(\n      (acc, property) => (property.key === newPropertyKey ? property : acc),\n      undefined\n    );\n    const allowedOperators = filteringProperty ? getAllowedOperators(filteringProperty) : freeTextOperators;\n    const operator =\n      temporaryToken.operator && allowedOperators.indexOf(temporaryToken.operator) !== -1\n        ? temporaryToken.operator\n        : allowedOperators[0];\n    setTemporaryToken({ ...temporaryToken, propertyKey: newPropertyKey, operator });\n  };\n\n  const operator = temporaryToken.operator;\n  const onChangeOperator = (newOperator: ComparisonOperator) => {\n    setTemporaryToken({ ...temporaryToken, operator: newOperator });\n  };\n\n  const value = temporaryToken.value;\n  const onChangeValue = (newValue: string) => {\n    setTemporaryToken({ ...temporaryToken, value: newValue });\n  };\n\n  return (\n    <InternalPopover\n      ref={popoverRef}\n      className={styles['token-label']}\n      triggerType=\"text\"\n      header={i18nStrings.editTokenHeader}\n      size=\"large\"\n      position=\"right\"\n      dismissAriaLabel={i18nStrings.dismissAriaLabel}\n      __onOpen={() => setTemporaryToken(token)}\n      renderWithPortal={expandToViewport}\n      content={\n        <TokenEditorForm\n          i18nStrings={i18nStrings}\n          onCancel={closePopover}\n          onSubmit={() => {\n            setToken(temporaryToken as Token);\n            closePopover();\n          }}\n        >\n          <InternalSpaceBetween size=\"l\">\n            <TokenEditorField label={i18nStrings.propertyText} className={styles['property-selector']}>\n              {({ controlId }) => (\n                <PropertyInput\n                  controlId={controlId}\n                  propertyKey={propertyKey}\n                  onChangePropertyKey={onChangePropertyKey}\n                  asyncProps={asyncProperties ? asyncProps : null}\n                  filteringProperties={filteringProperties}\n                  onLoadItems={onLoadItems}\n                  customGroupsText={customGroupsText}\n                  i18nStrings={i18nStrings}\n                  disableFreeTextFiltering={disableFreeTextFiltering}\n                />\n              )}\n            </TokenEditorField>\n\n            <TokenEditorField label={i18nStrings.operatorText} className={styles['operator-selector']}>\n              {({ controlId }) => (\n                <OperatorInput\n                  controlId={controlId}\n                  propertyKey={propertyKey}\n                  operator={operator}\n                  onChangeOperator={onChangeOperator}\n                  filteringProperties={filteringProperties}\n                  i18nStrings={i18nStrings}\n                />\n              )}\n            </TokenEditorField>\n\n            <TokenEditorField label={i18nStrings.valueText} className={styles['value-selector']}>\n              {({ controlId }) => (\n                <ValueInput\n                  controlId={controlId}\n                  propertyKey={propertyKey}\n                  operator={operator}\n                  value={value}\n                  onChangeValue={onChangeValue}\n                  asyncProps={asyncProps}\n                  filteringProperties={filteringProperties}\n                  filteringOptions={filteringOptions}\n                  onLoadItems={onLoadItems}\n                  i18nStrings={i18nStrings}\n                />\n              )}\n            </TokenEditorField>\n          </InternalSpaceBetween>\n        </TokenEditorForm>\n      }\n    >\n      {triggerComponent}\n    </InternalPopover>\n  );\n}\n"]}