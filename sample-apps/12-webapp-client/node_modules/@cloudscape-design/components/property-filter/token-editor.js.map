{"version":3,"file":"token-editor.js","sourceRoot":"","sources":["../../../src/property-filter/token-editor.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useState, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { SelectProps } from '../select/interfaces';\nimport InternalSelect from '../select/internal';\nimport InternalSpaceBetween from '../space-between/internal';\nimport InternalAutosuggest from '../autosuggest/internal';\nimport { AutosuggestProps } from '../autosuggest/interfaces';\nimport InternalPopover, { InternalPopoverRef } from '../popover/internal';\nimport { InternalButton } from '../button/internal';\nimport { useUniqueId } from '../internal/hooks/use-unique-id/index';\n\nimport { PropertyFilterProps } from './interfaces';\nimport styles from './styles.css.js';\nimport { useLoadItems } from './use-load-items';\nimport {\n  getAllowedOperators,\n  getPropertyOptions,\n  getPropertyByKey,\n  operatorToDescription,\n  getPropertySuggestions,\n} from './controller';\n\ninterface TokenEditorProps\n  extends Pick<\n    PropertyFilterProps,\n    | 'filteringProperties'\n    | 'filteringOptions'\n    | 'onLoadItems'\n    | 'i18nStrings'\n    | 'asyncProperties'\n    | 'customGroupsText'\n    | 'disableFreeTextFiltering'\n    | 'disabled'\n    | 'expandToViewport'\n  > {\n  token: PropertyFilterProps.Token;\n  triggerComponent?: React.ReactNode;\n  setToken: (newToken: PropertyFilterProps.Token) => void;\n  asyncProps: Pick<\n    AutosuggestProps,\n    'empty' | 'loadingText' | 'finishedText' | 'errorText' | 'recoveryText' | 'statusType'\n  >;\n}\n\nconst EditingFields = ({\n  temporaryToken,\n  setTemporaryToken,\n  asyncProps,\n  asyncProperties,\n  filteringProperties,\n  filteringOptions,\n  onLoadItems,\n  customGroupsText,\n  i18nStrings,\n  disableFreeTextFiltering,\n}: TokenEditorProps & {\n  temporaryToken: PropertyFilterProps.Token;\n  setTemporaryToken: (token: PropertyFilterProps.Token) => void;\n}) => {\n  const fields = [];\n  const property =\n    temporaryToken.propertyKey !== undefined\n      ? getPropertyByKey(filteringProperties, temporaryToken.propertyKey)\n      : undefined;\n  const propertySelectHandlers = useLoadItems(onLoadItems);\n  const asyncPropertySelectProps = asyncProperties\n    ? {\n        ...asyncProps,\n        ...propertySelectHandlers,\n      }\n    : {};\n  const propertyOptions: (SelectProps.Option | SelectProps.OptionGroup)[] = getPropertySuggestions(\n    filteringProperties,\n    customGroupsText,\n    i18nStrings,\n    ({ propertyLabel, key }) => ({\n      value: key,\n      label: propertyLabel,\n      dontCloseOnSelect: true,\n    })\n  );\n  const allPropertiesOption = {\n    label: i18nStrings.allPropertiesLabel,\n    value: undefined,\n  };\n  if (!disableFreeTextFiltering) {\n    propertyOptions.unshift(allPropertiesOption);\n  }\n\n  const propertyControlId = useUniqueId('property');\n  const propertySelect = (\n    <InternalSelect\n      controlId={propertyControlId}\n      options={propertyOptions}\n      selectedOption={\n        property\n          ? {\n              value: temporaryToken.propertyKey,\n              label: property.propertyLabel,\n            }\n          : allPropertiesOption\n      }\n      onChange={e => {\n        const filteringProperty = e.detail.selectedOption?.value\n          ? filteringProperties.reduce<PropertyFilterProps.FilteringProperty | undefined>(\n              (acc, property) => (property.key === e.detail.selectedOption.value ? property : acc),\n              undefined\n            )\n          : undefined;\n        const allowedOperators: PropertyFilterProps.ComparisonOperator[] = filteringProperty\n          ? getAllowedOperators(filteringProperty)\n          : freeTextOperators;\n        let operator = temporaryToken.operator;\n        if (temporaryToken.operator && allowedOperators.indexOf(temporaryToken.operator) === -1) {\n          operator = allowedOperators[0];\n        }\n        setTemporaryToken({\n          ...temporaryToken,\n          operator,\n          propertyKey: e.detail.selectedOption.value,\n        });\n      }}\n      {...asyncPropertySelectProps}\n    />\n  );\n  fields.push({\n    text: i18nStrings.propertyText,\n    className: styles['property-selector'],\n    control: propertySelect,\n    controlId: propertyControlId,\n  });\n\n  const operatorText = temporaryToken.operator;\n  const freeTextOperators: PropertyFilterProps.ComparisonOperator[] = [':', '!:'];\n  const operatorOptions = (property ? getAllowedOperators(property) : freeTextOperators).map(operator => ({\n    value: operator,\n    label: operator,\n    description: operatorToDescription(operator, i18nStrings),\n  }));\n  const operatorControlId = useUniqueId('operator');\n  const operatorSelect = temporaryToken && (\n    <InternalSelect\n      controlId={operatorControlId}\n      options={operatorOptions}\n      triggerVariant=\"option\"\n      selectedOption={\n        operatorText\n          ? {\n              value: operatorText,\n              label: operatorText,\n              description: operatorToDescription(operatorText, i18nStrings),\n            }\n          : null\n      }\n      onChange={e => {\n        e.detail.selectedOption.value &&\n          setTemporaryToken({\n            ...temporaryToken,\n            operator: e.detail.selectedOption.value as PropertyFilterProps.ComparisonOperator,\n          });\n      }}\n      disabled={!temporaryToken}\n    />\n  );\n  fields.push({\n    text: i18nStrings.operatorText,\n    className: styles['operator-selector'],\n    control: operatorSelect,\n    controlId: operatorControlId,\n  });\n\n  const valueOptions = property ? getPropertyOptions(property, filteringOptions)?.map(({ value }) => ({ value })) : [];\n  const valueAutosuggestHandlers = useLoadItems(onLoadItems, '', property);\n  const asyncValueAutosuggesProps = temporaryToken.propertyKey\n    ? {\n        ...valueAutosuggestHandlers,\n        ...asyncProps,\n      }\n    : { empty: asyncProps.empty };\n  const valueControlId = useUniqueId('value');\n  const valueAutosuggest = temporaryToken && (\n    <InternalAutosuggest\n      controlId={valueControlId}\n      enteredTextLabel={i18nStrings.enteredTextLabel}\n      value={temporaryToken.value || ''}\n      onChange={e => {\n        setTemporaryToken({\n          ...temporaryToken,\n          value: e.detail.value,\n        });\n      }}\n      disabled={!operatorText}\n      options={valueOptions}\n      {...asyncValueAutosuggesProps}\n      virtualScroll={true}\n    />\n  );\n  fields.push({\n    text: i18nStrings.valueText,\n    className: styles['value-selector'],\n    control: valueAutosuggest,\n    controlId: valueControlId,\n  });\n  return (\n    <div>\n      <InternalSpaceBetween size=\"l\">\n        {fields.map(({ text, control, className, controlId }) => (\n          <div className={clsx(styles['token-editor-line'], className)} key={text}>\n            <label className={styles['token-editor-label']} htmlFor={controlId}>\n              {text}\n            </label>\n            <div className={styles['token-editor-field']}>{control}</div>\n          </div>\n        ))}\n      </InternalSpaceBetween>\n    </div>\n  );\n};\n\nexport const TokenEditor = (props: TokenEditorProps) => {\n  const { token, triggerComponent, setToken, i18nStrings, expandToViewport } = props;\n  const [temporaryToken, setTemporaryToken] = useState<PropertyFilterProps.Token>(token);\n  const popoverRef = useRef<InternalPopoverRef>(null);\n  const closePopover = () => {\n    popoverRef.current && popoverRef.current.dismissPopover();\n  };\n  return (\n    <InternalPopover\n      ref={popoverRef}\n      className={styles['token-label']}\n      triggerType=\"text\"\n      header={i18nStrings.editTokenHeader}\n      size=\"large\"\n      position=\"right\"\n      dismissAriaLabel={i18nStrings.dismissAriaLabel}\n      __onOpen={() => setTemporaryToken(token)}\n      renderWithPortal={expandToViewport}\n      content={\n        <div className={styles['token-editor']}>\n          <EditingFields {...props} temporaryToken={temporaryToken} setTemporaryToken={setTemporaryToken} />\n          <div className={styles['token-editor-actions']}>\n            <InternalButton variant=\"link\" className={styles['token-editor-cancel']} onClick={closePopover}>\n              {i18nStrings.cancelActionText}\n            </InternalButton>\n            <InternalButton\n              className={styles['token-editor-submit']}\n              onClick={() => {\n                setToken(temporaryToken as PropertyFilterProps.Token);\n                closePopover();\n              }}\n            >\n              {i18nStrings.applyActionText}\n            </InternalButton>\n          </div>\n        </div>\n      }\n    >\n      {triggerComponent}\n    </InternalPopover>\n  );\n};\n"]}