{"version":3,"file":"use-load-items.js","sourceRoot":"","sources":["../../../src/property-filter/use-load-items.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,sBAAsB,EAA6B,MAAM,0BAA0B,CAAC;AAK7F;;;;;;GAMG;AACH,MAAM,CAAC,IAAM,YAAY,GAAG,UAC1B,WAAwD,EACxD,kBAA2B,EAC3B,wBAA4C,EAC5C,oBAA6B,EAC7B,wBAA6C;IAE7C,IAAM,OAAO,GAAG,MAAM,CAAU,KAAK,CAAC,CAAC;IACvC,IAAM,UAAU,GAAG;QACjB,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;IACzB,CAAC,CAAC;IACF,IAAM,aAAa,GAAG,UAAC,MAAyE;;QAC9F,sBAAsB,CAAC,WAAW,wBAC7B,MAAM,KACT,aAAa,EAAE,MAAA,oBAAoB,aAApB,oBAAoB,cAApB,oBAAoB,GAAI,MAAM,CAAC,aAAa,mCAAI,EAAE,EACjE,iBAAiB,EAAE,wBAAwB,EAC3C,iBAAiB,EAAE,wBAAwB,IAC3C,CAAC;QACH,OAAO,CAAC,OAAO,GAAG,KAAK,CAAC;IAC1B,CAAC,CAAC;IACF,IAAM,WAAW,GAAG;QAClB,IAAI,OAAO,CAAC,OAAO,EAAE;YACnB,aAAa,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,aAAa,EAAE,kBAAkB,EAAE,CAAC,CAAC;SACxF;IACH,CAAC,CAAC;IACF,IAAM,eAAe,GAAgE,UAAC,EAAU;YAAR,MAAM,YAAA;QAC5F,OAAA,aAAa,CAAC,MAAM,CAAC;IAArB,CAAqB,CAAC;IACxB,OAAO;QACL,MAAM,EAAE,UAAU;QAClB,OAAO,EAAE,WAAW;QACpB,WAAW,EAAE,eAAe;KAC7B,CAAC;AACJ,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useRef } from 'react';\n\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events/index';\nimport { AutosuggestProps } from '../autosuggest/interfaces';\n\nimport { ComparisonOperator, FilteringProperty, LoadItemsDetail } from './interfaces';\n\n/**\n * This hook generates `onBlur`, `onFocus` and `onLoadItems` handlers that make sure an `onLoadItems` event\n * fires exactly once every time control they are used on gets focused.\n * It is neccesary to do this because Autosuggest and Select dedupe their `onLoadItems` events stopping\n * the same event from firing twice in a row. This means, refocusing the control sometimes results in\n * `onLoadItems` firing, but sometimes not.\n */\nexport const useLoadItems = (\n  onLoadItems?: NonCancelableEventHandler<LoadItemsDetail>,\n  focusFilteringText?: string,\n  currentFilteringProperty?: FilteringProperty,\n  currentFilteringText?: string,\n  currentFilteringOperator?: ComparisonOperator\n) => {\n  const focusIn = useRef<boolean>(false);\n  const handleBlur = () => {\n    focusIn.current = true;\n  };\n  const fireLoadItems = (detail: { firstPage: boolean; samePage: boolean; filteringText?: string }) => {\n    fireNonCancelableEvent(onLoadItems, {\n      ...detail,\n      filteringText: currentFilteringText ?? detail.filteringText ?? '',\n      filteringProperty: currentFilteringProperty,\n      filteringOperator: currentFilteringOperator,\n    });\n    focusIn.current = false;\n  };\n  const handleFocus = () => {\n    if (focusIn.current) {\n      fireLoadItems({ firstPage: true, samePage: false, filteringText: focusFilteringText });\n    }\n  };\n  const handleLoadItems: NonCancelableEventHandler<AutosuggestProps.LoadItemsDetail> = ({ detail }) =>\n    fireLoadItems(detail);\n  return {\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onLoadItems: handleLoadItems,\n  };\n};\n"]}