{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/segmented-control/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { NonCancelableEventHandler } from '../internal/events';\nimport { BaseComponentProps } from '../internal/base-component';\nimport { IconProps } from '../icon/interfaces';\nimport React from 'react';\n\nexport interface SegmentedControlProps extends BaseComponentProps {\n  /**\n   * ID of the selected option. If you want to clear the selection, use `null`.\n   */\n  selectedId: string | null;\n\n  /**\n   * An array of objects representing options. Each segment has the following properties:\n   *\n   * - `id` (string) - The ID of the segment.\n   * - `disabled` [boolean] - (Optional) Determines whether the segment is disabled, which prevents the user from selecting it.\n   * - `iconName` (string) - (Optional) Specifies the name of the icon, used with the [icon component](/components/icon/).\n   * - `iconAlt` (string) - (Optional) Specifies alternate text for the icon when using `iconUrl`, or `iconName` without `text`.\n   *            This is required when you use an icon without `text`.\n   * - `iconUrl` (string) - (Optional) Specifies the URL of a custom icon.\n   * - `iconSvg` (ReactNode) - (Optional) Custom SVG icon. Equivalent to the `svg` slot of the [icon component](/components/icon/).\n   * - `text` (string) - (Optional) Specifies the text of the segment.\n   */\n  options?: ReadonlyArray<SegmentedControlProps.Option>;\n\n  /**\n   * Defines the label of the entire segmented control. In the standard view (that is, all individual segments are visible),\n   * this label is used as `aria-label` on the group of segments. In a narrow container, where this component is displayed as a select component,\n   * the label is visible and attached to the select component, unless `ariaLabelledBy` is defined. Don't use `label` and `ariaLabelledBy` at the same time.\n   */\n  label?: string;\n\n  /**\n   * Adds aria-labelledby to the component. Create a visually hidden element with an ID and set this property to that ID. If you don't want the label to be visible in narrow containers, use this property instead of `label`.\n   */\n  ariaLabelledby?: string;\n\n  /**\n   * Called when the user selects a different segment.\n   */\n  onChange?: NonCancelableEventHandler<SegmentedControlProps.ChangeDetail>;\n}\n\nexport namespace SegmentedControlProps {\n  export interface Option {\n    id: string;\n    disabled?: boolean;\n    iconName?: IconProps.Name;\n    iconAlt?: string;\n    iconUrl?: string;\n    iconSvg?: React.ReactNode;\n    text?: string;\n  }\n\n  export interface ChangeDetail {\n    selectedId: string;\n  }\n}\n"]}