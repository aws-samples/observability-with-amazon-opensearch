{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/modal/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BaseComponentProps } from '../internal/base-component';\nimport React from 'react';\nimport { NonCancelableEventHandler } from '../internal/events';\n\nexport interface ModalProps extends BaseComponentProps {\n  /**\n   * Sets the width of the modal. `max` uses variable width up to the\n   * largest size allowed by the design guidelines. Other sizes\n   * (`small`/`medium`/`large`) have fixed widths.\n   */\n  size?: ModalProps.Size;\n  /**\n   * Determines whether the modal is displayed on the screen. Modals are hidden by default.\n   * Set this property to `true` to show them.\n   */\n  visible: boolean;\n  /**\n   * Adds an `aria-label` to the close button, for accessibility.\n   */\n  closeAriaLabel?: string;\n  /**\n   * Specifies a title for the modal. Although this can be empty, we suggest that you always provide a title.\n   */\n  header?: React.ReactNode;\n  /**\n   * Body of the modal.\n   */\n  children?: React.ReactNode;\n  /**\n   * Specifies a footer for the modal. If empty, the footer isn't displayed.\n   */\n  footer?: React.ReactNode;\n  /**\n   * Determines whether the modal content has padding. If `true`, removes the default padding from the content area.\n   */\n  disableContentPaddings?: boolean;\n  /**\n   * Called when a user closes the modal by using the close icon button,\n   * clicking outside of the modal, or pressing ESC.\n   * The event detail contains the `reason`, which can be any of the following:\n   * `['closeButton', 'overlay', 'keyboard']`.\n   */\n  onDismiss?: NonCancelableEventHandler<ModalProps.DismissDetail>;\n  /**\n   * Specifies the HTML element where the modal is rendered.\n   * If a modal root isn't provided, the modal will render to an element under `document.body`.\n   */\n  modalRoot?: HTMLElement;\n}\n\nexport namespace ModalProps {\n  export type Size = 'small' | 'medium' | 'large' | 'max';\n\n  export interface DismissDetail {\n    reason: string;\n  }\n}\n"]}