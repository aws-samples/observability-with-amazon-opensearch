{"version":3,"file":"versions-table.js","sourceRoot":"","sources":["../../../../src/s3-resource-selector/s3-modal/versions-table.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { S3ResourceSelectorProps } from '../interfaces';\nimport { getColumnAriaLabel, compareDates } from './table-utils';\nimport { TableProps } from '../../table/interfaces';\nimport { ForwardFocusRef } from '../../internal/hooks/forward-focus';\nimport { formatSize, formatDefault } from './column-formats';\nimport { BasicS3Table, getSharedI18Strings } from './basic-table';\nimport { joinObjectPath } from '../utils';\n\ninterface VersionsTableProps {\n  forwardFocusRef: React.Ref<ForwardFocusRef>;\n  pathSegments: ReadonlyArray<string>;\n  visibleColumns: ReadonlyArray<string>;\n  isItemDisabled: TableProps.IsItemDisabled<S3ResourceSelectorProps.Version> | undefined;\n  fetchData: S3ResourceSelectorProps['fetchVersions'];\n  i18nStrings: S3ResourceSelectorProps.I18nStrings | undefined;\n  isVisualRefresh?: boolean;\n  onSelect: (versionId: string) => void;\n}\n\nexport function VersionsTable({\n  forwardFocusRef,\n  pathSegments,\n  i18nStrings,\n  isVisualRefresh,\n  isItemDisabled,\n  fetchData,\n  visibleColumns,\n  onSelect,\n}: VersionsTableProps) {\n  return (\n    <BasicS3Table<S3ResourceSelectorProps.Version>\n      forwardFocusRef={forwardFocusRef}\n      trackBy=\"VersionId\"\n      fetchData={() => {\n        const [bucketName, ...rest] = pathSegments;\n        return fetchData(bucketName, joinObjectPath(rest));\n      }}\n      i18nStrings={{\n        ...getSharedI18Strings(i18nStrings),\n        header: i18nStrings?.selectionVersions,\n        filteringAriaLabel: i18nStrings?.labelFiltering(i18nStrings?.selectionVersions),\n        filteringPlaceholder: i18nStrings?.selectionVersionsSearchPlaceholder,\n        loadingText: i18nStrings?.selectionVersionsLoading,\n        emptyText: i18nStrings?.selectionVersionsNoItems,\n        selectionLabels: i18nStrings?.labelsVersionsSelection,\n      }}\n      isVisualRefresh={isVisualRefresh}\n      visibleColumns={visibleColumns}\n      isItemDisabled={isItemDisabled}\n      columnDefinitions={[\n        {\n          id: 'ID',\n          header: i18nStrings?.columnVersionID,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnVersionID),\n          sortingField: 'VersionId',\n          cell: item => item.VersionId,\n          minWidth: '250px',\n        },\n        {\n          id: 'LastModified',\n          header: i18nStrings?.columnVersionLastModified,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnVersionLastModified),\n          sortingComparator: (a, b) => compareDates(a.LastModified, b.LastModified),\n          cell: item => formatDefault(item.LastModified),\n        },\n        {\n          id: 'Size',\n          header: i18nStrings?.columnVersionSize,\n          ariaLabel: getColumnAriaLabel(i18nStrings, i18nStrings?.columnVersionSize),\n          sortingField: 'Size',\n          cell: item => formatSize(item.Size),\n        },\n      ]}\n      onSelect={item => onSelect(item?.VersionId ?? '')}\n    />\n  );\n}\n"]}