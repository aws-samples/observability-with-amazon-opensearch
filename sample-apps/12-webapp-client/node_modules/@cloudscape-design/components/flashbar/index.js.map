{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/flashbar/index.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { getBaseProps } from '../internal/base-component';\nimport styles from './styles.css.js';\nimport { Flash } from './flash';\nimport { useContainerBreakpoints } from '../internal/hooks/container-queries';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport VisualContext from '../internal/components/visual-context';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { useReducedMotion, useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { FlashbarProps } from './interfaces';\nimport { TransitionGroup } from 'react-transition-group';\nimport { Transition } from '../internal/components/transition';\nimport { TIMEOUT_FOR_ENTERING_ANIMATION } from './constant';\n\nexport { FlashbarProps };\n\nexport default function Flashbar({ items, ...restProps }: FlashbarProps) {\n  const { __internalRootRef } = useBaseComponent('Flashbar');\n  const [breakpoint, ref] = useContainerBreakpoints(['xs']);\n  const isRefresh = useVisualRefresh(__internalRootRef);\n  const baseProps = getBaseProps(restProps);\n\n  const mergedRef = useMergeRefs(ref, __internalRootRef);\n\n  // All the flash items should have ids so we can identify which DOM element is being removed from the DOM to animate it.\n  const motionDisabled = useReducedMotion(ref as any) || !isRefresh || (items && !items.every(item => 'id' in item));\n  // Motion will be disabled if any of the provided flash messages does not contain an `id`\n\n  const renderFlashItem = (item: FlashbarProps.MessageDefinition, index: number) => (\n    <Flash\n      key={item.id ?? index}\n      // eslint-disable-next-line react/forbid-component-props\n      className={clsx(isRefresh ? styles['flash-refresh'] : '')}\n      {...item}\n    />\n  );\n  const renderFlashItemsWithTransitions = (items: readonly FlashbarProps.MessageDefinition[]) => {\n    return (\n      <>\n        <TransitionGroup component={null}>\n          {items &&\n            items.map((item, index) => (\n              <Transition\n                transitionChangeDelay={{ entering: TIMEOUT_FOR_ENTERING_ANIMATION }}\n                key={item.id ?? index}\n                in={true}\n              >\n                {(state: string, transitionRootElement: React.Ref<HTMLDivElement> | undefined) => (\n                  <Flash\n                    ref={transitionRootElement}\n                    key={item.id ?? index}\n                    transitionState={state}\n                    // eslint-disable-next-line react/forbid-component-props\n                    className={clsx(isRefresh ? styles['flash-refresh'] : '')}\n                    {...item}\n                  />\n                )}\n              </Transition>\n            ))}\n        </TransitionGroup>\n      </>\n    );\n  };\n  return (\n    <div\n      {...baseProps}\n      className={clsx(baseProps.className, styles.flashbar, styles[`breakpoint-${breakpoint}`])}\n      ref={mergedRef}\n    >\n      <VisualContext contextName=\"flashbar\">\n        {items && (\n          <>\n            {motionDisabled\n              ? items.map((item, index) => renderFlashItem(item, index))\n              : renderFlashItemsWithTransitions(items)}\n          </>\n        )}\n      </VisualContext>\n    </div>\n  );\n}\n\napplyDisplayName(Flashbar, 'Flashbar');\n"]}