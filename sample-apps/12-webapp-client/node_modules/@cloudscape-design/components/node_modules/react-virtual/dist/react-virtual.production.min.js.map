{"version":3,"file":"react-virtual.production.min.js","sources":["../node_modules/@reach/observe-rect/dist/observe-rect.esm.js","../src/useIsomorphicLayoutEffect.js","../src/useRect.js","../src/index.js"],"sourcesContent":["var props = ['bottom', 'height', 'left', 'right', 'top', 'width'];\n\nvar rectChanged = function rectChanged(a, b) {\n  if (a === void 0) {\n    a = {};\n  }\n\n  if (b === void 0) {\n    b = {};\n  }\n\n  return props.some(function (prop) {\n    return a[prop] !== b[prop];\n  });\n};\n\nvar observedNodes =\n/*#__PURE__*/\nnew Map();\nvar rafId;\n\nvar run = function run() {\n  var changedStates = [];\n  observedNodes.forEach(function (state, node) {\n    var newRect = node.getBoundingClientRect();\n\n    if (rectChanged(newRect, state.rect)) {\n      state.rect = newRect;\n      changedStates.push(state);\n    }\n  });\n  changedStates.forEach(function (state) {\n    state.callbacks.forEach(function (cb) {\n      return cb(state.rect);\n    });\n  });\n  rafId = window.requestAnimationFrame(run);\n};\n\nfunction observeRect(node, cb) {\n  return {\n    observe: function observe() {\n      var wasEmpty = observedNodes.size === 0;\n\n      if (observedNodes.has(node)) {\n        observedNodes.get(node).callbacks.push(cb);\n      } else {\n        observedNodes.set(node, {\n          rect: undefined,\n          hasRectChanged: false,\n          callbacks: [cb]\n        });\n      }\n\n      if (wasEmpty) run();\n    },\n    unobserve: function unobserve() {\n      var state = observedNodes.get(node);\n\n      if (state) {\n        // Remove the callback\n        var index = state.callbacks.indexOf(cb);\n        if (index >= 0) state.callbacks.splice(index, 1); // Remove the node reference\n\n        if (!state.callbacks.length) observedNodes[\"delete\"](node); // Stop the loop\n\n        if (!observedNodes.size) cancelAnimationFrame(rafId);\n      }\n    }\n  };\n}\n\nexport default observeRect;\n//# sourceMappingURL=observe-rect.esm.js.map\n","import React from 'react'\n\nexport default typeof window !== 'undefined'\n  ? React.useLayoutEffect\n  : React.useEffect\n","import React from 'react'\nimport observeRect from '@reach/observe-rect'\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nexport default function useRect(\n  nodeRef,\n  initialRect = { width: 0, height: 0 }\n) {\n  const [element, setElement] = React.useState(nodeRef.current)\n  const [rect, dispatch] = React.useReducer(rectReducer, initialRect)\n  const initialRectSet = React.useRef(false)\n\n  useIsomorphicLayoutEffect(() => {\n    if (nodeRef.current !== element) {\n      setElement(nodeRef.current)\n    }\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    if (element && !initialRectSet.current) {\n      initialRectSet.current = true\n      const rect = element.getBoundingClientRect()\n      dispatch({ rect })\n    }\n  }, [element])\n\n  React.useEffect(() => {\n    if (!element) {\n      return\n    }\n\n    const observer = observeRect(element, rect => {\n      dispatch({ rect })\n    })\n\n    observer.observe()\n\n    return () => {\n      observer.unobserve()\n    }\n  }, [element])\n\n  return rect\n}\n\nfunction rectReducer(state, action) {\n  const rect = action.rect\n  if (state.height !== rect.height || state.width !== rect.width) {\n    return rect\n  }\n  return state\n}\n","import React from 'react'\nimport useRect from './useRect'\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nconst defaultEstimateSize = () => 50\n\nconst defaultKeyExtractor = index => index\n\nconst defaultMeasureSize = (el, horizontal) => {\n  const key = horizontal ? 'offsetWidth' : 'offsetHeight'\n\n  return el[key]\n}\n\nexport const defaultRangeExtractor = range => {\n  const start = Math.max(range.start - range.overscan, 0)\n  const end = Math.min(range.end + range.overscan, range.size - 1)\n\n  const arr = []\n\n  for (let i = start; i <= end; i++) {\n    arr.push(i)\n  }\n\n  return arr\n}\n\nexport function useVirtual({\n  size = 0,\n  estimateSize = defaultEstimateSize,\n  overscan = 1,\n  paddingStart = 0,\n  paddingEnd = 0,\n  parentRef,\n  horizontal,\n  scrollToFn,\n  useObserver,\n  initialRect,\n  onScrollElement,\n  scrollOffsetFn,\n  keyExtractor = defaultKeyExtractor,\n  measureSize = defaultMeasureSize,\n  rangeExtractor = defaultRangeExtractor,\n}) {\n  const sizeKey = horizontal ? 'width' : 'height'\n  const scrollKey = horizontal ? 'scrollLeft' : 'scrollTop'\n\n  const latestRef = React.useRef({\n    scrollOffset: 0,\n    measurements: [],\n  })\n\n  const [scrollOffset, setScrollOffset] = React.useState(0)\n  latestRef.current.scrollOffset = scrollOffset\n\n  const useMeasureParent = useObserver || useRect\n\n  const { [sizeKey]: outerSize } = useMeasureParent(parentRef, initialRect)\n\n  latestRef.current.outerSize = outerSize\n\n  const defaultScrollToFn = React.useCallback(\n    offset => {\n      if (parentRef.current) {\n        parentRef.current[scrollKey] = offset\n      }\n    },\n    [parentRef, scrollKey]\n  )\n\n  const resolvedScrollToFn = scrollToFn || defaultScrollToFn\n\n  scrollToFn = React.useCallback(\n    offset => {\n      resolvedScrollToFn(offset, defaultScrollToFn)\n    },\n    [defaultScrollToFn, resolvedScrollToFn]\n  )\n\n  const [measuredCache, setMeasuredCache] = React.useState({})\n\n  const measure = React.useCallback(() => setMeasuredCache({}), [])\n\n  const pendingMeasuredCacheIndexesRef = React.useRef([])\n\n  const measurements = React.useMemo(() => {\n    const min =\n      pendingMeasuredCacheIndexesRef.current.length > 0\n        ? Math.min(...pendingMeasuredCacheIndexesRef.current)\n        : 0\n    pendingMeasuredCacheIndexesRef.current = []\n\n    const measurements = latestRef.current.measurements.slice(0, min)\n\n    for (let i = min; i < size; i++) {\n      const key = keyExtractor(i)\n      const measuredSize = measuredCache[key]\n      const start = measurements[i - 1] ? measurements[i - 1].end : paddingStart\n      const size =\n        typeof measuredSize === 'number' ? measuredSize : estimateSize(i)\n      const end = start + size\n      measurements[i] = { index: i, start, size, end, key }\n    }\n    return measurements\n  }, [estimateSize, measuredCache, paddingStart, size, keyExtractor])\n\n  const totalSize = (measurements[size - 1]?.end || paddingStart) + paddingEnd\n\n  latestRef.current.measurements = measurements\n  latestRef.current.totalSize = totalSize\n\n  const element = onScrollElement ? onScrollElement.current : parentRef.current\n\n  const scrollOffsetFnRef = React.useRef(scrollOffsetFn)\n  scrollOffsetFnRef.current = scrollOffsetFn\n\n  useIsomorphicLayoutEffect(() => {\n    if (!element) {\n      setScrollOffset(0)\n\n      return\n    }\n\n    const onScroll = event => {\n      const offset = scrollOffsetFnRef.current\n        ? scrollOffsetFnRef.current(event)\n        : element[scrollKey]\n\n      setScrollOffset(offset)\n    }\n\n    onScroll()\n\n    element.addEventListener('scroll', onScroll, {\n      capture: false,\n      passive: true,\n    })\n\n    return () => {\n      element.removeEventListener('scroll', onScroll)\n    }\n  }, [element, scrollKey])\n\n  const { start, end } = calculateRange(latestRef.current)\n\n  const indexes = React.useMemo(\n    () =>\n      rangeExtractor({\n        start,\n        end,\n        overscan,\n        size: measurements.length,\n      }),\n    [start, end, overscan, measurements.length, rangeExtractor]\n  )\n\n  const measureSizeRef = React.useRef(measureSize)\n  measureSizeRef.current = measureSize\n\n  const virtualItems = React.useMemo(() => {\n    const virtualItems = []\n\n    for (let k = 0, len = indexes.length; k < len; k++) {\n      const i = indexes[k]\n      const measurement = measurements[i]\n\n      const item = {\n        ...measurement,\n        measureRef: el => {\n          if (el) {\n            const measuredSize = measureSizeRef.current(el, horizontal)\n\n            if (measuredSize !== item.size) {\n              const { scrollOffset } = latestRef.current\n\n              if (item.start < scrollOffset) {\n                defaultScrollToFn(scrollOffset + (measuredSize - item.size))\n              }\n\n              pendingMeasuredCacheIndexesRef.current.push(i)\n\n              setMeasuredCache(old => ({\n                ...old,\n                [item.key]: measuredSize,\n              }))\n            }\n          }\n        },\n      }\n\n      virtualItems.push(item)\n    }\n\n    return virtualItems\n  }, [indexes, defaultScrollToFn, horizontal, measurements])\n\n  const mountedRef = React.useRef(false)\n\n  useIsomorphicLayoutEffect(() => {\n    if (mountedRef.current) {\n      setMeasuredCache({})\n    }\n    mountedRef.current = true\n  }, [estimateSize])\n\n  const scrollToOffset = React.useCallback(\n    (toOffset, { align = 'start' } = {}) => {\n      const { scrollOffset, outerSize } = latestRef.current\n\n      if (align === 'auto') {\n        if (toOffset <= scrollOffset) {\n          align = 'start'\n        } else if (toOffset >= scrollOffset + outerSize) {\n          align = 'end'\n        } else {\n          align = 'start'\n        }\n      }\n\n      if (align === 'start') {\n        scrollToFn(toOffset)\n      } else if (align === 'end') {\n        scrollToFn(toOffset - outerSize)\n      } else if (align === 'center') {\n        scrollToFn(toOffset - outerSize / 2)\n      }\n    },\n    [scrollToFn]\n  )\n\n  const tryScrollToIndex = React.useCallback(\n    (index, { align = 'auto', ...rest } = {}) => {\n      const { measurements, scrollOffset, outerSize } = latestRef.current\n\n      const measurement = measurements[Math.max(0, Math.min(index, size - 1))]\n\n      if (!measurement) {\n        return\n      }\n\n      if (align === 'auto') {\n        if (measurement.end >= scrollOffset + outerSize) {\n          align = 'end'\n        } else if (measurement.start <= scrollOffset) {\n          align = 'start'\n        } else {\n          return\n        }\n      }\n\n      const toOffset =\n        align === 'center'\n          ? measurement.start + measurement.size / 2\n          : align === 'end'\n          ? measurement.end\n          : measurement.start\n\n      scrollToOffset(toOffset, { align, ...rest })\n    },\n    [scrollToOffset, size]\n  )\n\n  const scrollToIndex = React.useCallback(\n    (...args) => {\n      // We do a double request here because of\n      // dynamic sizes which can cause offset shift\n      // and end up in the wrong spot. Unfortunately,\n      // we can't know about those dynamic sizes until\n      // we try and render them. So double down!\n      tryScrollToIndex(...args)\n      requestAnimationFrame(() => {\n        tryScrollToIndex(...args)\n      })\n    },\n    [tryScrollToIndex]\n  )\n\n  return {\n    virtualItems,\n    totalSize,\n    scrollToOffset,\n    scrollToIndex,\n    measure,\n  }\n}\n\nconst findNearestBinarySearch = (low, high, getCurrentValue, value) => {\n  while (low <= high) {\n    let middle = ((low + high) / 2) | 0\n    let currentValue = getCurrentValue(middle)\n\n    if (currentValue < value) {\n      low = middle + 1\n    } else if (currentValue > value) {\n      high = middle - 1\n    } else {\n      return middle\n    }\n  }\n\n  if (low > 0) {\n    return low - 1\n  } else {\n    return 0\n  }\n}\n\nfunction calculateRange({ measurements, outerSize, scrollOffset }) {\n  const size = measurements.length - 1\n  const getOffset = index => measurements[index].start\n\n  let start = findNearestBinarySearch(0, size, getOffset, scrollOffset)\n  let end = start\n\n  while (end < size && measurements[end].end < scrollOffset + outerSize) {\n    end++\n  }\n\n  return { start, end }\n}\n"],"names":["rafId","props","observedNodes","Map","run","changedStates","state","node","a","b","newRect","getBoundingClientRect","rect","some","prop","cb","window","React","useLayoutEffect","useEffect","useRect","nodeRef","initialRect","width","height","useState","current","element","setElement","useReducer","rectReducer","dispatch","initialRectSet","useRef","useIsomorphicLayoutEffect","observer","observe","wasEmpty","undefined","hasRectChanged","callbacks","unobserve","index","length","size","cancelAnimationFrame","action","defaultEstimateSize","defaultKeyExtractor","defaultMeasureSize","el","horizontal","defaultRangeExtractor","range","start","Math","max","overscan","end","min","arr","i","push","estimateSize","paddingStart","paddingEnd","parentRef","scrollToFn","useObserver","onScrollElement","scrollOffsetFn","keyExtractor","measureSize","rangeExtractor","sizeKey","scrollKey","latestRef","scrollOffset","measurements","setScrollOffset","outerSize","defaultScrollToFn","useCallback","offset","resolvedScrollToFn","measuredCache","setMeasuredCache","measure","pendingMeasuredCacheIndexesRef","useMemo","slice","key","measuredSize","totalSize","scrollOffsetFnRef","onScroll","event","addEventListener","capture","passive","removeEventListener","low","high","getCurrentValue","value","middle","currentValue","findNearestBinarySearch","calculateRange","indexes","measureSizeRef","virtualItems","k","len","item","measureRef","old","mountedRef","scrollToOffset","toOffset","align","tryScrollToIndex","rest","measurement","scrollToIndex","args","requestAnimationFrame"],"mappings":"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"}