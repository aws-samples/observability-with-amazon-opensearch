{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/link/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BaseComponentProps } from '../internal/base-component';\nimport React from 'react';\nimport { BaseNavigationDetail, CancelableEventHandler } from '../internal/events';\n\nexport interface LinkProps extends BaseComponentProps {\n  /**\n   * Determines the visual style of the link as follows:\n   * - `primary` - Displays the link text with bold styling for sufficient contrast with surrounding text.\n   *     Use this for links where the context doesn't imply interactivity such as\n   *     \"Learn more\" links and links within paragraphs.\n   * - `secondary` - Does not provide any additional indicators for interactivity (except for an underline when the user hovers over or focuses the link).\n   *     This can be used in cases where the interactivity is strongly implied by its context,\n   *     such as in a table or a list of external links.\n   * - `info` - Use for \"info\" links that link to content in a help panel.\n   */\n  variant?: LinkProps.Variant;\n\n  /**\n   * Determines the font size and line height.\n   * This property is overridden if the variant is `info`.\n   */\n  fontSize?: LinkProps.FontSize;\n\n  /**\n   * Determines the text color of the link and its icon.\n   * - `normal`: Use in most cases where a link is required.\n   * - `inverted`: Use to style links inside Flashbars.\n   *\n   * This property is overridden if the variant is `info`.\n   */\n  color?: LinkProps.Color;\n\n  /**\n   * Marks the link as external by adding an icon after the text. If `href`\n   * is provided, opens the link in a new tab when clicked.\n   */\n  external?: boolean;\n\n  /**\n   * Specifies where to open the linked URL. Set this to `_blank` to open the URL\n   * in a new tab. If you set this property to `_blank`, the component\n   * automatically adds `rel=\"noopener noreferrer\"` to avoid performance\n   * and security issues.\n   *\n   * For other options see the documentation for <a> tag's\n   * [target attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target).\n   */\n  target?: string;\n\n  /**\n   * The URL that the link points to.\n   * If an `href` is not provided, the component will render using a\n   * \"button\" role and `target` will not be used.\n   */\n  href?: string;\n\n  /**\n   * The text to render inside the link.\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Adds an aria-label to the HTML element.\n   */\n  ariaLabel?: string;\n\n  /**\n   * Adds an aria-label to the external icon.\n   */\n  externalIconAriaLabel?: string;\n\n  /**\n   * Called when a link is clicked without any modifier keys.\n   * Use this event if you want to prevent default browser navigation\n   * (by calling `preventDefault`) and implement client-side routing yourself.\n   */\n  onFollow?: CancelableEventHandler<LinkProps.FollowDetail>;\n\n  /**\n   * Adds a `rel` attribute to the link. If the `rel` property is provided, it overrides the default behaviour.\n   * By default, the component sets the `rel` attribute to \"noopener noreferrer\" when `external` is `true` or `target` is `\"_blank\"`.\n   */\n  rel?: string;\n}\n\nexport namespace LinkProps {\n  export type Variant = 'primary' | 'secondary' | 'info' | 'awsui-value-large';\n  export type FontSize =\n    | 'body-s'\n    | 'body-m'\n    | 'heading-xs'\n    | 'heading-s'\n    | 'heading-m'\n    | 'heading-l'\n    | 'heading-xl'\n    | 'display-l';\n  export type Color = 'normal' | 'inverted';\n\n  export type FollowDetail = BaseNavigationDetail;\n\n  export interface Ref {\n    /**\n     * Sets the browser focus on the anchor element.\n     */\n    focus(): void;\n  }\n}\n"]}