import { matchesX } from './utils';
/**
 * Formats provided x-position and its corresponding series values.
 */
export default function formatPosition(position, series, xTickFormatter) {
    var formattedPosition = xTickFormatter ? xTickFormatter(position) : position.toString();
    var details = [];
    series.forEach(function (s) {
        var detail = getSeriesDetail(s, position);
        if (detail) {
            details.push(detail);
        }
    });
    return { position: formattedPosition, details: details };
}
function getSeriesDetail(internalSeries, targetX) {
    var series = internalSeries.series, color = internalSeries.color;
    if (series.type === 'threshold') {
        return {
            key: series.title,
            value: series.valueFormatter ? series.valueFormatter(series.y) : series.y,
            color: color,
            markerType: 'dashed'
        };
    }
    for (var _i = 0, _a = series.data; _i < _a.length; _i++) {
        var d = _a[_i];
        if (matchesX(targetX, d.x)) {
            return {
                key: series.title,
                value: series.valueFormatter ? series.valueFormatter(d.y, targetX) : d.y,
                color: color,
                markerType: series.type === 'line' ? 'line' : 'rectangle'
            };
        }
    }
    return null;
}
//# sourceMappingURL=format-highlighted.js.map