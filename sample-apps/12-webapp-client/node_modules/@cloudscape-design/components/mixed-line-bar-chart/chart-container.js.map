{"version":3,"file":"chart-container.js","sourceRoot":"","sources":["../../../src/mixed-line-bar-chart/chart-container.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react';\n\nimport { nodeContains } from '../internal/utils/dom';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\n\nimport { getXTickCount, getYTickCount, createXTicks, createYTicks } from '../internal/components/cartesian-chart/ticks';\nimport ChartPlot, { ChartPlotRef } from '../internal/components/chart-plot';\nimport AxisLabel from '../internal/components/cartesian-chart/axis-label';\nimport LabelsMeasure from '../internal/components/cartesian-chart/labels-measure';\nimport LeftLabels from '../internal/components/cartesian-chart/left-labels';\nimport BottomLabels from '../internal/components/cartesian-chart/bottom-labels';\nimport VerticalGridLines from '../internal/components/cartesian-chart/vertical-grid-lines';\nimport EmphasizedBaseline from '../internal/components/cartesian-chart/emphasized-baseline';\nimport HighlightedPoint from '../internal/components/cartesian-chart/highlighted-point';\nimport VerticalMarker from '../internal/components/cartesian-chart/vertical-marker';\nimport { ChartScale, NumericChartScale } from '../internal/components/cartesian-chart/scales';\nimport ChartPopover from './chart-popover';\nimport { ChartDataTypes, InternalChartSeries, MixedLineBarChartProps, ScaleType } from './interfaces';\nimport { computeDomainX, computeDomainY } from './utils';\nimport makeScaledSeries, { ScaledPoint } from './make-scaled-series';\nimport makeScaledBarGroups, { ScaledBarGroup } from './make-scaled-bar-groups';\nimport formatHighlighted from './format-highlighted';\nimport DataSeries from './data-series';\nimport BarGroups from './bar-groups';\nimport { useMouseHover } from './hooks/use-mouse-hover';\nimport { useNavigation } from './hooks/use-navigation';\nimport { usePopover } from './hooks/use-popover';\n\nimport styles from './styles.css.js';\nimport { CartesianChartProps } from '../internal/components/cartesian-chart/interfaces';\nimport useContainerWidth from '../internal/utils/use-container-width';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\n\nconst LEFT_LABELS_MARGIN = 16;\nconst BOTTOM_LABELS_OFFSET = 12;\n\ntype TickFormatter = undefined | ((value: ChartDataTypes) => string);\n\nexport interface ChartContainerProps<T extends ChartDataTypes> {\n  series: ReadonlyArray<InternalChartSeries<T>>;\n  visibleSeries: ReadonlyArray<InternalChartSeries<T>>;\n\n  height: number;\n  detailPopoverSize: MixedLineBarChartProps<T>['detailPopoverSize'];\n\n  xScaleType: ScaleType;\n  yScaleType: 'linear' | 'log';\n\n  xDomain: MixedLineBarChartProps<T>['xDomain'];\n  yDomain: MixedLineBarChartProps<T>['yDomain'];\n\n  xTickFormatter?: CartesianChartProps.TickFormatter<T>;\n  yTickFormatter?: CartesianChartProps.TickFormatter<number>;\n\n  xTitle?: string;\n  yTitle?: string;\n\n  stackedBars?: boolean;\n  emphasizeBaselineAxis: boolean;\n  horizontalBars?: boolean;\n\n  highlightedSeries?: MixedLineBarChartProps<T>['highlightedSeries'];\n  onHighlightChange: (series: InternalChartSeries<T>['series'] | null) => void;\n  highlightedPoint: ScaledPoint<T> | null;\n  setHighlightedPoint: (point: ScaledPoint<T> | null) => void;\n  highlightedGroupIndex: number | null;\n  setHighlightedGroupIndex: (groupIndex: number | null) => void;\n  legendSeries: null | MixedLineBarChartProps.ChartSeries<T>;\n\n  ariaLabel: MixedLineBarChartProps<T>['ariaLabel'];\n  ariaLabelledby: MixedLineBarChartProps<T>['ariaLabelledby'];\n  ariaDescription: MixedLineBarChartProps<T>['ariaDescription'];\n  i18nStrings: MixedLineBarChartProps<T>['i18nStrings'];\n\n  plotContainerRef: React.RefObject<HTMLDivElement>;\n}\n\nexport default function ChartContainer<T extends ChartDataTypes>({\n  height: plotHeight,\n  series,\n  visibleSeries,\n  highlightedSeries,\n  onHighlightChange,\n  highlightedPoint,\n  setHighlightedPoint,\n  highlightedGroupIndex,\n  setHighlightedGroupIndex,\n  legendSeries,\n  detailPopoverSize = 'medium',\n  stackedBars = false,\n  horizontalBars = false,\n  xScaleType,\n  yScaleType,\n  xTickFormatter,\n  yTickFormatter,\n  emphasizeBaselineAxis,\n  xTitle,\n  yTitle,\n  ariaLabel,\n  ariaLabelledby,\n  ariaDescription,\n  i18nStrings = {},\n  plotContainerRef,\n  ...props\n}: ChartContainerProps<T>) {\n  const plotRef = useRef<ChartPlotRef>(null);\n  const verticalMarkerRef = useRef<SVGLineElement>(null);\n\n  const [leftLabelsWidth, setLeftLabelsWidth] = useState(0);\n  const [bottomLabelsHeight, setBottomLabelsHeight] = useState(0);\n  const [containerWidth, containerMeasureRef] = useContainerWidth(500);\n  const plotWidth = containerWidth ? containerWidth - leftLabelsWidth - LEFT_LABELS_MARGIN : 500;\n  const containerRefObject = useRef(null);\n  const containerRef = useMergeRefs(containerMeasureRef, containerRefObject);\n\n  const isRefresh = useVisualRefresh(containerRefObject);\n\n  const linesOnly = series.every(({ series }) => series.type === 'line' || series.type === 'threshold');\n\n  const xDomain = (props.xDomain || computeDomainX(series, xScaleType)) as\n    | readonly number[]\n    | readonly string[]\n    | readonly Date[];\n  const yDomain = (props.yDomain || computeDomainY(series, yScaleType, stackedBars)) as readonly number[];\n\n  const xTickCount = getXTickCount(plotWidth);\n  const yTickCount = getYTickCount(plotHeight);\n\n  const rangeBottomTop: [number, number] = [0, plotHeight];\n  const rangeTopBottom: [number, number] = [plotHeight, 0];\n  const rangeLeftRight: [number, number] = [0, plotWidth];\n  const xScale = new ChartScale(xScaleType, xDomain, horizontalBars ? rangeBottomTop : rangeLeftRight, linesOnly);\n  const yScale = new NumericChartScale(\n    yScaleType,\n    yDomain,\n    horizontalBars ? rangeLeftRight : rangeTopBottom,\n    props.yDomain ? null : yTickCount\n  );\n\n  const xTicks = createXTicks(xScale, xTickCount);\n  const yTicks = createYTicks(yScale, yTickCount);\n\n  /**\n   * Interactions\n   */\n  const highlightedPointRef = useRef<SVGGElement>(null);\n  const highlightedGroupRef = useRef<SVGRectElement>(null);\n  const [isPlotFocused, setPlotFocused] = useState(false);\n\n  // Some chart components are rendered against \"x\" or \"y\" axes,\n  // When \"horizontalBars\" is enabled, the axes are inverted.\n  const x = !horizontalBars ? 'x' : 'y';\n  const y = !horizontalBars ? 'y' : 'x';\n  const xy = {\n    ticks: { x: xTicks, y: yTicks },\n    scale: { x: xScale, y: yScale },\n    tickFormatter: { x: xTickFormatter, y: yTickFormatter },\n    title: { x: xTitle, y: yTitle },\n    ariaRoleDescription: { x: i18nStrings.xAxisAriaRoleDescription, y: i18nStrings.yAxisAriaRoleDescription },\n  };\n\n  const scaledSeries = makeScaledSeries(visibleSeries, xScale, yScale);\n  const barGroups: ScaledBarGroup<T>[] = makeScaledBarGroups(visibleSeries, xScale, plotWidth, plotHeight, y);\n\n  const { isPopoverOpen, isPopoverPinned, showPopover, pinPopover, dismissPopover } = usePopover();\n\n  // Allows to add a delay between popover is dismissed and handlers are enabled to prevent immediate popover reopening.\n  const [isHandlersDisabled, setHandlersDisabled] = useState(!isPopoverPinned);\n  useEffect(() => {\n    if (isPopoverPinned) {\n      setHandlersDisabled(true);\n    } else {\n      const timeoutId = setTimeout(() => setHandlersDisabled(false), 25);\n      return () => clearTimeout(timeoutId);\n    }\n  }, [isPopoverPinned]);\n\n  // Highlighted point and highlighted series must be in sync.\n  // TODO: refactor the code so that it is not possible to make series and point highlight out of sync.\n  const highlightPoint = useCallback(\n    (point: ScaledPoint<T> | null) => {\n      setHighlightedGroupIndex(null);\n      setHighlightedPoint(point);\n    },\n    [setHighlightedPoint, setHighlightedGroupIndex]\n  );\n\n  const highlightSeries = useCallback(\n    (series: MixedLineBarChartProps.ChartSeries<T> | null) => {\n      if (series !== highlightedSeries) {\n        onHighlightChange(series);\n      }\n    },\n    [highlightedSeries, onHighlightChange]\n  );\n\n  const highlightGroup = useCallback(\n    (groupIndex: number) => {\n      highlightSeries(null);\n      setHighlightedPoint(null);\n      setHighlightedGroupIndex(groupIndex);\n    },\n    [highlightSeries, setHighlightedPoint, setHighlightedGroupIndex]\n  );\n\n  const clearHighlightedSeries = useCallback(() => {\n    highlightSeries(null);\n    setHighlightedGroupIndex(null);\n    setHighlightedPoint(null);\n    dismissPopover();\n  }, [dismissPopover, highlightSeries, setHighlightedGroupIndex, setHighlightedPoint]);\n\n  const { isGroupNavigation, ...handlers } = useNavigation({\n    series,\n    visibleSeries,\n    scaledSeries,\n    barGroups,\n    xScale,\n    yScale,\n    highlightedPoint,\n    highlightedGroupIndex,\n    highlightedSeries,\n    legendSeries,\n    isHandlersDisabled,\n    pinPopover,\n    highlightSeries,\n    highlightGroup,\n    highlightPoint,\n    clearHighlightedSeries,\n  });\n\n  const { onSVGMouseMove, onSVGMouseOut, verticalMarkerLeft } = useMouseHover<T>({\n    scaledSeries,\n    barGroups,\n    plotRef,\n    highlightSeries,\n    highlightPoint,\n    highlightGroup,\n    clearHighlightedSeries,\n    isGroupNavigation,\n    isHandlersDisabled,\n  });\n\n  // There are multiple ways to indicate what X is selected.\n  // TODO: make a uniform verticalMarkerX state to fit all use-cases.\n  const highlightedX = useMemo(() => {\n    if (highlightedGroupIndex !== null) {\n      return barGroups[highlightedGroupIndex].x;\n    }\n    if (verticalMarkerLeft !== null) {\n      for (const series of scaledSeries) {\n        if (series.x === verticalMarkerLeft) {\n          return series.datum?.x ?? null;\n        }\n      }\n    }\n    if (highlightedPoint !== null) {\n      return highlightedPoint?.datum?.x ?? null;\n    }\n    return null;\n  }, [highlightedPoint, verticalMarkerLeft, highlightedGroupIndex, scaledSeries, barGroups]);\n\n  const onPopoverDismiss = (outsideClick?: boolean) => {\n    dismissPopover();\n\n    if (!outsideClick) {\n      // The delay is needed to bypass focus events caused by click or keypress needed to unpin the popover.\n      setTimeout(() => {\n        if (highlightedPoint || highlightedGroupIndex !== null) {\n          plotRef.current?.focusApplication();\n        } else {\n          plotRef.current?.focusPlot();\n        }\n      }, 0);\n    }\n  };\n\n  useLayoutEffect(() => {\n    if (highlightedX !== null) {\n      showPopover();\n    }\n  }, [highlightedX, showPopover]);\n\n  const onSVGMouseDown = () => {\n    if (isPopoverOpen) {\n      if (isPopoverPinned) {\n        dismissPopover();\n      } else {\n        pinPopover();\n      }\n    } else {\n      showPopover();\n    }\n  };\n\n  const onSVGFocus = (event: React.FocusEvent, trigger: 'mouse' | 'keyboard') => {\n    setPlotFocused(true);\n    if (trigger === 'keyboard') {\n      handlers.onFocus();\n    } else {\n      // noop: clicks are handled separately\n    }\n  };\n\n  const onSVGBlur = (event: React.FocusEvent<Element>) => {\n    setPlotFocused(false);\n    const blurTarget = event.relatedTarget || event.target;\n    if (\n      blurTarget === null ||\n      !(blurTarget instanceof Element) ||\n      !nodeContains(containerRefObject.current, blurTarget)\n    ) {\n      setHighlightedPoint(null);\n      if (!plotContainerRef?.current?.contains(blurTarget)) {\n        clearHighlightedSeries();\n      }\n\n      if (isPopoverOpen && !isPopoverPinned) {\n        dismissPopover();\n      }\n    }\n  };\n\n  const onSVGKeyDown = handlers.onKeyDown;\n\n  const xOffset = xScale.isCategorical() ? Math.max(0, xScale.d3Scale.bandwidth() - 1) / 2 : 0;\n\n  let verticalLineX: number | null = null;\n  if (verticalMarkerLeft !== null) {\n    verticalLineX = verticalMarkerLeft;\n  } else if (isGroupNavigation && highlightedGroupIndex !== null) {\n    const x = xScale.d3Scale(barGroups[highlightedGroupIndex].x as any) ?? null;\n    if (x !== null) {\n      verticalLineX = xOffset + x;\n    }\n  }\n\n  const point = useMemo(\n    () =>\n      highlightedPoint\n        ? {\n            key: `${highlightedPoint.x}-${highlightedPoint.y}`,\n            x: highlightedPoint.x,\n            y: highlightedPoint.y,\n            color: highlightedPoint.color,\n          }\n        : null,\n    [highlightedPoint]\n  );\n\n  const verticalMarkers = useMemo(\n    () =>\n      verticalLineX !== null\n        ? scaledSeries\n            .filter(({ x }) => x === verticalLineX || isNaN(x))\n            .map(({ x, y, color }, index) => ({\n              key: `${index}-${x}-${y}`,\n              x: !horizontalBars ? verticalLineX || 0 : y,\n              y: !horizontalBars ? y : verticalLineX || 0,\n              color: color,\n            }))\n        : [],\n    [scaledSeries, verticalLineX, horizontalBars]\n  );\n\n  const popoverTrackRef = isGroupNavigation\n    ? highlightedGroupRef\n    : highlightedPoint\n    ? highlightedPointRef\n    : verticalMarkerRef;\n\n  const highlightDetails = useMemo(() => {\n    if (highlightedX === null) {\n      return null;\n    }\n    // If there is a highlighted point - only use its corresponding series details.\n    for (const series of visibleSeries) {\n      if (series.series === highlightedPoint?.series) {\n        return formatHighlighted(highlightedX, [series], xTickFormatter);\n      }\n    }\n    // Otherwise - use all series details.\n    return formatHighlighted(highlightedX, visibleSeries, xTickFormatter);\n  }, [highlightedX, highlightedPoint, visibleSeries, xTickFormatter]);\n\n  const activeAriaLabel = useMemo(\n    () =>\n      highlightDetails\n        ? `${highlightDetails.position}, ${highlightDetails.details.map(d => d.key + ' ' + d.value).join(',')}`\n        : '',\n    [highlightDetails]\n  );\n\n  // Live region is used when nothing is focused e.g. when hovering.\n  const activeLiveRegion =\n    activeAriaLabel && !highlightedPoint && highlightedGroupIndex === null ? activeAriaLabel : '';\n\n  return (\n    <div className={styles['chart-container']} ref={containerRef}>\n      <AxisLabel axis={y} position=\"left\" title={xy.title[y]} />\n      <div className={styles['chart-container__horizontal']}>\n        <LabelsMeasure\n          ticks={xy.ticks[y]}\n          scale={xy.scale[y]}\n          tickFormatter={xy.tickFormatter[y] as TickFormatter}\n          autoWidth={setLeftLabelsWidth}\n        />\n\n        <div className={styles['chart-container__vertical']}>\n          <ChartPlot\n            ref={plotRef}\n            width={plotWidth}\n            height={plotHeight}\n            offsetBottom={bottomLabelsHeight}\n            isClickable={isPopoverOpen && !isPopoverPinned}\n            ariaLabel={ariaLabel}\n            ariaLabelledby={ariaLabelledby}\n            ariaDescription={ariaDescription}\n            ariaRoleDescription={i18nStrings?.chartAriaRoleDescription}\n            ariaLiveRegion={activeLiveRegion}\n            activeElementRef={isGroupNavigation ? highlightedGroupRef : highlightedPointRef}\n            activeElementKey={isPlotFocused && (highlightedGroupIndex?.toString() || point?.key)}\n            activeElementFocusOffset={isGroupNavigation ? 0 : 3}\n            onMouseMove={onSVGMouseMove}\n            onMouseOut={onSVGMouseOut}\n            onMouseDown={onSVGMouseDown}\n            onFocus={onSVGFocus}\n            onBlur={onSVGBlur}\n            onKeyDown={onSVGKeyDown}\n          >\n            <LeftLabels\n              axis={y}\n              ticks={xy.ticks[y]}\n              scale={xy.scale[y]}\n              tickFormatter={xy.tickFormatter[y] as TickFormatter}\n              title={xy.title[y]}\n              ariaRoleDescription={xy.ariaRoleDescription[y]}\n              width={plotWidth}\n              height={plotHeight}\n            />\n\n            {horizontalBars && <VerticalGridLines scale={yScale} ticks={yTicks} height={plotHeight} />}\n\n            {emphasizeBaselineAxis && linesOnly && (\n              <EmphasizedBaseline axis={x} scale={yScale} width={plotWidth} height={plotHeight} />\n            )}\n\n            <DataSeries\n              axis={x}\n              plotWidth={plotWidth}\n              plotHeight={plotHeight}\n              highlightedSeries={highlightedSeries ?? null}\n              highlightedGroupIndex={highlightedGroupIndex}\n              stackedBars={stackedBars}\n              isGroupNavigation={isGroupNavigation}\n              visibleSeries={visibleSeries}\n              xScale={xScale}\n              yScale={yScale}\n            />\n\n            {emphasizeBaselineAxis && !linesOnly && (\n              <EmphasizedBaseline axis={x} scale={yScale} width={plotWidth} height={plotHeight} />\n            )}\n\n            <VerticalMarker\n              key={verticalLineX || ''}\n              height={plotHeight}\n              showPoints={highlightedPoint === null}\n              showLine={!isGroupNavigation}\n              points={verticalMarkers}\n              ref={verticalMarkerRef}\n            />\n\n            {highlightedPoint && (\n              <HighlightedPoint\n                ref={highlightedPointRef}\n                point={point}\n                role=\"button\"\n                ariaLabel={activeAriaLabel}\n                ariaHasPopup={true}\n                ariaExpanded={isPopoverPinned}\n              />\n            )}\n\n            {isGroupNavigation && xScale.isCategorical() && (\n              <BarGroups\n                ariaLabel={activeAriaLabel}\n                isRefresh={isRefresh}\n                isPopoverPinned={isPopoverPinned}\n                barGroups={barGroups}\n                highlightedGroupIndex={highlightedGroupIndex}\n                highlightedGroupRef={highlightedGroupRef}\n              />\n            )}\n\n            <BottomLabels\n              axis={x}\n              ticks={xy.ticks[x]}\n              scale={xy.scale[x]}\n              tickFormatter={xy.tickFormatter[x] as TickFormatter}\n              title={xy.title[x]}\n              ariaRoleDescription={xy.ariaRoleDescription[x]}\n              height={plotHeight}\n              width={plotWidth}\n              offsetLeft={leftLabelsWidth + BOTTOM_LABELS_OFFSET}\n              offsetRight={BOTTOM_LABELS_OFFSET}\n              autoHeight={setBottomLabelsHeight}\n            />\n          </ChartPlot>\n\n          <AxisLabel axis={x} position=\"bottom\" title={xy.title[x]} />\n        </div>\n\n        <ChartPopover\n          containerRef={containerRefObject}\n          trackRef={popoverTrackRef}\n          isOpen={isPopoverOpen}\n          isPinned={isPopoverPinned}\n          highlightDetails={highlightDetails}\n          onDismiss={onPopoverDismiss}\n          size={detailPopoverSize}\n          dismissAriaLabel={i18nStrings.detailPopoverDismissAriaLabel}\n        />\n      </div>\n    </div>\n  );\n}\n"]}