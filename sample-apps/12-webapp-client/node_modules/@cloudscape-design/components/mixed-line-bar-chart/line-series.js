import { __assign } from "tslib";
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
import React from 'react';
import { line } from 'd3-shape';
export default function LineSeries(_a) {
    var axis = _a.axis, series = _a.series, color = _a.color, xScale = _a.xScale, yScale = _a.yScale, chartAreaClipPath = _a.chartAreaClipPath;
    var commonProps = {
        'aria-hidden': true,
        stroke: color,
        clipPath: "url(#".concat(chartAreaClipPath, ")")
    };
    // Ignore axis for line series as we only support horizontally-oriented lines.
    if (series.type === 'line') {
        var lineGenerator = line()
            .x(function (d) {
            var x = xScale.d3Scale(d.x) || 0;
            if (xScale.isCategorical()) {
                var offset = Math.max(0, xScale.d3Scale.bandwidth() - 1) / 2;
                x += offset;
            }
            return x;
        })
            .y(function (d) { return yScale.d3Scale(d.y) || 0; });
        // Filter out any data that is not part of the xScale
        var visibleData = series.data.filter(function (_a) {
            var x = _a.x;
            return xScale.d3Scale(x) !== undefined;
        });
        return (React.createElement("path", __assign({}, commonProps, { d: lineGenerator(visibleData) || '' })));
    }
    else {
        var range = xScale.d3Scale.range();
        var y = yScale.d3Scale(series.y);
        var coordinates = axis === 'x' ? { x1: range[0], x2: range[1], y1: y, y2: y } : { x1: y, x2: y, y1: range[0], y2: range[1] };
        return React.createElement("line", __assign({}, commonProps, coordinates));
    }
}
//# sourceMappingURL=line-series.js.map