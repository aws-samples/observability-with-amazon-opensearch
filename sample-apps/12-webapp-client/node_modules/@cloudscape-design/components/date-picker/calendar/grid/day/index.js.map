{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/date-picker/calendar/grid/day/index.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,MAAM,MAAM,wBAAwB,CAAC;AAE5C,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,MAAM,UAAU,CAAC;AAClD,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAChD,OAAO,IAAI,MAAM,MAAM,CAAC;AAcxB,IAAM,OAAO,GAAG,UAAC,EAUF;;QATb,MAAM,YAAA,EACN,QAAQ,cAAA,EACR,IAAI,UAAA,EACJ,YAAY,kBAAA,EACZ,WAAW,iBAAA,EACX,aAAa,mBAAA,EACb,cAAc,oBAAA,EACd,YAAY,kBAAA,EACZ,gBAAgB,sBAAA;IAEhB,IAAM,MAAM,GAAG,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC;IAC5C,IAAM,WAAW,GAAG,CAAC,CAAC,WAAW,IAAI,SAAS,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IAClE,IAAM,UAAU,GAAG,CAAC,CAAC,YAAY,IAAI,SAAS,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACnE,IAAM,SAAS,GAAG,CAAC,aAAa,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC;IACxD,IAAM,eAAe,GAAG,SAAS,CAAC,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;IACpD,IAAM,kBAAkB,GAAyC,EAAE,CAAC;IACpE,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;QAC5C,GAAC,MAAM,CAAC,2BAA2B,CAAC,IAAG,gBAAgB;QACvD,GAAC,MAAM,CAAC,4BAA4B,CAAC,IAAG,WAAW,CAAC,IAAI,EAAE,QAAQ,CAAC;QACnE,GAAC,MAAM,CAAC,sBAAsB,CAAC,IAAG,SAAS;QAC3C,GAAC,MAAM,CAAC,uBAAuB,CAAC,IAAG,UAAU;QAC7C,GAAC,MAAM,CAAC,oBAAoB,CAAC,IAAG,eAAe;QAC/C,GAAC,MAAM,CAAC,wBAAwB,CAAC,IAAG,WAAW,IAAI,SAAS;YAC5D,CAAC;IAEH,IAAI,UAAU,EAAE;QACd,kBAAkB,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC;KAC7C;IAED,IAAI,eAAe,EAAE;QACnB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC7B;IAED,IAAI,SAAS,EAAE;QACb,kBAAkB,CAAC,OAAO,GAAG,cAAM,OAAA,YAAY,CAAC,IAAI,CAAC,EAAlB,CAAkB,CAAC;QACtD,kBAAkB,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC;KAClC;SAAM;QACL,kBAAkB,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC;KAC5C;IAED,IAAI,WAAW,IAAI,SAAS,EAAE;QAC5B,kBAAkB,CAAC,QAAQ,GAAG,CAAC,CAAC;KACjC;IAED,OAAO,CACL,sCAAK,SAAS,EAAE,UAAU,gBAAc,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAC,QAAQ,IAAK,kBAAkB;QAC7F,8BAAM,SAAS,EAAE,MAAM,CAAC,WAAW,CAAC,IAAG,IAAI,CAAC,OAAO,EAAE,CAAQ,CACzD,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,OAAO,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport styles from '../../../styles.css.js';\nimport { DatePickerProps } from '../../../interfaces';\nimport { isSameDay, isSameMonth } from 'date-fns';\nimport { getDateLabel } from '../../utils/intl';\nimport clsx from 'clsx';\n\ninterface GridDayProps {\n  locale: string;\n  baseDate: Date;\n  date: Date;\n  selectedDate?: Date | null;\n  focusedDate: Date | null;\n  isDateEnabled?: DatePickerProps.IsDateEnabledFunction;\n  todayAriaLabel: string;\n  onSelectDate: (date: Date) => void;\n  isDateInLastWeek: boolean;\n}\n\nconst GridDay = ({\n  locale,\n  baseDate,\n  date,\n  selectedDate,\n  focusedDate,\n  isDateEnabled,\n  todayAriaLabel,\n  onSelectDate,\n  isDateInLastWeek,\n}: GridDayProps) => {\n  const labels = [getDateLabel(locale, date)];\n  const isFocusable = !!focusedDate && isSameDay(date, focusedDate);\n  const isSelected = !!selectedDate && isSameDay(date, selectedDate);\n  const isEnabled = !isDateEnabled || isDateEnabled(date);\n  const isDateOnSameDay = isSameDay(date, new Date());\n  const computedAttributes: React.HTMLAttributes<HTMLDivElement> = {};\n  const classNames = clsx(styles['calendar-day'], {\n    [styles['calendar-day-in-last-week']]: isDateInLastWeek,\n    [styles['calendar-day-current-month']]: isSameMonth(date, baseDate),\n    [styles['calendar-day-enabled']]: isEnabled,\n    [styles['calendar-day-selected']]: isSelected,\n    [styles['calendar-day-today']]: isDateOnSameDay,\n    [styles['calendar-day-focusable']]: isFocusable && isEnabled,\n  });\n\n  if (isSelected) {\n    computedAttributes['aria-current'] = 'date';\n  }\n\n  if (isDateOnSameDay) {\n    labels.push(todayAriaLabel);\n  }\n\n  if (isEnabled) {\n    computedAttributes.onClick = () => onSelectDate(date);\n    computedAttributes.tabIndex = -1;\n  } else {\n    computedAttributes['aria-disabled'] = true;\n  }\n\n  if (isFocusable && isEnabled) {\n    computedAttributes.tabIndex = 0;\n  }\n\n  return (\n    <div className={classNames} aria-label={labels.join('. ')} role=\"button\" {...computedAttributes}>\n      <span className={styles['day-inner']}>{date.getDate()}</span>\n    </div>\n  );\n};\n\nexport default GridDay;\n"]}