{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/date-picker/calendar/index.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef, useState } from 'react';\nimport { addDays, addMonths, isSameMonth, startOfMonth } from 'date-fns';\nimport styles from '../styles.css.js';\nimport { FocusNextElement } from '../../internal/components/tab-trap';\nimport { BaseComponentProps } from '../../internal/base-component';\nimport useFocusVisible from '../../internal/hooks/focus-visible/index.js';\nimport { DatePickerProps } from '../interfaces';\nimport { CalendarTypes } from './definitions';\nimport CalendarHeader from './header';\nimport Grid, { DateChangeHandlerNullable } from './grid';\nimport moveFocusHandler from './utils/move-focus-handler';\nimport { useUniqueId } from '../../internal/hooks/use-unique-id/index.js';\nimport { formatDate, memoizedDate } from './utils/date.js';\n\nexport interface DateChangeHandler {\n  (detail: CalendarTypes.DateDetail): void;\n}\n\nexport interface MonthChangeHandler {\n  (newMonth: Date): void;\n}\n\nexport type DayIndex = 0 | 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface HeaderChangeMonthHandler {\n  (isPreviousButtonClick?: boolean): void;\n}\n\ninterface CalendarProps extends BaseComponentProps {\n  locale: string;\n  startOfWeek: DayIndex;\n  selectedDate: Date | null;\n  displayedDate: Date;\n  isDateEnabled: DatePickerProps.IsDateEnabledFunction;\n  nextMonthLabel: string;\n  previousMonthLabel: string;\n  todayAriaLabel: string;\n\n  onChangeMonth: MonthChangeHandler;\n  onSelectDate: DateChangeHandler;\n}\n\nconst Calendar = ({\n  locale,\n  startOfWeek,\n  displayedDate,\n  todayAriaLabel,\n  selectedDate,\n  isDateEnabled,\n  onChangeMonth,\n  onSelectDate,\n  previousMonthLabel,\n  nextMonthLabel,\n}: CalendarProps) => {\n  const focusVisible = useFocusVisible();\n  const headerId = useUniqueId('calendar-dialog-title-');\n  const elementRef = useRef<HTMLDivElement>(null);\n  const gridWrapperRef = useRef<HTMLDivElement>(null);\n  const [gridHasFocus, setGridHasFocus] = useState(false);\n  const [focusedDate, setFocusedDate] = useState<string | null>(null);\n  let focusedDateMemoized: null | Date = memoizedDate('focused', focusedDate);\n\n  const selectFocusedDate = (selected: Date | null, baseDate: Date): Date | null => {\n    if (selected && isDateEnabled(selected) && isSameMonth(selected, baseDate)) {\n      return selected;\n    }\n    const today = new Date();\n    if (isDateEnabled(today) && isSameMonth(today, baseDate)) {\n      return today;\n    }\n    if (isDateEnabled(baseDate)) {\n      return baseDate;\n    }\n    return null;\n  };\n\n  const getBaseDate = (date: Date) => {\n    const startDate = startOfMonth(date);\n    if (isDateEnabled(startDate)) {\n      return startDate;\n    }\n    return moveFocusHandler(startDate, isDateEnabled, (date: Date) => addDays(date, 1));\n  };\n\n  const baseDate: Date = getBaseDate(displayedDate);\n\n  const focusCurrentDate: FocusNextElement = () =>\n    (elementRef.current?.querySelector(`.${styles['calendar-day-focusable']}`) as HTMLDivElement)?.focus();\n\n  const onHeaderChangeMonthHandler: HeaderChangeMonthHandler = isPrevious => {\n    onChangeMonth(addMonths(baseDate, isPrevious ? -1 : 1));\n    setFocusedDate(null);\n  };\n\n  const onGridChangeMonthHandler: MonthChangeHandler = newMonth => {\n    onChangeMonth(newMonth);\n    setFocusedDate(null);\n  };\n\n  const onGridFocusDateHandler: DateChangeHandlerNullable = ({ date }) => {\n    if (date) {\n      const value = formatDate(date);\n      setFocusedDate(value);\n    }\n  };\n\n  const onGridSelectDateHandler: DateChangeHandler = detail => {\n    onSelectDate(detail);\n    setFocusedDate(null);\n  };\n\n  useEffect(() => {\n    // focus current date if the focus is already inside the calendar grid\n    if (focusedDateMemoized instanceof Date && isSameMonth(focusedDateMemoized, baseDate) && gridHasFocus) {\n      focusCurrentDate();\n    }\n  }, [baseDate, focusedDateMemoized, gridHasFocus]);\n\n  useEffect(() => {\n    const calendarHasFocus = elementRef.current?.contains(document.activeElement);\n\n    if (!calendarHasFocus) {\n      elementRef.current?.focus();\n    }\n\n    // When the baseDate or isDateEnabled changes, there might not be a focusable date in the grid anymore\n  }, [baseDate, isDateEnabled]);\n\n  if (!focusedDate) {\n    focusedDateMemoized = selectFocusedDate(selectedDate, baseDate);\n  }\n\n  const onGridBlur = (event: React.FocusEvent) => {\n    const newFocusTargetIsInGrid = event.relatedTarget && gridWrapperRef.current?.contains(event.relatedTarget as Node);\n    if (!newFocusTargetIsInGrid) {\n      setGridHasFocus(false);\n    }\n  };\n\n  const onGridFocus = () => {\n    if (!gridHasFocus) {\n      setGridHasFocus(true);\n    }\n  };\n\n  return (\n    <div\n      {...focusVisible}\n      className={styles.calendar}\n      tabIndex={0}\n      role=\"application\"\n      aria-describedby={headerId}\n      ref={elementRef}\n    >\n      <div className={styles['calendar-inner']}>\n        <CalendarHeader\n          headerId={headerId}\n          baseDate={baseDate}\n          locale={locale}\n          onChangeMonth={onHeaderChangeMonthHandler}\n          previousMonthLabel={previousMonthLabel}\n          nextMonthLabel={nextMonthLabel}\n        />\n        <div onBlur={onGridBlur} onFocus={onGridFocus} ref={gridWrapperRef}>\n          <Grid\n            locale={locale}\n            baseDate={baseDate}\n            isDateEnabled={isDateEnabled}\n            focusedDate={focusedDateMemoized}\n            onSelectDate={onGridSelectDateHandler}\n            onFocusDate={onGridFocusDateHandler}\n            onChangeMonth={onGridChangeMonthHandler}\n            startOfWeek={startOfWeek}\n            todayAriaLabel={todayAriaLabel}\n            selectedDate={selectedDate}\n            handleFocusMove={moveFocusHandler}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Calendar;\n"]}