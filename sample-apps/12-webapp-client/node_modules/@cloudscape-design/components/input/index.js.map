{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/input/index.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,KAAK,EAAE,EAAO,mBAAmB,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAChE,OAAO,EAAE,YAAY,EAAE,MAAM,4BAA4B,CAAC;AAC1D,OAAO,aAAa,MAAM,YAAY,CAAC;AAEvC,OAAO,EAAE,mBAAmB,EAAE,MAAM,wCAAwC,CAAC;AAC7E,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,EAAE,gBAAgB,EAAE,MAAM,sCAAsC,CAAC;AACxE,OAAO,gBAAgB,MAAM,sCAAsC,CAAC;AAIpE,IAAM,KAAK,GAAG,KAAK,CAAC,UAAU,CAC5B,UACE,EAoBa,EACb,GAAwB;IApBtB,IAAA,KAAK,WAAA,EACL,YAAa,EAAb,IAAI,mBAAG,MAAM,KAAA,EACb,IAAI,UAAA,EACJ,SAAS,eAAA,EACT,oBAAmB,EAAnB,YAAY,mBAAG,IAAI,KAAA,EACnB,QAAQ,cAAA,EACR,QAAQ,cAAA,EACR,yBAAyB,+BAAA,EACzB,SAAS,eAAA,EACT,OAAO,aAAA,EACP,QAAQ,cAAA,EACR,MAAM,YAAA,EACN,OAAO,aAAA,EACP,YAAY,kBAAA,EACZ,IAAI,UAAA,EACJ,WAAW,iBAAA,EACX,SAAS,eAAA,EACT,SAAS,eAAA,EACN,IAAI,cAnBT,qOAoBC,CADQ;IAIT,IAAM,kBAAkB,GAAG,gBAAgB,CAAC,OAAO,CAAC,CAAC;IACrD,IAAM,SAAS,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC;IAC/B,IAAA,KAA0D,mBAAmB,CAAC,IAAI,CAAC,EAAjF,cAAc,oBAAA,EAAE,eAAe,qBAAA,EAAE,SAAS,eAAA,EAAE,OAAO,aAA8B,CAAC;IAE1F,IAAM,QAAQ,GAAG,MAAM,CAAmB,IAAI,CAAC,CAAC;IAEhD,mBAAmB,CACjB,GAAG,EACH,cAAM,OAAA,CAAC;QACL,KAAK,EAAL;;YAAM,cAAyC;iBAAzC,UAAyC,EAAzC,qBAAyC,EAAzC,IAAyC;gBAAzC,yBAAyC;;YAC7C,MAAA,QAAQ,CAAC,OAAO,0CAAE,KAAK,WAAI,IAAI,CAAC,CAAC;QACnC,CAAC;QACD,MAAM;;YACJ,MAAA,QAAQ,CAAC,OAAO,0CAAE,MAAM,EAAE,CAAC;QAC7B,CAAC;KACF,CAAC,EAPI,CAOJ,EACF,CAAC,QAAQ,CAAC,CACX,CAAC;IAEF,OAAO,CACL,oBAAC,aAAa,aACZ,GAAG,EAAE,QAAQ,mCAER,SAAS,GACT,kBAAkB,KACrB,YAAY,cAAA,EACZ,SAAS,WAAA,EACT,eAAe,iBAAA,EACf,cAAc,gBAAA,EACd,YAAY,cAAA,EACZ,SAAS,WAAA,EACT,SAAS,WAAA,EACT,QAAQ,UAAA,EACR,yBAAyB,2BAAA,EACzB,OAAO,SAAA,EACP,IAAI,MAAA,EACJ,SAAS,WAAA,EACT,OAAO,SAAA,EACP,QAAQ,UAAA,EACR,MAAM,QAAA,EACN,OAAO,SAAA,EACP,WAAW,aAAA,EACX,QAAQ,UAAA,EACR,IAAI,MAAA,EACJ,IAAI,MAAA,EACJ,SAAS,WAAA,EACT,KAAK,OAAA,OAEP,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,SAAS,CAAC,IACjD,CACH,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,gBAAgB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;AACjC,eAAe,KAAK,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { Ref, useImperativeHandle, useRef } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport InternalInput from './internal';\nimport { InputProps } from './interfaces';\nimport { useFormFieldContext } from '../internal/context/form-field-context';\nimport styles from './styles.css.js';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\n\nexport { InputProps };\n\nconst Input = React.forwardRef(\n  (\n    {\n      value,\n      type = 'text',\n      step,\n      inputMode,\n      autoComplete = true,\n      disabled,\n      readOnly,\n      disableBrowserAutocorrect,\n      onKeyDown,\n      onKeyUp,\n      onChange,\n      onBlur,\n      onFocus,\n      ariaRequired,\n      name,\n      placeholder,\n      autoFocus,\n      ariaLabel,\n      ...rest\n    }: InputProps,\n    ref: Ref<InputProps.Ref>\n  ) => {\n    const baseComponentProps = useBaseComponent('Input');\n    const baseProps = getBaseProps(rest);\n    const { ariaLabelledby, ariaDescribedby, controlId, invalid } = useFormFieldContext(rest);\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        focus(...args: Parameters<HTMLElement['focus']>) {\n          inputRef.current?.focus(...args);\n        },\n        select() {\n          inputRef.current?.select();\n        },\n      }),\n      [inputRef]\n    );\n\n    return (\n      <InternalInput\n        ref={inputRef}\n        {...{\n          ...baseProps,\n          ...baseComponentProps,\n          autoComplete,\n          ariaLabel,\n          ariaDescribedby,\n          ariaLabelledby,\n          ariaRequired,\n          autoFocus,\n          controlId,\n          disabled,\n          disableBrowserAutocorrect,\n          invalid,\n          name,\n          onKeyDown,\n          onKeyUp,\n          onChange,\n          onBlur,\n          onFocus,\n          placeholder,\n          readOnly,\n          type,\n          step,\n          inputMode,\n          value,\n        }}\n        className={clsx(styles.root, baseProps.className)}\n      />\n    );\n  }\n);\n\napplyDisplayName(Input, 'Input');\nexport default Input;\n"]}