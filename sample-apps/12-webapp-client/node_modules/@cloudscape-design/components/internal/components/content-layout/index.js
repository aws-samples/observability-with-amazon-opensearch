// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
import React, { useContext, useRef } from 'react';
import clsx from 'clsx';
import { AppLayoutContext } from '../../../app-layout/visual-refresh/context';
import { useVisualRefresh } from '../../hooks/use-visual-mode';
import styles from './styles.css.js';
import { useDynamicOverlap } from '../../../app-layout/visual-refresh/hooks/use-dynamic-overlap';
export default function ContentLayout(_a) {
    var _b, _c, _d;
    var children = _a.children, disableOverlap = _a.disableOverlap, header = _a.header;
    var breadcrumbs = useContext(AppLayoutContext).breadcrumbs;
    var rootElement = useRef(null);
    var isVisualRefresh = useVisualRefresh(rootElement);
    var isOverlapDisabled = !children || !header || disableOverlap;
    var overlapElement = useDynamicOverlap();
    return (React.createElement("div", { className: clsx(styles.layout, (_b = {},
            _b[styles['is-overlap-disabled']] = isOverlapDisabled,
            _b[styles['is-visual-refresh']] = isVisualRefresh,
            _b)), ref: rootElement },
        React.createElement("div", { className: clsx(styles.background, (_c = {}, _c[styles['is-overlap-disabled']] = isOverlapDisabled, _c), 'awsui-context-content-header'), ref: overlapElement }),
        header && (React.createElement("div", { className: clsx(styles.header, (_d = {}, _d[styles['has-breadcrumbs']] = breadcrumbs, _d), 'awsui-context-content-header') }, header)),
        children && React.createElement("div", { className: styles.content }, children)));
}
//# sourceMappingURL=index.js.map