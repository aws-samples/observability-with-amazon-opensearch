{"version":3,"file":"label-utils.js","sourceRoot":"","sources":["../../../../../src/internal/components/cartesian-chart/label-utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { ChartDataTypes } from './interfaces';\nimport { ChartScale, NumericChartScale } from './scales';\n\nconst SPACE_BETWEEN = 4;\n\nexport interface FormattedTick {\n  position: number;\n  space: number;\n  lines: string[];\n}\n\nexport function formatTicks({\n  ticks,\n  scale,\n  getLabelSpace,\n  tickFormatter,\n}: {\n  ticks: readonly ChartDataTypes[];\n  scale: ChartScale | NumericChartScale;\n  getLabelSpace: (label: string) => number;\n  tickFormatter?: (value: any) => string;\n}): FormattedTick[] {\n  return ticks.map(tick => {\n    const position = scale.d3Scale(tick as any) ?? NaN;\n    const label = tickFormatter ? tickFormatter(tick as any) : tick.toString();\n    const lines = (label + '').split('\\n');\n    return { position, lines, space: Math.max(...lines.map(getLabelSpace)) };\n  });\n}\n\nexport function getVisibleTicks(ticks: readonly FormattedTick[], from: number, until: number, balanceTicks = false) {\n  ticks = getTicksInRange(ticks, from, until);\n  return balanceTicks ? getReducedTicks(ticks) : removeIntersections(ticks);\n}\n\nfunction getTicksInRange(ticks: readonly FormattedTick[], from: number, until: number) {\n  return ticks.filter(tick => from <= tick.position - tick.space / 2 && tick.position + tick.space / 2 <= until);\n}\n\nfunction getReducedTicks(ticks: readonly FormattedTick[]): readonly FormattedTick[] {\n  const reduceLabelRatio = findReduceLabelRatio(ticks);\n\n  const reducedTicks = [];\n  for (let index = 0; index < ticks.length; index += reduceLabelRatio) {\n    reducedTicks.push(ticks[index]);\n  }\n  return reducedTicks;\n}\n\n// Returns a ratio such that all elements can be displayed with no intersections.\nfunction findReduceLabelRatio(ticks: readonly FormattedTick[], ratio = 1): number {\n  if (ratio >= ticks.length) {\n    return ratio;\n  }\n  for (let i = ratio; i < ticks.length; i += ratio) {\n    if (hasIntersection(ticks[i - ratio], ticks[i])) {\n      return findReduceLabelRatio(ticks, ratio + 1);\n    }\n  }\n  return ratio;\n}\n\nfunction removeIntersections(ticks: readonly FormattedTick[]) {\n  const visibleTicks = [];\n  let prevTick = null;\n  for (const tick of ticks) {\n    if (!prevTick || !hasIntersection(prevTick, tick)) {\n      visibleTicks.push(tick);\n      prevTick = tick;\n    }\n  }\n  return visibleTicks;\n}\n\nfunction hasIntersection(a: FormattedTick, b: FormattedTick) {\n  const [left, right] = a.position < b.position ? [a, b] : [b, a];\n  const leftEdge = left.position + left.space / 2 + SPACE_BETWEEN;\n  const rightEdge = right.position - right.space / 2;\n  return leftEdge > rightEdge;\n}\n"]}