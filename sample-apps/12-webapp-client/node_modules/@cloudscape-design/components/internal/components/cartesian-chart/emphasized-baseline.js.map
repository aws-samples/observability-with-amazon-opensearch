{"version":3,"file":"emphasized-baseline.js","sourceRoot":"","sources":["../../../../../src/internal/components/cartesian-chart/emphasized-baseline.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,OAAO,CAAC;AACpC,OAAO,IAAI,MAAM,MAAM,CAAC;AAGxB,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,aAAa,CAAC;AAEvD,OAAO,MAAM,MAAM,iBAAiB,CAAC;AASrC,eAAe,IAAI,CAAC,kBAAkB,CAA8B,CAAC;AAErE,SAAS,kBAAkB,CAAC,EAA6D;;QAA3D,YAAU,EAAV,IAAI,mBAAG,GAAG,KAAA,EAAE,KAAK,WAAA,EAAE,MAAM,YAAA,EAAE,KAAK,WAAA;IAC5D,gDAAgD;IAChD,IAAM,SAAS,GAAG,MAAA,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,mCAAI,GAAG,CAAC;IAC1C,IAAM,aAAa,GAAG,IAAI,KAAK,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC,IAAI,SAAS,IAAI,MAAM,CAAC;IAEjF,IAAI,aAAa,EAAE;QACjB,OAAO,CACL,8BACE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,kBAAkB,CAAC,CAAC,EACxD,EAAE,EAAE,CAAC,WAAW,EAChB,EAAE,EAAE,KAAK,EACT,EAAE,EAAE,SAAS,EACb,EAAE,EAAE,SAAS,iBACD,MAAM,GAClB,CACH,CAAC;KACH;IAED,IAAI,IAAI,KAAK,GAAG,EAAE;QAChB,OAAO,CACL,8BACE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,kBAAkB,CAAC,CAAC,EACxD,EAAE,EAAE,CAAC,EACL,EAAE,EAAE,CAAC,EACL,EAAE,EAAE,CAAC,EACL,EAAE,EAAE,MAAM,GAAG,WAAW,iBACZ,MAAM,GAClB,CACH,CAAC;KACH;IAED,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo } from 'react';\nimport clsx from 'clsx';\n\nimport { NumericChartScale } from './scales';\nimport { TICK_MARGIN, TICK_LENGTH } from './constants';\n\nimport styles from './styles.css.js';\n\ninterface EmphasizedBaselineProps {\n  axis?: 'x' | 'y';\n  width: number;\n  height: number;\n  scale: NumericChartScale;\n}\n\nexport default memo(EmphasizedBaseline) as typeof EmphasizedBaseline;\n\nfunction EmphasizedBaseline({ axis = 'x', width, height, scale }: EmphasizedBaselineProps) {\n  // Y position of the zero baseline, if it exists\n  const baselineY = scale.d3Scale(0) ?? NaN;\n  const showYBaseline = axis === 'x' && isFinite(baselineY) && baselineY <= height;\n\n  if (showYBaseline) {\n    return (\n      <line\n        className={clsx(styles.axis, styles['axis--emphasized'])}\n        x1={-TICK_MARGIN}\n        x2={width}\n        y1={baselineY}\n        y2={baselineY}\n        aria-hidden=\"true\"\n      />\n    );\n  }\n\n  if (axis === 'y') {\n    return (\n      <line\n        className={clsx(styles.axis, styles['axis--emphasized'])}\n        x1={0}\n        y1={0}\n        x2={0}\n        y2={height + TICK_LENGTH}\n        aria-hidden=\"true\"\n      />\n    );\n  }\n\n  return null;\n}\n"]}