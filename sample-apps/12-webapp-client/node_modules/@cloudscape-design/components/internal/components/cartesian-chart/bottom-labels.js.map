{"version":3,"file":"bottom-labels.js","sourceRoot":"","sources":["../../../../../src/internal/components/cartesian-chart/bottom-labels.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { memo, useEffect, useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { ChartDataTypes } from './interfaces';\nimport { ChartScale, NumericChartScale } from './scales';\nimport { TICK_LENGTH, TICK_LINE_HEIGHT, TICK_MARGIN } from './constants';\n\nimport styles from './styles.css.js';\nimport { formatTicks, getVisibleTicks } from './label-utils';\n\ninterface BottomLabelsProps {\n  axis?: 'x' | 'y';\n  width: number;\n  height: number;\n  scale: ChartScale | NumericChartScale;\n  ticks: readonly ChartDataTypes[];\n  tickFormatter?: (value: ChartDataTypes) => string;\n  title?: string;\n  ariaRoleDescription?: string;\n  autoHeight: (value: number) => void;\n  offsetLeft?: number;\n  offsetRight?: number;\n}\n\nexport default memo(BottomLabels) as typeof BottomLabels;\n\n// Renders the visible tick labels on the bottom axis, as well as their grid lines.\nfunction BottomLabels({\n  axis = 'x',\n  width,\n  height,\n  scale,\n  ticks,\n  tickFormatter,\n  title,\n  ariaRoleDescription,\n  autoHeight,\n  offsetLeft = 0,\n  offsetRight = 0,\n}: BottomLabelsProps) {\n  const virtualTextRef = useRef<SVGTextElement>(null);\n\n  const xOffset = scale.isCategorical() && axis === 'x' ? Math.max(0, scale.d3Scale.bandwidth() - 1) / 2 : 0;\n\n  const cacheRef = useRef<{ [label: string]: number }>({});\n  const getLabelSpace = (label: string) => {\n    if (cacheRef.current[label] !== undefined) {\n      return cacheRef.current[label];\n    }\n    if (virtualTextRef.current && virtualTextRef.current.getComputedTextLength) {\n      virtualTextRef.current.textContent = label;\n      cacheRef.current[label] = virtualTextRef.current.getComputedTextLength();\n      return cacheRef.current[label];\n    }\n    return 0;\n  };\n\n  const formattedTicks = formatTicks({ ticks, scale, getLabelSpace, tickFormatter });\n\n  if (virtualTextRef.current) {\n    virtualTextRef.current.textContent = '';\n  }\n\n  const from = 0 - offsetLeft - xOffset;\n  const until = width + offsetRight - xOffset;\n  const balanceLabels = axis === 'x' && scale.scaleType !== 'log';\n  const visibleTicks = getVisibleTicks(formattedTicks, from, until, balanceLabels);\n\n  let maxHeight = TICK_LENGTH + TICK_MARGIN;\n  for (const { lines } of formattedTicks) {\n    maxHeight = Math.max(maxHeight, TICK_LENGTH + TICK_MARGIN + lines.length * TICK_LINE_HEIGHT);\n  }\n\n  // Tell elements's height to the parent.\n  useEffect(() => {\n    autoHeight(maxHeight);\n  }, [autoHeight, maxHeight]);\n\n  return (\n    <g\n      transform={`translate(0,${height})`}\n      className={styles['labels-bottom']}\n      focusable={false}\n      aria-label={title}\n      role=\"list\"\n      aria-roledescription={ariaRoleDescription}\n      aria-hidden={true}\n    >\n      {visibleTicks.map(\n        ({ position, lines }, index) =>\n          isFinite(position) && (\n            <g\n              key={index}\n              transform={`translate(${position + xOffset},0)`}\n              className={clsx(styles.ticks, styles['ticks--bottom'], {\n                [styles['ticks--x']]: axis === 'x',\n                [styles['ticks--y']]: axis === 'y',\n              })}\n              role=\"listitem\"\n              aria-label={lines.join('\\n')}\n            >\n              <line className={styles.ticks__line} x1={0} x2={0} y1={0} y2={TICK_LENGTH} aria-hidden=\"true\" />\n              {lines.map((line, lineIndex) => (\n                <text\n                  className={styles.ticks__text}\n                  key={lineIndex}\n                  x={0}\n                  y={TICK_LENGTH + TICK_MARGIN + lineIndex * TICK_LINE_HEIGHT}\n                >\n                  {line}\n                </text>\n              ))}\n            </g>\n          )\n      )}\n\n      <text ref={virtualTextRef} x={0} y={0} style={{ visibility: 'hidden' }} aria-hidden=\"true\"></text>\n    </g>\n  );\n}\n"]}