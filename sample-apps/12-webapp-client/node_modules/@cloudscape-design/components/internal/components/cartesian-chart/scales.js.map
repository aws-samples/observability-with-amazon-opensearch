{"version":3,"file":"scales.js","sourceRoot":"","sources":["../../../../../src/internal/components/cartesian-chart/scales.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { scaleLinear, scaleLog, scaleTime, scaleBand, ScaleContinuousNumeric, ScaleTime, ScaleBand } from 'd3-scale';\n\nimport { ChartDataTypes, ChartDomain, ScaleType, ScaleRange } from './interfaces';\n\nexport interface NumericD3Scale {\n  type: 'numeric';\n  scale: ScaleContinuousNumeric<number, number>;\n}\n\nexport interface TimeD3Scale {\n  type: 'time';\n  scale: ScaleTime<number, number>;\n}\n\nexport interface CategoricalD3Scale {\n  type: 'categorical';\n  scale: ScaleBand<ChartDataTypes>;\n}\n\nexport type D3Scale = NumericD3Scale | TimeD3Scale | CategoricalD3Scale;\n\ntype InternalScale = ScaleContinuousNumeric<number, number> | ScaleBand<ChartDataTypes> | ScaleTime<number, number>;\n\nfunction isNumericDomain(domain: ChartDomain<ChartDataTypes>): domain is number[] {\n  return domain.length > 0 && typeof domain[0] === 'number';\n}\n\nfunction isDateDomain(domain: ChartDomain<ChartDataTypes>): domain is Date[] {\n  return domain.length > 0 && domain[0] instanceof Date;\n}\n\nfunction createNumericScale(type: ScaleType, domain: ChartDomain<ChartDataTypes>) {\n  let scale: ScaleContinuousNumeric<number, number>;\n  switch (type) {\n    case 'log':\n      scale = scaleLog();\n      break;\n    default:\n      scale = scaleLinear();\n  }\n\n  if (isNumericDomain(domain)) {\n    scale.domain(domain);\n  }\n\n  return scale;\n}\n\nfunction createTimeScale(domain: ChartDomain<ChartDataTypes>) {\n  const scale = scaleTime();\n  if (isDateDomain(domain)) {\n    scale.domain(domain);\n  }\n  return scale;\n}\n\nfunction createBandScale(domain: ChartDomain<ChartDataTypes>) {\n  const scale = scaleBand<ChartDataTypes>().padding(0.1);\n  scale.domain(domain);\n  return scale;\n}\n\nexport function createScale(type: ScaleType, domain: ChartDomain<ChartDataTypes>, range: ScaleRange): D3Scale {\n  switch (type) {\n    case 'linear':\n    case 'log':\n      return { type: 'numeric', scale: createNumericScale(type, domain).range(range) };\n\n    case 'time':\n      return { type: 'time', scale: createTimeScale(domain).range(range) };\n\n    case 'categorical':\n      return { type: 'categorical', scale: createBandScale(domain).range(range) };\n  }\n}\n\nexport class ChartScale {\n  public readonly scale: D3Scale;\n  public readonly d3Scale: InternalScale;\n\n  constructor(\n    public readonly scaleType: ScaleType,\n    public readonly domain: ChartDomain<ChartDataTypes>,\n    public readonly range: ScaleRange,\n    noCategoricalOuterPadding = false\n  ) {\n    this.scale = createScale(this.scaleType, this.domain, this.range);\n    this.d3Scale = this.scale.scale;\n\n    if (this.isCategorical()) {\n      if (noCategoricalOuterPadding) {\n        // Categorical charts with only line (or threshold) series don't need as much out padding\n        // compared to a bar series. Increasing the inner padding to push more data points to the outside.\n        this.d3Scale.paddingInner(0.7);\n        this.d3Scale.paddingOuter(0);\n      } else {\n        this.d3Scale.paddingInner(0.2);\n        this.d3Scale.paddingOuter(0.05);\n      }\n    }\n  }\n\n  cloneScale(newScaleType?: ScaleType, newDomain?: ChartDomain<ChartDataTypes>, newRange?: ScaleRange) {\n    return new ChartScale(newScaleType || this.scaleType, newDomain || this.domain, newRange || this.range);\n  }\n\n  isNumeric(): this is { d3Scale: ScaleContinuousNumeric<number, number>; domain: ChartDomain<number> } {\n    return this.scale.type === 'numeric';\n  }\n\n  isTime(): this is { d3Scale: ScaleTime<number, number>; domain: ChartDomain<Date> } {\n    return this.scale.type === 'time';\n  }\n\n  isCategorical(): this is { d3Scale: ScaleBand<ChartDataTypes>; domain: ChartDomain<string> } {\n    return this.scale.type === 'categorical';\n  }\n}\n\nexport class NumericChartScale {\n  public readonly scale: NumericD3Scale;\n  public readonly d3Scale: ScaleContinuousNumeric<number, number>;\n\n  constructor(\n    public readonly scaleType: 'linear' | 'log',\n    domain: ChartDomain<number>,\n    range: ScaleRange,\n    adjustDomain: null | number\n  ) {\n    const scale = createNumericScale(scaleType, domain).range(range);\n    if (adjustDomain !== null) {\n      scale.nice(adjustDomain);\n    }\n    this.scale = { type: 'numeric', scale };\n    this.d3Scale = this.scale.scale;\n  }\n\n  isCategorical() {\n    return false;\n  }\n}\n"]}