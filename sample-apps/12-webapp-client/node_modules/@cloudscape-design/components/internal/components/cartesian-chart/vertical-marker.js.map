{"version":3,"file":"vertical-marker.js","sourceRoot":"","sources":["../../../../../src/internal/components/cartesian-chart/vertical-marker.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,OAAO,CAAC;AAEhD,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAgBrC,eAAe,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;AAEhD,SAAS,cAAc,CACrB,EAA2E,EAC3E,GAA8B;QAD5B,MAAM,YAAA,EAAE,kBAAiB,EAAjB,UAAU,mBAAG,IAAI,KAAA,EAAE,gBAAe,EAAf,QAAQ,mBAAG,IAAI,KAAA,EAAE,MAAM,YAAA;IAG7C,IAAA,UAAU,GAAI,CAAA,MAAM,IAAI,EAAE,CAAA,GAAhB,CAAiB;IAElC,OAAO,CACL;QACE,8BACE,GAAG,EAAE,GAAG,iBACI,MAAM,EAClB,SAAS,EAAE,MAAM,CAAC,iBAAiB,CAAC,EACpC,KAAK,EAAE,EAAE,UAAU,EAAE,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,EAAE,EACpE,EAAE,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,CAAC,EACjB,EAAE,EAAE,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,CAAC,EACjB,EAAE,EAAE,CAAC,EACL,EAAE,EAAE,MAAM,GACV;QAED,UAAU;YACT,MAAM;YACN,MAAM,CAAC,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,CAClB,gCACE,GAAG,EAAE,KAAK,CAAC,GAAG,iBACF,MAAM,EAClB,SAAS,EAAE,MAAM,CAAC,wBAAwB,CAAC,EAC3C,EAAE,EAAE,KAAK,CAAC,CAAC,EACX,EAAE,EAAE,KAAK,CAAC,CAAC,EACX,CAAC,EAAE,CAAC,EACJ,MAAM,EAAE,KAAK,CAAC,KAAK,GACnB,CACH,EAVmB,CAUnB,CAAC,CACF,CACL,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { forwardRef, memo } from 'react';\n\nimport styles from './styles.css.js';\n\ninterface SeriesPoint {\n  key: string;\n  x: number;\n  y: number;\n  color: string;\n}\n\nexport interface VerticalMarkerProps {\n  height: number;\n  showPoints?: boolean;\n  showLine?: boolean;\n  points: null | readonly SeriesPoint[];\n}\n\nexport default memo(forwardRef(VerticalMarker));\n\nfunction VerticalMarker(\n  { height, showPoints = true, showLine = true, points }: VerticalMarkerProps,\n  ref: React.Ref<SVGLineElement>\n) {\n  const [firstPoint] = points || [];\n\n  return (\n    <g>\n      <line\n        ref={ref}\n        aria-hidden=\"true\"\n        className={styles['vertical-marker']}\n        style={{ visibility: showLine && firstPoint ? 'visible' : 'hidden' }}\n        x1={firstPoint?.x}\n        x2={firstPoint?.x}\n        y1={0}\n        y2={height}\n      />\n\n      {showPoints &&\n        points &&\n        points.map(point => (\n          <circle\n            key={point.key}\n            aria-hidden=\"true\"\n            className={styles['vertical-marker-circle']}\n            cx={point.x}\n            cy={point.y}\n            r={4}\n            stroke={point.color}\n          />\n        ))}\n    </g>\n  );\n}\n"]}