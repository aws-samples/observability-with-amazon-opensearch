{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/internal/components/dark-ribbon/index.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AACjD,OAAO,EAAE,mBAAmB,EAAE,MAAM,mCAAmC,CAAC;AACxE,OAAO,EAAE,qBAAqB,EAAE,MAAM,sCAAsC,CAAC;AAC7E,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAQrC,SAAS,YAAY,CAAC,QAAgB,EAAE,QAAgB,EAAE,MAAkC;IAC1F,IAAI,QAAQ,KAAK,QAAQ,EAAE;QACzB,MAAM,CAAC,QAAQ,CAAC,CAAC;KAClB;AACH,CAAC;AAED,MAAM,CAAC,OAAO,UAAU,UAAU,CAAC,EAAyD;QAAvD,QAAQ,cAAA,EAAE,SAAS,eAAA,EAAE,eAAe,qBAAA;IACvE,IAAM,YAAY,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAC;IAClD,IAAM,OAAO,GAAG,MAAM,CAAiB,IAAI,CAAC,CAAC;IAC7C,IAAM,SAAS,GAAG,qBAAqB,CAAC,UAAC,IAAiB,EAAE,EAAe;QACzE,0EAA0E;QAC1E,6CAA6C;QAC7C,wEAAwE;QACxE,IAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACpC,IAAA,KAAwD,EAAE,CAAC,KAAK,EAAtD,SAAS,YAAA,EAAQ,OAAO,UAAA,EAAS,QAAQ,WAAa,CAAC;QACvE,YAAY,CAAC,SAAS,EAAE,UAAG,IAAI,CAAC,MAAM,OAAI,EAAE,UAAA,SAAS,IAAI,OAAA,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,CAAC,EAA7B,CAA6B,CAAC,CAAC;QACxF,YAAY,CAAC,OAAO,EAAE,UAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,OAAI,EAAE,UAAA,OAAO,IAAI,OAAA,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,EAAzB,CAAyB,CAAC,CAAC;QACnF,YAAY,CACV,QAAQ,EACR,UAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAI,EACpD,UAAA,QAAQ,IAAI,OAAA,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC,EAA3B,CAA2B,CACxC,CAAC;IACJ,CAAC,CAAC,CAAC;IACH,mBAAmB,CAAC,YAAY,EAAE,UAAA,IAAI;QACpC,IAAI,OAAO,CAAC,OAAO,EAAE;YACnB,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;SAClC;IACH,CAAC,CAAC,CAAC;IACH,SAAS,CAAC;QACR,IAAM,OAAO,GAAG;YACd,IAAI,YAAY,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE;gBAC3C,SAAS,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;aAClD;QACH,CAAC,CAAC;QACF,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAC3C,OAAO,cAAM,OAAA,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,EAA7C,CAA6C,CAAC;IAC7D,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC;IAEhB,IAAI,eAAe,KAAK,IAAI,IAAI,CAAC,SAAS,EAAE;QAC1C,OAAO,0CAAG,QAAQ,CAAI,CAAC;KACxB;IAED,OAAO,CACL,6BAAK,GAAG,EAAE,YAAY,EAAE,SAAS,EAAC,8BAA8B;QAC9D,6BAAK,GAAG,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC,iBAAiB,CAAC,GAAI;QAC3D,6BAAK,SAAS,EAAE,MAAM,CAAC,OAAO,IAAG,QAAQ,CAAO,CAC5C,CACP,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useEffect, useRef } from 'react';\nimport { useMutationObserver } from '../../hooks/use-mutation-observer';\nimport { useStableEventHandler } from '../../hooks/use-stable-event-handler';\nimport styles from './styles.css.js';\n\ninterface DarkRibbonProps {\n  children: React.ReactNode;\n  isRefresh: boolean;\n  hasPlainStyling?: boolean;\n}\n\nfunction setIfChanged(oldValue: string, newValue: string, setter: (newValue: string) => void) {\n  if (oldValue !== newValue) {\n    setter(newValue);\n  }\n}\n\nexport default function DarkRibbon({ children, isRefresh, hasPlainStyling }: DarkRibbonProps) {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const fillRef = useRef<HTMLDivElement>(null);\n  const syncSizes = useStableEventHandler((from: HTMLElement, to: HTMLElement) => {\n    // JSDOM calls mutation observer callback even if attribute did not change\n    // https://github.com/jsdom/jsdom/issues/3305\n    // To prevent infinite loops, we need to check the values before setting\n    const size = from.getBoundingClientRect();\n    const { height: oldHeight, left: oldLeft, right: oldRight } = to.style;\n    setIfChanged(oldHeight, `${size.height}px`, newHeight => (to.style.height = newHeight));\n    setIfChanged(oldLeft, `${-1 * size.left}px`, newLeft => (to.style.left = newLeft));\n    setIfChanged(\n      oldRight,\n      `${-1 * (document.body.clientWidth - size.right)}px`,\n      newRight => (to.style.right = newRight)\n    );\n  });\n  useMutationObserver(containerRef, node => {\n    if (fillRef.current) {\n      syncSizes(node, fillRef.current);\n    }\n  });\n  useEffect(() => {\n    const handler = () => {\n      if (containerRef.current && fillRef.current) {\n        syncSizes(containerRef.current, fillRef.current);\n      }\n    };\n    window.addEventListener('resize', handler);\n    return () => window.removeEventListener('resize', handler);\n  }, [syncSizes]);\n\n  if (hasPlainStyling === true || !isRefresh) {\n    return <>{children}</>;\n  }\n\n  return (\n    <div ref={containerRef} className=\"awsui-context-content-header\">\n      <div ref={fillRef} className={styles['background-fill']} />\n      <div className={styles.content}>{children}</div>\n    </div>\n  );\n}\n"]}