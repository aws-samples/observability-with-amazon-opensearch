{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/internal/hooks/use-controllable/index.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AACrD,OAAO,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAQzC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAoCG;AACH,MAAM,UAAU,eAAe,CAC7B,eAA0B,EAC1B,OAAkD,EAClD,YAAuB,EACvB,EAAqE;QAAnE,aAAa,mBAAA,EAAE,aAAa,mBAAA,EAAE,cAAc,oBAAA;IAE9C,+HAA+H;IAC/H,IAAM,YAAY,GAAG,KAAK,CAAC,QAAQ,CAAC,eAAe,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAEtE,IAAI,aAAa,EAAE;QACjB,sFAAsF;QAEtF,sDAAsD;QACtD,KAAK,CAAC,SAAS,CAAC;YACd,IAAI,YAAY,IAAI,OAAO,KAAK,SAAS,EAAE;gBACzC,QAAQ,CACN,aAAa,EACb,0BAAoB,cAAc,gCAAwB,aAAa,6DAA2D,CACnI,CAAC;aACH;QACH,CAAC,EAAE,CAAC,OAAO,EAAE,YAAY,EAAE,aAAa,EAAE,aAAa,EAAE,cAAc,CAAC,CAAC,CAAC;QAE1E,sDAAsD;QACtD,KAAK,CAAC,SAAS,CAAC;YACd,IAAM,eAAe,GAAG,eAAe,KAAK,SAAS,CAAC;YACtD,IAAI,YAAY,KAAK,eAAe,EAAE;gBACpC,IAAM,WAAW,GAAG,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,cAAc,CAAC;gBACjE,IAAM,OAAO,GAAG,eAAe,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,cAAc,CAAC;gBAChE,QAAQ,CACN,aAAa,EACb,sCAA+B,WAAW,eAAK,cAAc,8BAAoB,OAAO,OAAI;oBAC1F,mEAA4D,WAAW,iBAAO,OAAO,uBAAoB;oBACzG,4FAA4F;oBAC5F,sDAAsD,CACzD,CAAC;aACH;QACH,CAAC,EAAE,CAAC,YAAY,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,CAAC,CAAC,CAAC;KACpE;IAED,mEAAmE;IAC7D,IAAA,KAAyB,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,EAApD,UAAU,QAAA,EAAE,QAAQ,QAAgC,CAAC;IACtD,IAAA,KAAwC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAA5D,eAAe,QAAA,EAAE,kBAAkB,QAAyB,CAAC;IAEpE,uCAAuC;IACvC,IAAM,wBAAwB,GAAG,eAAe,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC;IAE7E,IAAM,oBAAoB,GAAG,KAAK,CAAC,WAAW,CAC5C,UAAC,QAAyC;QACxC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QACnB,kBAAkB,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC,EACD,CAAC,QAAQ,EAAE,kBAAkB,CAAC,CAC/B,CAAC;IAEF,IAAI,YAAY,EAAE;QAChB,OAAO,CAAC,eAAe,EAAE,eAAe,CAAU,CAAC;KACpD;SAAM;QACL,OAAO,CAAC,wBAAwB,EAAE,oBAAoB,CAAU,CAAC;KAClE;AACH,CAAC;AAED,SAAS,eAAe;IACtB,OAAO,KAAK,CAAC,CAAC;AAChB,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport * as React from 'react';\nimport { isDevelopment } from '../../is-development';\nimport { warnOnce } from '../../logging';\n\ninterface PropertyDescription {\n  componentName: string;\n  controlledProp: string;\n  changeHandler: string;\n}\n\n/**\n * This hook allows you to make a component that can be used both in controlled mode and uncontrolled mode.\n * Pass in your component's props, and then implement your component as if it was only controlled.\n * When calling onChange callbacks (or the equivalent for your property), you need to call both the callback returned by this function\n * as well as the callback provided in your component's props.\n *\n * A component determines its mode (either controlled or uncontrolled) on the first render and keeps it for its lifetime. The mode cannot\n * be switched later.\n *\n *\n * Example usage:\n * ```jsx\n * const [checked, setChecked] = useControllable(\n *     props,\n *     props.defaultEnabled ?? false,\n *     {\n *        componentName: 'MyCheckboxComponent',\n *        controlledProp: 'enabled',\n *        changeHandler: 'onCheckedStatusChange'\n *     }\n * )\n *\n * return\n *  <input\n *   type=\"checkbox\"\n *   checked={checked}\n *   onChange={event => {\n *    setChecked(event.target.checked);\n *    fireNonCancelableEvent(props.onCheckedStatusChange, { checked: event.target.checked })\n *   }} />\n * ```\n *\n * @param controlledValue value for the controlled mode\n * @param handler update handler for controlled mode\n * @param defaultValue initial value for uncontrolled mode\n * @param description property metadata\n */\nexport function useControllable<ValueType>(\n  controlledValue: ValueType,\n  handler: ((...args: any[]) => unknown) | undefined,\n  defaultValue: ValueType,\n  { componentName, changeHandler, controlledProp }: PropertyDescription\n) {\n  // The decision whether a component is controlled or uncontrolled is made on its first render and cannot be changed afterwards.\n  const isControlled = React.useState(controlledValue !== undefined)[0];\n\n  if (isDevelopment) {\n    // Print a warning if the component switches between controlled and uncontrolled mode.\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (isControlled && handler === undefined) {\n        warnOnce(\n          componentName,\n          `You provided a \\`${controlledProp}\\` prop without an \\`${changeHandler}\\` handler. This will render a non-interactive component.`\n        );\n      }\n    }, [handler, isControlled, componentName, changeHandler, controlledProp]);\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      const isControlledNow = controlledValue !== undefined;\n      if (isControlled !== isControlledNow) {\n        const initialMode = isControlled ? 'controlled' : 'uncontrolled';\n        const modeNow = isControlledNow ? 'controlled' : 'uncontrolled';\n        warnOnce(\n          componentName,\n          `A component tried to change ${initialMode} '${controlledProp}' property to be ${modeNow}. ` +\n            `This is not supported. Properties should not switch from ${initialMode} to ${modeNow} (or vice versa). ` +\n            `Decide between using a controlled or uncontrolled mode for the lifetime of the component. ` +\n            `More info: https://fb.me/react-controlled-components`\n        );\n      }\n    }, [isControlled, controlledProp, componentName, controlledValue]);\n  }\n\n  // This is the value that is used if the component is uncontrolled.\n  const [valueState, setValue] = React.useState(defaultValue);\n  const [valueHasBeenSet, setValueHasBeenSet] = React.useState(false);\n\n  // We track changes to the defaultValue\n  const currentUncontrolledValue = valueHasBeenSet ? valueState : defaultValue;\n\n  const setUncontrolledValue = React.useCallback(\n    (newValue: React.SetStateAction<ValueType>) => {\n      setValue(newValue);\n      setValueHasBeenSet(true);\n    },\n    [setValue, setValueHasBeenSet]\n  );\n\n  if (isControlled) {\n    return [controlledValue, defaultCallback] as const;\n  } else {\n    return [currentUncontrolledValue, setUncontrolledValue] as const;\n  }\n}\n\nfunction defaultCallback() {\n  return void 0;\n}\n"]}