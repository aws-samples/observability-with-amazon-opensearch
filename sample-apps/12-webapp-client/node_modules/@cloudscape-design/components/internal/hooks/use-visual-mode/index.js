// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
import { useState } from 'react';
import { ALWAYS_VISUAL_REFRESH } from '../../environment';
import { isMotionDisabled } from '../../motion';
import { findUpUntil } from '../../utils/dom';
import { useMutationObserver } from '../use-mutation-observer';
export function useCurrentMode(elementRef) {
    var _a = useState('light'), value = _a[0], setValue = _a[1];
    useMutationObserver(elementRef, function (node) {
        var darkModeParent = findUpUntil(node, function (node) { return node.classList.contains('awsui-polaris-dark-mode') || node.classList.contains('awsui-dark-mode'); });
        setValue(darkModeParent ? 'dark' : 'light');
    });
    return value;
}
export function useDensityMode(elementRef) {
    var _a = useState('comfortable'), value = _a[0], setValue = _a[1];
    useMutationObserver(elementRef, function (node) {
        var compactModeParent = findUpUntil(node, function (node) { return node.classList.contains('awsui-polaris-compact-mode') || node.classList.contains('awsui-compact-mode'); });
        setValue(compactModeParent ? 'compact' : 'comfortable');
    });
    return value;
}
export function useVisualRefresh(elementRef) {
    var _a = useState(Boolean(ALWAYS_VISUAL_REFRESH)), value = _a[0], setValue = _a[1];
    useMutationObserver(elementRef, function (node) {
        var _a, _b;
        var supportsCSSVariables = (_b = (_a = window.CSS) === null || _a === void 0 ? void 0 : _a.supports) === null || _b === void 0 ? void 0 : _b.call(_a, 'color', 'var(--test-var)');
        if (!supportsCSSVariables || ALWAYS_VISUAL_REFRESH) {
            return;
        }
        var visualRefreshParent = findUpUntil(node, function (node) { return node.classList.contains('awsui-visual-refresh'); });
        setValue(!!visualRefreshParent);
    });
    return value;
}
export function useReducedMotion(elementRef) {
    var _a = useState(false), value = _a[0], setValue = _a[1];
    useMutationObserver(elementRef, function (node) {
        setValue(isMotionDisabled(node));
    });
    return value;
}
//# sourceMappingURL=index.js.map