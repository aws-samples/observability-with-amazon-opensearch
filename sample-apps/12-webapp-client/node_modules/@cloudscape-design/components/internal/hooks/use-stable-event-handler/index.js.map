{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../src/internal/hooks/use-stable-event-handler/index.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAEvD;;;;;;;GAOG;AACH,MAAM,UAAU,qBAAqB,CAAoC,EAAK;IAC5E,IAAM,GAAG,GAAG,MAAM,EAAK,CAAC;IAExB,SAAS,CAAC;QACR,GAAG,CAAC,OAAO,GAAG,EAAE,CAAC;IACnB,CAAC,CAAC,CAAC;IAEH,OAAO,WAAW,CAAC;;QAAC,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAAK,OAAA,MAAA,GAAG,CAAC,OAAO,0CAAE,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;KAAA,EAAE,EAAE,CAAM,CAAC;AACvF,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect, useRef } from 'react';\n\n/**\n * A callback that stays stable between renders even as the dependencies change.\n * Not a recommended React pattern, so it should be used sparingly and only if\n * the callback is an event handler (i.e. not used during rendering) and causing\n * clear performance issues.\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\n */\nexport function useStableEventHandler<T extends (...args: any[]) => any>(fn: T): T {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = fn;\n  });\n\n  return useCallback((...args: any[]) => ref.current?.apply(undefined, args), []) as T;\n}\n"]}