{"version":3,"file":"parse-timezone-offset.js","sourceRoot":"","sources":["../../../../../src/internal/utils/date-time/parse-timezone-offset.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAEtC;;GAEG;AACH,MAAM,UAAU,mBAAmB,CAAC,OAAe;IAC3C,IAAA,KAAgB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAA/B,UAAS,EAAT,IAAI,mBAAG,EAAE,KAAsB,CAAC;IACnC,IAAA,KAAgC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAjD,aAAa,QAAA,EAAE,UAAU,QAAwB,CAAC;IAE3D,IAAI,aAAa,IAAI,UAAU,EAAE;QACzB,IAAA,KAA+B,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,EAAnD,WAAW,QAAA,EAAE,aAAa,QAAyB,CAAC;QAC3D,OAAO,MAAM,CAAC,aAAa,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;KACzF;IAED,IAAM,oBAAoB,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAClD,IAAI,oBAAoB,KAAK,CAAC,CAAC,EAAE;QAC/B,OAAO,CAAC,CAAC;KACV;IAED,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC;IAC/B,OAAO,CAAC,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACtC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Extracts timezone offset from ISO8601 date string.\n */\nexport function parseTimezoneOffset(isoDate: string): number {\n  const [, time = ''] = isoDate.split('T');\n  const [, signCharacter, offsetPart] = time.split(/(-|\\+)/);\n\n  if (signCharacter && offsetPart) {\n    const [offsetHours, offsetMinutes] = offsetPart.split(':');\n    return Number(signCharacter + '1') * (Number(offsetHours) * 60 + Number(offsetMinutes));\n  }\n\n  const utcTimezoneIndicator = isoDate.indexOf('Z');\n  if (utcTimezoneIndicator !== -1) {\n    return 0;\n  }\n\n  const date = new Date(isoDate);\n  return 0 - date.getTimezoneOffset();\n}\n"]}