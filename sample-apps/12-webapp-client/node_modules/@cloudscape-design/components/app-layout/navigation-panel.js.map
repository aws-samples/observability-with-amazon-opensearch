{"version":3,"file":"navigation-panel.js","sourceRoot":"","sources":["../../../src/app-layout/navigation-panel.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,KAAK,MAAM,OAAO,CAAC;AAE1B,OAAO,EAAsB,MAAM,EAAE,MAAM,UAAU,CAAC;AACtD,OAAO,MAAM,MAAM,iBAAiB,CAAC;AACrC,OAAO,cAAc,MAAM,8BAA8B,CAAC;AA0B1D,MAAM,UAAU,eAAe,CAAC,EAcT;;QAbrB,UAAU,gBAAA,EACV,YAAY,kBAAA,EACZ,YAAY,kBAAA,EACZ,QAAQ,cAAA,EACR,QAAQ,cAAA,EACR,UAAU,gBAAA,EACV,qBAAqB,2BAAA,EACrB,eAAe,qBAAA,EACf,cAAc,oBAAA,EACd,OAAO,aAAA,EACP,kBAAkB,wBAAA,EAClB,gBAAgB,sBAAA,EAChB,UAAU,gBAAA;IAEV,OAAO,CACL,6BAAK,SAAS,EAAE,MAAM,CAAC,kBAAkB,CAAC,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,qBAAqB,EAAE;QACjF,6BACE,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC;gBAC3C,GAAC,MAAM,CAAC,MAAM,IAAG,QAAQ;gBACzB,GAAC,MAAM,CAAC,IAAI,IAAG,cAAc;oBAC7B,EACF,KAAK,eACA,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,YAAY,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,gBAAgB,CAAC;YAGhF,oBAAC,MAAM,IACL,IAAI,EAAC,YAAY,EACjB,QAAQ,EAAE,QAAQ,EAClB,KAAK,EAAE,eAAe,EACtB,MAAM,EAAE,cAAc,EACtB,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,kBAAkB,EAC5B,UAAU,EAAE,UAAU,EACtB,OAAO,EAAE,OAAO,EAChB,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,cAAc,CAAC,UAAU,CAAC,EACpE,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE,cAAc,CAAC,kBAAkB,CAAC,CAAC,EACpF,eAAe,EAAE,IAAI,CAAC,MAAM,CAAC,mBAAmB,CAAC,EAAE,cAAc,CAAC,mBAAmB,CAAC,CAAC,EACvF,SAAS,EAAE,YAAY,EACvB,YAAY,EAAE,YAAY,EAC1B,UAAU,EAAE,UAAU,IAErB,UAAU,CACJ,CACL,CACF,CACP,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React from 'react';\nimport { AppLayoutProps } from './interfaces';\nimport { DesktopDrawerProps, Drawer } from './drawer';\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\nimport useContentHeight from './utils/use-content-height';\n\ninterface NavigationPanelProps {\n  navigationOpen: boolean;\n  isHidden: DesktopDrawerProps['isHidden'];\n\n  navigationDrawerWidth: number;\n  navigationWidth: number;\n  headerHeight: DesktopDrawerProps['topOffset'];\n  footerHeight: DesktopDrawerProps['bottomOffset'];\n  panelHeightStyle: ReturnType<typeof useContentHeight>['panelHeightStyle'];\n\n  navigation: React.ReactNode;\n\n  ariaLabels: AppLayoutProps['ariaLabels'];\n\n  isMobile: boolean;\n  isMotionEnabled: boolean;\n\n  onNavigationToggle: DesktopDrawerProps['onToggle'];\n  onClick: DesktopDrawerProps['onClick'];\n\n  toggleRefs: DesktopDrawerProps['toggleRefs'];\n}\n\nexport function NavigationPanel({\n  ariaLabels,\n  footerHeight,\n  headerHeight,\n  isHidden,\n  isMobile,\n  navigation,\n  navigationDrawerWidth,\n  navigationWidth,\n  navigationOpen,\n  onClick,\n  onNavigationToggle,\n  panelHeightStyle,\n  toggleRefs,\n}: NavigationPanelProps) {\n  return (\n    <div className={styles['navigation-panel']} style={{ width: navigationDrawerWidth }}>\n      <div\n        className={clsx(styles['panel-wrapper-outer'], {\n          [styles.mobile]: isMobile,\n          [styles.open]: navigationOpen,\n        })}\n        style={{\n          ...(isMobile ? { top: headerHeight, bottom: footerHeight } : panelHeightStyle),\n        }}\n      >\n        <Drawer\n          type=\"navigation\"\n          isMobile={isMobile}\n          width={navigationWidth}\n          isOpen={navigationOpen}\n          isHidden={isHidden}\n          onToggle={onNavigationToggle}\n          toggleRefs={toggleRefs}\n          onClick={onClick}\n          contentClassName={clsx(styles.navigation, testutilStyles.navigation)}\n          closeClassName={clsx(styles['navigation-close'], testutilStyles['navigation-close'])}\n          toggleClassName={clsx(styles['navigation-toggle'], testutilStyles['navigation-toggle'])}\n          topOffset={headerHeight}\n          bottomOffset={footerHeight}\n          ariaLabels={ariaLabels}\n        >\n          {navigation}\n        </Drawer>\n      </div>\n    </div>\n  );\n}\n"]}