{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../src/app-layout/notifications/index.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAErC,OAAO,EAAE,iBAAiB,EAAE,MAAM,8BAA8B,CAAC;AAUjE,IAAM,mBAAmB,GAAG,UAAC,EAA4D;QAA1D,kBAAkB,wBAAA,EAAE,QAAQ,cAAA,EAAE,MAAM,YAAA;IACjE,OAAO,CACL,6BAAK,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,EAAE,IAAI,EAAC,QAAQ,gBAAa,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,aAAa,IACtF,QAAQ,CACL,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,IAAM,mBAAmB,GAAG,UAAC,KAAyB;IAC9C,IAAA,KAA2B,iBAAiB,CAAC,KAAK,CAAC,SAAS,CAAC,EAA5D,SAAS,QAAA,EAAE,WAAW,QAAsC,CAAC;IACpE,OAAO,CACL;QACE,6BAAK,GAAG,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC,sBAAsB,CAAC;YAC5D,oBAAC,mBAAmB,eAAK,KAAK,EAAI,CAC9B;QACL,WAAW,CACX,CACJ,CAAC;AACJ,CAAC,CAAC;AASF,MAAM,CAAC,IAAM,aAAa,GAAG,KAAK,CAAC,UAAU,CAC3C,UACE,EAAwF,EACxF,GAA8B;IAD5B,IAAA,iBAAiB,uBAAA,EAAE,YAAY,kBAAA,EAAE,MAAM,YAAA,EAAE,QAAQ,cAAA,EAAK,IAAI,cAA5D,2DAA8D,CAAF;IAG5D,IAAM,kBAAkB,cAAyB,QAAQ,UAAA,IAAK,IAAI,CAAE,CAAC;IACrE,OAAO,CACL,6BACE,GAAG,EAAE,GAAG,EACR,SAAS,EAAE,IAAI,CACb,QAAQ,IAAI,MAAM,CAAC,aAAa,CAAC,EACjC,CAAC,iBAAiB,IAAI,MAAM,CAAC,4BAA4B,CAAC,EAC1D,CAAC,YAAY,IAAI,MAAM,CAAC,uBAAuB,CAAC,CACjD,IAEA,MAAM,CAAC,CAAC,CAAC,oBAAC,mBAAmB,eAAK,kBAAkB,EAAI,CAAC,CAAC,CAAC,oBAAC,mBAAmB,eAAK,kBAAkB,EAAI,CACvG,CACP,CAAC;AACJ,CAAC,CACF,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\nimport { AppLayoutProps } from '../interfaces';\nimport { useStickyPosition } from '../utils/use-sticky-position';\n\ninterface NotificationsProps {\n  testUtilsClassName: string;\n  children?: React.ReactNode;\n  labels: AppLayoutProps.Labels | undefined;\n  topOffset: number | undefined;\n  isMobile: boolean;\n}\n\nconst StaticNotifications = ({ testUtilsClassName, children, labels }: NotificationsProps) => {\n  return (\n    <div className={clsx(testUtilsClassName)} role=\"region\" aria-label={labels?.notifications}>\n      {children}\n    </div>\n  );\n};\n\nconst StickyNotifications = (props: NotificationsProps) => {\n  const [stickyRef, placeholder] = useStickyPosition(props.topOffset);\n  return (\n    <>\n      <div ref={stickyRef} className={styles['notifications-sticky']}>\n        <StaticNotifications {...props} />\n      </div>\n      {placeholder}\n    </>\n  );\n};\n\ninterface NotificationWrapperProps extends NotificationsProps {\n  sticky: boolean | undefined;\n  navigationPadding: boolean;\n  toolsPadding: boolean;\n  contentWidthStyles?: React.CSSProperties;\n}\n\nexport const Notifications = React.forwardRef(\n  (\n    { navigationPadding, toolsPadding, sticky, isMobile, ...rest }: NotificationWrapperProps,\n    ref: React.Ref<HTMLDivElement>\n  ) => {\n    const notificationsProps: NotificationsProps = { isMobile, ...rest };\n    return (\n      <div\n        ref={ref}\n        className={clsx(\n          isMobile && styles['root-mobile'],\n          !navigationPadding && styles['root-no-navigation-padding'],\n          !toolsPadding && styles['root-no-tools-padding']\n        )}\n      >\n        {sticky ? <StickyNotifications {...notificationsProps} /> : <StaticNotifications {...notificationsProps} />}\n      </div>\n    );\n  }\n);\n"]}