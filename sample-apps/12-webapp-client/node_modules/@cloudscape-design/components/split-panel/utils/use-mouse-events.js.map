{"version":3,"file":"use-mouse-events.js","sourceRoot":"","sources":["../../../../src/split-panel/utils/use-mouse-events.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AAEpC,OAAO,MAAM,MAAM,kBAAkB,CAAC;AAEtC,MAAM,CAAC,IAAM,cAAc,GAAG,UAAC,EAKZ;QAJjB,QAAQ,cAAA,EACR,aAAa,mBAAA,EACb,iBAAiB,uBAAA,EACjB,oBAAoB,0BAAA;IAEpB,IAAM,mBAAmB,GAAG,WAAW,CACrC,UAAC,KAAiB;QAChB,IAAI,CAAC,aAAa,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;YAC5C,OAAO;SACR;QAED,IAAI,QAAQ,KAAK,MAAM,EAAE;YACvB,IAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;YACnC,IAAM,KAAK,GAAG,aAAa,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,KAAK,GAAG,YAAY,CAAC;YAEjF,iBAAiB,CAAC,KAAK,CAAC,CAAC;SAC1B;aAAM;YACL,IAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;YACnC,IAAM,MAAM,GAAG,aAAa,CAAC,OAAO,CAAC,qBAAqB,EAAE,CAAC,MAAM,GAAG,YAAY,CAAC;YAEnF,oBAAoB,CAAC,MAAM,CAAC,CAAC;SAC9B;IACH,CAAC,EACD,CAAC,QAAQ,EAAE,aAAa,EAAE,iBAAiB,EAAE,oBAAoB,CAAC,CACnE,CAAC;IAEF,IAAM,iBAAiB,GAAG,WAAW,CAAC;QACpC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;QACxD,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAU,QAAQ,CAAE,CAAC,CAAC,CAAC;QAC7D,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC;QAC3D,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,mBAAmB,CAAC,CAAC;IACjE,CAAC,EAAE,CAAC,mBAAmB,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEpC,IAAM,iBAAiB,GAAG,WAAW,CAAC;QACpC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;QACrD,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAU,QAAQ,CAAE,CAAC,CAAC,CAAC;QAC1D,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,iBAAiB,CAAC,CAAC;QACxD,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,mBAAmB,CAAC,CAAC;IAC9D,CAAC,EAAE,CAAC,mBAAmB,EAAE,iBAAiB,EAAE,QAAQ,CAAC,CAAC,CAAC;IAEvD,OAAO,iBAAiB,CAAC;AAC3B,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback } from 'react';\nimport { SizeControlProps } from '../interfaces';\nimport styles from '../styles.css.js';\n\nexport const useMouseEvents = ({\n  position,\n  splitPanelRef,\n  setSidePanelWidth,\n  setBottomPanelHeight,\n}: SizeControlProps) => {\n  const onDocumentMouseMove = useCallback(\n    (event: MouseEvent) => {\n      if (!splitPanelRef || !splitPanelRef.current) {\n        return;\n      }\n\n      if (position === 'side') {\n        const mouseClientX = event.clientX;\n        const width = splitPanelRef.current.getBoundingClientRect().right - mouseClientX;\n\n        setSidePanelWidth(width);\n      } else {\n        const mouseClientY = event.clientY;\n        const height = splitPanelRef.current.getBoundingClientRect().bottom - mouseClientY;\n\n        setBottomPanelHeight(height);\n      }\n    },\n    [position, splitPanelRef, setSidePanelWidth, setBottomPanelHeight]\n  );\n\n  const onDocumentMouseUp = useCallback(() => {\n    document.body.classList.remove(styles['resize-active']);\n    document.body.classList.remove(styles[`resize-${position}`]);\n    document.removeEventListener('mouseup', onDocumentMouseUp);\n    document.removeEventListener('mousemove', onDocumentMouseMove);\n  }, [onDocumentMouseMove, position]);\n\n  const onSliderMouseDown = useCallback(() => {\n    document.body.classList.add(styles['resize-active']);\n    document.body.classList.add(styles[`resize-${position}`]);\n    document.addEventListener('mouseup', onDocumentMouseUp);\n    document.addEventListener('mousemove', onDocumentMouseMove);\n  }, [onDocumentMouseMove, onDocumentMouseUp, position]);\n\n  return onSliderMouseDown;\n};\n"]}