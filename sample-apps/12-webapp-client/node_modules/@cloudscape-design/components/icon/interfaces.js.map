{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/icon/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { BaseComponentProps } from '../internal/base-component';\n\nexport interface IconProps extends BaseComponentProps {\n  /**\n   * Specifies the icon to be displayed.\n   */\n  name?: IconProps.Name;\n  /**\n   * Specifies the size of the icon.\n   *\n   * If you set size to `inherit`, an icon size will be assigned based on the icon's inherited line height.\n   * For icons used alongside text, ensure the icon is placed inside the acompanying text tag.\n   * The icon will be vertically centered based on the height.\n   *\n   * @visualrefresh `medium` size\n   */\n  size?: IconProps.Size;\n\n  /**\n   * Specifies the color variant of the icon. The `normal` variant picks up the current color of its context.\n   */\n  variant?: IconProps.Variant;\n\n  /**\n   * Specifies the URL of a custom icon. Use this property if the icon you want isn't available, and your custom icon cannot be an SVG.\n   * For SVG icons, use the `svg` slot instead.\n   *\n   * If you set both `url` and `svg`, `svg` will take precedence.\n   */\n  url?: string;\n  /**\n   * Specifies alternate text for a custom icon. We recommend that you provide this for accessibility.\n   * This property is ignored if you use a predefined icon or if you set your custom icon using the `svg` slot.\n   */\n  alt?: string;\n\n  /**\n   * Specifies the SVG of a custom icon.\n   *\n   * Use this property if the icon you want isn't available, and you want your custom icon to inherit colors dictated by variant or hover states.\n   * When this property is set, the component will be decorated with `aria-hidden=\"true\"`. Ensure that the `svg` element:\n   * - has attribute `focusable=\"false\"`.\n   * - has `viewBox=\"0 0 16 16\"`.\n   *\n   * If you set the `svg` element as the root node of the slot, the component will automatically\n   * - set `stroke=\"currentColor\"`, `fill=\"none\"`, and `vertical-align=\"top\"`.\n   * - set the stroke width based on the size of the icon.\n   * - set the width and height of the SVG element based on the size of the icon.\n   *\n   * If you don't want these styles to be automatically set, wrap the `svg` element into a `span` and ensure icon `size` is not set to `inherit`.\n   * You can still set the stroke to `currentColor` to inherit the color of the surrounding elements.\n   *\n   * If you set both `url` and `svg`, `svg` will take precedence.\n   *\n   * *Note:* Remember to remove any additional elements (for example: `defs`) and related CSS classes from SVG files exported from design software.\n   * In most cases, they aren't needed, as the `svg` element inherits styles from the icon component.\n   */\n  svg?: React.ReactNode;\n}\n\nexport namespace IconProps {\n  // Why not enums? Explained there\n  // https://stackoverflow.com/questions/52393730/typescript-string-literal-union-type-from-enum\n  export type Name =\n    | 'add-plus'\n    | 'angle-left-double'\n    | 'angle-left'\n    | 'angle-right-double'\n    | 'angle-right'\n    | 'angle-up'\n    | 'angle-down'\n    | 'arrow-left'\n    | 'bug'\n    | 'call'\n    | 'calendar'\n    | 'caret-down-filled'\n    | 'caret-down'\n    | 'caret-left-filled'\n    | 'caret-right-filled'\n    | 'caret-up-filled'\n    | 'caret-up'\n    | 'contact'\n    | 'close'\n    | 'copy'\n    | 'download'\n    | 'edit'\n    | 'ellipsis'\n    | 'envelope'\n    | 'expand'\n    | 'external'\n    | 'file-open'\n    | 'file'\n    | 'filter'\n    | 'folder-open'\n    | 'folder'\n    | 'heart'\n    | 'key'\n    | 'lock-private'\n    | 'menu'\n    | 'microphone'\n    | 'notification'\n    | 'redo'\n    | 'refresh'\n    | 'search'\n    | 'settings'\n    | 'share'\n    | 'status-in-progress'\n    | 'status-info'\n    | 'status-negative'\n    | 'status-pending'\n    | 'status-positive'\n    | 'status-stopped'\n    | 'status-warning'\n    | 'treeview-collapse'\n    | 'treeview-expand'\n    | 'undo'\n    | 'unlocked'\n    | 'upload'\n    | 'user-profile'\n    | 'view-full'\n    | 'view-horizontal'\n    | 'view-vertical'\n    | 'zoom-in'\n    | 'zoom-out';\n\n  export type Variant = 'normal' | 'disabled' | 'error' | 'inverted' | 'link' | 'subtle' | 'success' | 'warning';\n\n  export type Size = 'small' | 'normal' | 'medium' | 'big' | 'large' | 'inherit';\n}\n"]}