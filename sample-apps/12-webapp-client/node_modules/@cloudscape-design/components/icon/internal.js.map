{"version":3,"file":"internal.js","sourceRoot":"","sources":["../../../src/icon/internal.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport clsx from 'clsx';\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport { getBaseProps } from '../internal/base-component';\nimport { warnOnce } from '../internal/logging';\nimport styles from './styles.css.js';\nimport icons from './icons';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { IconProps } from './interfaces';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\n\ntype InternalIconProps = IconProps &\n  InternalBaseComponentProps & {\n    badge?: boolean;\n  };\n\nfunction iconSizeMap(height: number | null) {\n  if (height === null) {\n    // This is the best guess for the contextual height while server rendering.\n    return 'normal';\n  }\n\n  if (height >= 50) {\n    return 'large';\n  } else if (height >= 36) {\n    return 'big';\n  } else if (height >= 24) {\n    return 'medium';\n  } else if (height <= 16) {\n    return 'small';\n  } else {\n    return 'normal';\n  }\n}\n\nconst InternalIcon = ({\n  name,\n  size = 'normal',\n  variant = 'normal',\n  url,\n  alt,\n  svg,\n  badge,\n  __internalRootRef = null,\n  ...props\n}: InternalIconProps) => {\n  const iconRef = useRef<HTMLElement>(null);\n  // To ensure a re-render is triggered on visual mode changes\n  useVisualRefresh();\n  const [parentHeight, setParentHeight] = useState<number | null>(null);\n  const contextualSize = size === 'inherit';\n  const iconSize = contextualSize ? iconSizeMap(parentHeight) : size;\n  const inlineStyles = contextualSize && parentHeight !== null ? { height: `${parentHeight}px` } : {};\n  const baseProps = getBaseProps(props);\n\n  baseProps.className = clsx(\n    baseProps.className,\n    styles.icon,\n    contextualSize && styles['icon-flex-height'],\n    badge && styles.badge,\n    !contextualSize && styles[`size-${iconSize}-mapped-height`],\n    styles[`size-${iconSize}`],\n    styles[`variant-${variant}`]\n  );\n\n  // Possible infinite loop is not a concern here because line\n  // height should not change without an external state update.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useLayoutEffect(() => {\n    if (!contextualSize || !iconRef.current) {\n      return;\n    }\n    const { lineHeight } = getComputedStyle(iconRef.current);\n    const newParentHeight = parseInt(lineHeight, 10);\n    setParentHeight(newParentHeight);\n  });\n\n  const mergedRef = useMergeRefs(iconRef, __internalRootRef);\n\n  if (svg) {\n    if (url) {\n      warnOnce(\n        'Icon',\n        'You have specified both `url` and `svg`. `svg` will take precedence and `url` will be ignored.'\n      );\n    }\n    return (\n      <span {...baseProps} ref={mergedRef} aria-hidden=\"true\" style={inlineStyles}>\n        {svg}\n      </span>\n    );\n  }\n\n  if (url) {\n    return (\n      <span {...baseProps} ref={mergedRef} style={inlineStyles}>\n        <img src={url} alt={alt} />\n      </span>\n    );\n  }\n\n  const validIcon = name && Object.prototype.hasOwnProperty.call(icons, name);\n\n  return (\n    <span\n      {...baseProps}\n      // dangerouslySetInnerHTML is safe here, as we control the content coming from `icons`\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={validIcon ? { __html: icons[name] } : undefined}\n      ref={mergedRef}\n      style={inlineStyles}\n    />\n  );\n};\n\nexport { InternalIconProps };\nexport default InternalIcon;\n"]}