{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/form-field/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BaseComponentProps } from '../internal/base-component';\nimport React from 'react';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\n\nexport interface FormFieldProps extends BaseComponentProps {\n  /**\n   * The ID of the primary form control. You can use this to set the\n   * `for` attribute of a label for accessibility.\n   *\n   * If you don't set this property, the control group automatically sets\n   * the label to the ID of an inner form control (for example, an [input](/components/input) component).\n   * This only works well if you're using a single control in the form field.\n   */\n  controlId?: string;\n\n  /**\n   * Determines whether the primary control should expand to 12 columns.\n   *\n   * By default (or when this property is set to `false`), the primary control\n   * occupies 9 columns. The secondary control uses the remaining 3 columns.\n   * On smaller viewports, both components occupy 12 columns and stack on top of each other.\n   *\n   * If this property is set to `true`, the primary control uses the full\n   * 12 columns. The secondary control (if present) also uses 12 columns, and the two\n   * controls stack on top of each other.\n   */\n  stretch?: boolean;\n\n  /**\n   * The main label for the form field.\n   */\n  label?: React.ReactNode;\n\n  /**\n   * Use to display an 'Info' link next to the label.\n   */\n  info?: React.ReactNode;\n\n  /**\n   * The primary form control (for example, input, textarea, etc.).\n   * @displayname control\n   */\n  children?: React.ReactNode;\n\n  /**\n   * A secondary control. You can use this for custom actions and content.\n   */\n  secondaryControl?: React.ReactNode;\n\n  /**\n   * Detailed information about the form field that's displayed below the label.\n   */\n  description?: React.ReactNode;\n\n  /**\n   * Constraint text that's displayed below the control. Use this to provide\n   * additional information about valid formats, etc.\n   */\n  constraintText?: React.ReactNode;\n\n  /**\n   * Text that displays as a validation message. If this is set to a\n   * non-empty string, it will render the form field as invalid.\n   */\n  errorText?: React.ReactNode;\n}\n\nexport interface InternalFormFieldProps extends FormFieldProps, InternalBaseComponentProps {\n  /**\n   * Visually hide the label.\n   */\n  __hideLabel?: boolean;\n}\n"]}