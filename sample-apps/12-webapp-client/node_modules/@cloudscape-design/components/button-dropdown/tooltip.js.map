{"version":3,"file":"tooltip.js","sourceRoot":"","sources":["../../../src/button-dropdown/tooltip.tsx"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { KeyboardEventHandler, useRef, useState } from 'react';\n\nimport Arrow from '../popover/arrow';\nimport PopoverContainer from '../popover/container';\nimport PopoverBody from '../popover/body';\nimport Portal from '../internal/components/portal';\nimport { usePortalModeClasses } from '../internal/hooks/use-portal-mode-classes';\nimport { useReducedMotion } from '../internal/hooks/use-visual-mode';\n\nexport interface TooltipProps {\n  children?: React.ReactNode;\n  content?: React.ReactNode;\n  position?: 'top' | 'right' | 'bottom' | 'left';\n}\n\nconst DEFAULT_OPEN_TIMEOUT_IN_MS = 120;\n\nexport default function Tooltip({ children, content, position = 'right' }: TooltipProps) {\n  const ref = useRef<HTMLSpanElement | null>(null);\n  const isReducedMotion = useReducedMotion(ref);\n  const { open, triggerProps } = useTooltipOpen(isReducedMotion ? 0 : DEFAULT_OPEN_TIMEOUT_IN_MS);\n  const portalClasses = usePortalModeClasses(ref);\n\n  return (\n    <span ref={ref} {...triggerProps}>\n      {children}\n      {open && (\n        <Portal>\n          <span className={portalClasses}>\n            <PopoverContainer\n              position={position}\n              trackRef={ref}\n              arrow={position => <Arrow position={position} />}\n              renderWithPortal={true}\n              zIndex={7000}\n            >\n              <PopoverBody\n                size=\"small\"\n                fixedWidth={false}\n                dismissButton={false}\n                dismissAriaLabel={undefined}\n                header={null}\n                onDismiss={() => {}}\n                overflowVisible=\"both\"\n              >\n                <span data-testid=\"button-dropdown-disabled-reason\" role=\"tooltip\">\n                  {content}\n                </span>\n              </PopoverBody>\n            </PopoverContainer>\n          </span>\n        </Portal>\n      )}\n    </span>\n  );\n}\n\nfunction useTooltipOpen(timeout: number) {\n  const handle = useRef<number>();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const close = () => {\n    clearTimeout(handle.current);\n    setIsOpen(false);\n  };\n  const open = () => setIsOpen(true);\n  const openDelayed = () => {\n    handle.current = setTimeout(open, timeout);\n  };\n  const onKeyDown: KeyboardEventHandler = e => {\n    if (isOpen && isEscape(e.key)) {\n      e.preventDefault();\n      e.stopPropagation();\n      close();\n    }\n  };\n\n  const onFocus = openDelayed;\n  const onBlur = close;\n\n  return {\n    open: isOpen,\n    triggerProps: {\n      onBlur,\n      onFocus,\n      onKeyDown,\n    },\n  };\n}\n\nconst isEscape = (key: string) => key === 'Escape' || key === 'Esc';\n"]}