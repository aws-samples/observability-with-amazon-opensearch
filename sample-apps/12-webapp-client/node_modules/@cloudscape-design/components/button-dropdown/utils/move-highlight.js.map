{"version":3,"file":"move-highlight.js","sourceRoot":"","sources":["../../../../src/button-dropdown/utils/move-highlight.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,SAAS,CAAC;AAoBnD,MAAM,CAAC,OAAO,UAAU,aAAa,CAAC,EAMjB;QALnB,UAAU,gBAAA,EACV,aAAa,mBAAA,EACb,OAAO,aAAA,EACP,mBAAmB,yBAAA,EACnB,kBAAkB,wBAAA;IAElB,IAAM,OAAO,GAAG,UAAC,YAAuB;;QACtC,IAAM,IAAI,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;QAEnC,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,IAAI,CAAC;SACb;QAED,8DAA8D;QAC9D,2CAA2C;QAC3C,IAAI,CAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,QAAQ,KAAI,mBAAmB,EAAE;YAChD,OAAO,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5B;QAED,4DAA4D;QAC5D,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;YAClD,OAAO,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5B;QAED,gEAAgE;QAChE,IAAI,mBAAmB,IAAI,CAAC,kBAAkB,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;YACvF,OAAO,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5B;QAED,wEAAwE;QACxE,IACE,mBAAmB;YACnB,kBAAkB;YAClB,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,aAAa,CAAC;YACvC,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,EACtC;YACA,OAAO,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5B;QAED,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC,CAAC;IAEF,OAAO,OAAO,CAAC,UAAU,CAAC,CAAC;AAC7B,CAAC;AAED,SAAS,YAAY,CAAC,IAAe,EAAE,KAAgB;IACrD,OAAO,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC;AAED,SAAS,WAAW,CAAC,IAAe,EAAE,KAAgB;IACpD,OAAO,IAAI,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,CAAC;AACtC,CAAC;AAED,SAAS,UAAU,CAAC,MAAiB,EAAE,KAAgB;IACrD,OAAO,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { isItemGroup, indexEquals } from './utils';\nimport { ButtonDropdownProps } from '../interfaces';\nimport { TreeIndex } from './create-items-tree';\n\n// While every menu item except the edge ones have successors and predecessors,\n// there are rules determining what items are eligible for highlighting for the\n// given set of conditions. The function implements all these rules.\n\ninterface MoveHighlightProps {\n  startIndex: TreeIndex;\n  expandedIndex: TreeIndex;\n  getNext: (index: TreeIndex) => {\n    index: TreeIndex;\n    item: ButtonDropdownProps.ItemOrGroup;\n    parent?: ButtonDropdownProps.ItemOrGroup;\n  } | null;\n  hasExpandableGroups: boolean;\n  isInRestrictedView: boolean;\n}\n\nexport default function moveHighlight({\n  startIndex,\n  expandedIndex,\n  getNext,\n  hasExpandableGroups,\n  isInRestrictedView,\n}: MoveHighlightProps): TreeIndex | null {\n  const tryMove = (currentIndex: TreeIndex): TreeIndex | null => {\n    const next = getNext(currentIndex);\n\n    if (!next) {\n      return null;\n    }\n\n    // Prevents stepping into disabled expandable groups. However,\n    // it's possible to navigate nested groups.\n    if (next.parent?.disabled && hasExpandableGroups) {\n      return tryMove(next.index);\n    }\n\n    // it is not allowed to highlight groups when non-expandable\n    if (isItemGroup(next.item) && !hasExpandableGroups) {\n      return tryMove(next.index);\n    }\n\n    // can only move within same parent unless is in restricted view\n    if (hasExpandableGroups && !isInRestrictedView && !isSameParent(startIndex, next.index)) {\n      return tryMove(next.index);\n    }\n\n    // in restricted view can only navigate to children if group is expanded\n    if (\n      hasExpandableGroups &&\n      isInRestrictedView &&\n      !isSameLevel(next.index, expandedIndex) &&\n      !isIncluded(expandedIndex, next.index)\n    ) {\n      return tryMove(next.index);\n    }\n\n    return next.index;\n  };\n\n  return tryMove(startIndex);\n}\n\nfunction isSameParent(left: TreeIndex, right: TreeIndex) {\n  return indexEquals(left.slice(0, -1), right.slice(0, -1));\n}\n\nfunction isSameLevel(left: TreeIndex, right: TreeIndex) {\n  return left.length === right.length;\n}\n\nfunction isIncluded(parent: TreeIndex, child: TreeIndex) {\n  return indexEquals(parent, child.slice(0, -1));\n}\n"]}