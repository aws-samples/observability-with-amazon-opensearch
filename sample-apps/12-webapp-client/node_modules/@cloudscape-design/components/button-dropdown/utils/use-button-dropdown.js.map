{"version":3,"file":"use-button-dropdown.js","sourceRoot":"","sources":["../../../../src/button-dropdown/utils/use-button-dropdown.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport { useOpenState } from '../../internal/components/options-list/utils/use-open-state';\nimport { ButtonDropdownProps, ButtonDropdownSettings, GroupToggle, HighlightProps, ItemActivate } from '../interfaces';\nimport { fireCancelableEvent, CancelableEventHandler, isPlainLeftClick } from '../../internal/events';\nimport { KeyCode } from '../../internal/keycode';\nimport { getItemTarget, isItemGroup, isLinkItem } from './utils';\nimport useHighlightedMenu from './use-highlighted-menu';\n\ninterface UseButtonDropdownOptions extends ButtonDropdownSettings {\n  items: ButtonDropdownProps.Items;\n  onItemClick?: CancelableEventHandler<ButtonDropdownProps.ItemClickDetails>;\n  onItemFollow?: CancelableEventHandler<ButtonDropdownProps.ItemClickDetails>;\n  usingMouse: React.MutableRefObject<boolean>;\n}\n\ninterface UseButtonDropdownApi extends HighlightProps {\n  isOpen: boolean;\n  onKeyDown: (event: React.KeyboardEvent) => void;\n  onKeyUp: (event: React.KeyboardEvent) => void;\n  onItemActivate: ItemActivate;\n  onGroupToggle: GroupToggle;\n  toggleDropdown: () => void;\n}\n\nexport function useButtonDropdown({\n  items,\n  onItemClick,\n  onItemFollow,\n  hasExpandableGroups,\n  isInRestrictedView = false,\n  usingMouse,\n}: UseButtonDropdownOptions): UseButtonDropdownApi {\n  const { targetItem, isHighlighted, isExpanded, highlightItem, moveHighlight, expandGroup, collapseGroup, reset } =\n    useHighlightedMenu({\n      items,\n      hasExpandableGroups,\n      isInRestrictedView,\n    });\n\n  const { isOpen, closeDropdown, toggleDropdown } = useOpenState({ onClose: reset });\n\n  const onGroupToggle: GroupToggle = item => (!isExpanded(item) ? expandGroup(item) : collapseGroup());\n\n  const onItemActivate: ItemActivate = (item, event) => {\n    const details = {\n      id: item.id || 'undefined',\n      href: item.href,\n      external: item.external,\n      target: getItemTarget(item),\n    };\n    if (onItemFollow && item.href && isPlainLeftClick(event)) {\n      fireCancelableEvent(onItemFollow, details, event);\n    }\n    if (onItemClick) {\n      fireCancelableEvent(onItemClick, details, event);\n    }\n    closeDropdown();\n  };\n\n  const doVerticalNavigation = (direction: -1 | 1) => {\n    if (isOpen) {\n      moveHighlight(direction);\n    }\n  };\n\n  const openAndSelectFirst = (event: React.KeyboardEvent) => {\n    toggleDropdown();\n    moveHighlight(1);\n    event.preventDefault();\n  };\n\n  const actOnParentDropdown = (event: React.KeyboardEvent) => {\n    // if there is no highlighted item we act on the trigger by opening or closing dropdown\n    if (!targetItem) {\n      if (isOpen && !isInRestrictedView) {\n        toggleDropdown();\n      } else {\n        openAndSelectFirst(event);\n      }\n    } else {\n      if (isItemGroup(targetItem)) {\n        onGroupToggle(targetItem, event);\n      } else {\n        onItemActivate(targetItem, event);\n      }\n    }\n  };\n\n  const activate = (event: React.KeyboardEvent, isEnter?: boolean) => {\n    usingMouse.current = false;\n\n    // if item is a link we rely on default behavior of an anchor, no need to prevent\n    if (targetItem && isLinkItem(targetItem) && isEnter) {\n      return;\n    }\n\n    event.preventDefault();\n    actOnParentDropdown(event);\n  };\n\n  const onKeyDown = (event: React.KeyboardEvent) => {\n    switch (event.keyCode) {\n      case KeyCode.down: {\n        doVerticalNavigation(1);\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.up: {\n        doVerticalNavigation(-1);\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.space: {\n        // Prevent scrolling the list of items and highlighting the trigger\n        usingMouse.current = false;\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.enter: {\n        if (!targetItem?.disabled) {\n          activate(event, true);\n        }\n        break;\n      }\n      case KeyCode.left:\n      case KeyCode.right: {\n        if (targetItem && !targetItem.disabled && isItemGroup(targetItem) && !isExpanded(targetItem)) {\n          expandGroup();\n        } else if (hasExpandableGroups) {\n          collapseGroup();\n        }\n\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.escape: {\n        closeDropdown();\n        event.preventDefault();\n        break;\n      }\n      case KeyCode.tab: {\n        closeDropdown();\n        break;\n      }\n    }\n  };\n  const onKeyUp = (event: React.KeyboardEvent) => {\n    // We need to handle activating items with Space separately because there is a bug\n    // in Firefox where changing the focus during a Space keydown event it will trigger\n    // unexpected click events on the new element: https://bugzilla.mozilla.org/show_bug.cgi?id=1220143\n    if (event.keyCode === KeyCode.space && !targetItem?.disabled) {\n      activate(event);\n    }\n  };\n\n  return {\n    isOpen,\n    targetItem,\n    isHighlighted,\n    isExpanded,\n    highlightItem,\n    onKeyDown,\n    onKeyUp,\n    onItemActivate,\n    onGroupToggle,\n    toggleDropdown,\n  };\n}\n"]}