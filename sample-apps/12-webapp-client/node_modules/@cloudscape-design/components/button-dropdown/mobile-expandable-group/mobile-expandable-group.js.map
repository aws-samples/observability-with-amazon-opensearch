{"version":3,"file":"mobile-expandable-group.js","sourceRoot":"","sources":["../../../../src/button-dropdown/mobile-expandable-group/mobile-expandable-group.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,MAAM,MAAM,iBAAiB,CAAC;AAiBrC,IAAM,qBAAqB,GAAG,UAAC,EAAuD;;QAArD,QAAQ,cAAA,EAAE,OAAO,aAAA,EAAE,IAAI,UAAA;IACtD,OAAO,CACL,6BAAK,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QAC/B,6BAAK,SAAS,EAAE,MAAM,CAAC,OAAO,IAAG,OAAO,CAAO;QAC/C,6BAAK,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,YAAI,GAAC,MAAM,CAAC,IAAI,IAAG,IAAI,MAAG,eAAa,IAAI,IAC5E,QAAQ,CACL,CACF,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,qBAAqB,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport clsx from 'clsx';\nimport styles from './styles.css.js';\n\nexport interface MobileExpandableGroupProps {\n  /**\n   * Trigger element.\n   */\n  trigger: React.ReactNode;\n  /**\n   * mobile expandable groups content elements.\n   */\n  children?: React.ReactNode;\n  /**\n   * Open state of the mobile expandable groups.\n   */\n  open?: boolean;\n}\n\nconst MobileExpandableGroup = ({ children, trigger, open }: MobileExpandableGroupProps) => {\n  return (\n    <div className={clsx(styles.root)}>\n      <div className={styles.trigger}>{trigger}</div>\n      <div className={clsx(styles.dropdown, { [styles.open]: open })} data-open={open}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default MobileExpandableGroup;\n"]}