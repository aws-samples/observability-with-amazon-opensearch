{"version":3,"file":"listeners.js","sourceRoot":"","sources":["../../../src/code-editor/listeners.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAGlC,OAAO,EAAE,sBAAsB,EAA6B,MAAM,oBAAoB,CAAC;AACvF,OAAO,EAAE,mBAAmB,EAAE,MAAM,yCAAyC,CAAC;AAC9E,OAAO,EAAE,qBAAqB,EAAE,MAAM,4CAA4C,CAAC;AAEnF,MAAM,UAAU,eAAe,CAC7B,MAAmB,EACnB,QAAkE,EAClE,eAAyE;IAEzE,IAAM,sBAAsB,GAAG,mBAAmB,CAAC,UAAC,MAAoC;QACtF,sBAAsB,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;IAClD,CAAC,EAAE,CAAC,CAAC,CAAC;IACN,IAAM,YAAY,GAAG,qBAAqB,CAAC;QACzC,IAAM,YAAY,GAAG,EAAE,KAAK,EAAE,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,EAAE,KAAI,EAAE,EAAE,CAAC;QACzD,sBAAsB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QAC/C,sBAAsB,CAAC,YAAY,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IACH,SAAS,CAAC;QACR,IAAI,CAAC,MAAM,EAAE;YACX,OAAO;SACR;QAED,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QAClC,OAAO,cAAM,OAAA,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAC,EAAlC,CAAkC,CAAC;IAClD,CAAC,EAAE,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;AAC7B,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useEffect } from 'react';\nimport { Ace } from 'ace-builds';\nimport { CodeEditorProps } from './interfaces';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../internal/events';\nimport { useDebounceCallback } from '../internal/hooks/use-debounce-callback';\nimport { useStableEventHandler } from '../internal/hooks/use-stable-event-handler';\n\nexport function useChangeEffect(\n  editor?: Ace.Editor,\n  onChange?: NonCancelableEventHandler<CodeEditorProps.ChangeDetail>,\n  onDelayedChange?: NonCancelableEventHandler<CodeEditorProps.ChangeDetail>\n) {\n  const debouncedChangeHandler = useDebounceCallback((detail: CodeEditorProps.ChangeDetail) => {\n    fireNonCancelableEvent(onDelayedChange, detail);\n  }, 0);\n  const handleChange = useStableEventHandler(() => {\n    const changeDetail = { value: editor?.getValue() || '' };\n    fireNonCancelableEvent(onChange, changeDetail);\n    debouncedChangeHandler(changeDetail);\n  });\n  useEffect(() => {\n    if (!editor) {\n      return;\n    }\n\n    editor.on('change', handleChange);\n    return () => editor.off('change', handleChange);\n  }, [editor, handleChange]);\n}\n"]}