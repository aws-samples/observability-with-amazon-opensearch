{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/expandable-section/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { BaseComponentProps } from '../internal/base-component';\nimport { NonCancelableEventHandler } from '../internal/events';\n\nexport namespace ExpandableSectionProps {\n  export type Variant = 'default' | 'footer' | 'container' | 'navigation';\n  export interface ChangeDetail {\n    expanded: boolean;\n  }\n}\n\nexport interface ExpandableSectionProps extends BaseComponentProps {\n  /**\n   * Determines whether the component initially displays in expanded state (that is, with content visible). The component operates in an uncontrolled\n   * manner even if you provide a value for this property.\n   */\n  defaultExpanded?: boolean;\n\n  /**\n   * Determines whether the component is in the expanded state (that is, with content visible). The component operates in a controlled\n   * manner if you provide a value for this property.\n   */\n  expanded?: boolean;\n\n  /**\n   * The possible variants of an expandable section are as follows:\n   *  * `default` - Use this variant in any context.\n   *  * `footer` - Use this variant in container footers.\n   *  * `container` - Use this variant in a detail page alongside other containers.\n   *  * `navigation` - Use this variant in the navigation panel with anchors and custom styled content.\n   *    It doesn't have any default styles.\n   * */\n  variant?: ExpandableSectionProps.Variant;\n\n  /**\n   * Determines whether the content section's default padding is removed. This default padding is only present for the `container` variant.\n   */\n  disableContentPaddings?: boolean;\n\n  /**\n   * Primary content displayed in the expandable section element.\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Heading displayed above the content text.\n   *\n   * When using the container variant, use the Header component. Otherwise, use plain text.\n   */\n  header?: React.ReactNode;\n\n  /**\n   * Called when the state changes (that is, when the user expands or collapses the component).\n   * The event `detail` contains the current value of the `expanded` property.\n   */\n  onChange?: NonCancelableEventHandler<ExpandableSectionProps.ChangeDetail>;\n}\n"]}