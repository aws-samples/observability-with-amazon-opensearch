{"version":3,"file":"use-chart-model.js","sourceRoot":"","sources":["../../../../src/area-chart/model/use-chart-model.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AreaChartProps } from '../interfaces';\nimport React, { useEffect, useMemo, useRef } from 'react';\nimport { findClosest, circleIndex, throttle } from './utils';\n\nimport { nodeContains } from '../../internal/utils/dom';\nimport { KeyCode } from '../../internal/keycode';\nimport { XDomain, XScaleType, YDomain, YScaleType } from '../../internal/components/cartesian-chart/interfaces';\nimport { useReaction } from './async-store';\nimport computeChartProps from './compute-chart-props';\nimport createSeriesDecorator from './create-series-decorator';\nimport InteractionsStore from './interactions-store';\nimport { useStableEventHandler } from '../../internal/hooks/use-stable-event-handler';\nimport { ChartModel } from './index';\nimport { ChartPlotRef } from '../../internal/components/chart-plot';\n\nconst MAX_HOVER_MARGIN = 6;\nconst SVG_HOVER_THROTTLE = 25;\n\ninterface UseChartModelProps<T extends AreaChartProps.DataTypes> {\n  externalSeries: readonly AreaChartProps.Series<T>[];\n  visibleSeries: readonly AreaChartProps.Series<T>[];\n  setVisibleSeries: (series: readonly AreaChartProps.Series<T>[]) => void;\n  highlightedSeries: null | AreaChartProps.Series<T>;\n  setHighlightedSeries: (series: null | AreaChartProps.Series<T>) => void;\n  xDomain?: XDomain<T>;\n  yDomain?: YDomain;\n  xScaleType: XScaleType;\n  yScaleType: YScaleType;\n  height: number;\n  width: number;\n}\n\n// Represents the core the chart logic, including the model of all allowed user interactions.\nexport default function useChartModel<T extends AreaChartProps.DataTypes>({\n  externalSeries: allSeries,\n  visibleSeries: series,\n  setVisibleSeries,\n  highlightedSeries,\n  setHighlightedSeries,\n  xDomain,\n  yDomain,\n  xScaleType,\n  yScaleType,\n  height,\n  width,\n}: UseChartModelProps<T>): ChartModel<T> {\n  // Chart elements refs used in handlers.\n  const plotRef = useRef<ChartPlotRef>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const verticalMarkerRef = useRef<SVGLineElement>(null);\n\n  const stableSetVisibleSeries = useStableEventHandler(setVisibleSeries);\n\n  const model = useMemo(() => {\n    // Compute scales, ticks and two-dimensional plots.\n    const computed = computeChartProps({\n      series,\n      xDomain,\n      yDomain,\n      xScaleType,\n      yScaleType,\n      height,\n      width,\n    });\n\n    // A store for chart interactions that don't require plot recomputation.\n    const interactions = new InteractionsStore(series, computed.plot);\n\n    // A series decorator to provide extra props such as color and marker type.\n    const getInternalSeries = createSeriesDecorator(allSeries);\n\n    // A Callback for svg mouseover to hover the plot points.\n    // Throttling is necessary for a substantially smoother customer experience.\n    const onSVGMouseMoveThrottled = throttle((clientX: number, clientY: number) => {\n      // No hover logic when the popover is pinned or no data available.\n      if (interactions.get().isPopoverPinned || !plotRef.current || interactions.plot.xy.length === 0) {\n        return;\n      }\n\n      const svgRect = plotRef.current.svg.getBoundingClientRect();\n      const offsetX = clientX - svgRect.left;\n      const offsetY = clientY - svgRect.top;\n\n      const closestX = findClosest(interactions.plot.xy, offsetX, xPoints => xPoints[0].scaled.x);\n      const closestPoint = findClosest(closestX, offsetY, point => point.scaled.y1);\n\n      // If close enough to the point - highlight the point and its column.\n      // If not - only highlight the closest column.\n      if (\n        Math.abs(offsetX - closestPoint.scaled.x) < MAX_HOVER_MARGIN &&\n        Math.abs(offsetY - closestPoint.scaled.y1) < MAX_HOVER_MARGIN\n      ) {\n        interactions.highlightPoint(closestPoint);\n      } else {\n        interactions.highlightX(closestX);\n      }\n    }, SVG_HOVER_THROTTLE);\n\n    const onSVGMouseMove = ({ clientX, clientY }: React.MouseEvent<SVGElement, MouseEvent>) =>\n      onSVGMouseMoveThrottled(clientX, clientY);\n\n    // A callback for svg mouseout to clear all highlights.\n    const onSVGMouseOut = (event: React.MouseEvent<SVGElement, MouseEvent>) => {\n      // Because the mouseover is throttled, in can occur slightly after the mouseout,\n      // neglecting its effect; cancelling the throttled function prevents that.\n      onSVGMouseMoveThrottled.cancel();\n\n      // No hover logic when the popover is pinned.\n      if (interactions.get().isPopoverPinned) {\n        return;\n      }\n\n      // Check if the target is contained within svg to allow hovering on the popover body.\n      if (!nodeContains(plotRef.current!.svg, event.relatedTarget as Element)) {\n        interactions.clearHighlightedLegend();\n        interactions.clearHighlight();\n      }\n    };\n\n    // A callback for svg click to pin/unpin the popover.\n    const onSVGMouseDown = () => {\n      interactions.togglePopoverPin();\n    };\n\n    // A helper function to highlight the next or previous point within selected series.\n    const moveWithinSeries = (direction: -1 | 1) => {\n      // Can only use motion when a particular point is highlighted.\n      const point = interactions.get().highlightedPoint;\n      if (!point) {\n        return;\n      }\n\n      // Take the index of the currently highlighted series.\n      const sIndex = point.index.s;\n      // Take the incremented(circularly) x-index of the currently highlighted point.\n      const xIndex = circleIndex(point.index.x + direction, [0, interactions.plot.xs.length - 1]);\n      // Highlight the next point using x:s grouped data.\n      interactions.highlightPoint(interactions.plot.xs[xIndex][sIndex]);\n    };\n\n    // A helper function to highlight the next or previous point withing selected column.\n    const moveBetweenSeries = (direction: -1 | 1) => {\n      // Can only use motion when a particular point is highlighted.\n      const point = interactions.get().highlightedPoint;\n      if (!point) {\n        return;\n      }\n\n      // Take the index of the currently highlighted column.\n      const xIndex = point.index.x;\n      // Take the incremented(circularly) y-index of the currently highlighted point.\n      const yIndex = circleIndex(point.index.y + direction, [0, interactions.plot.xy[xIndex].length - 1]);\n      // Highlight the next point using x:y grouped data.\n      interactions.highlightPoint(interactions.plot.xy[xIndex][yIndex]);\n    };\n\n    // A callback for svg keydown to enable motions and popover pin with the keyboard.\n    const onSVGKeyDown = (event: React.KeyboardEvent) => {\n      const keyCode = event.keyCode;\n      if (\n        keyCode !== KeyCode.up &&\n        keyCode !== KeyCode.right &&\n        keyCode !== KeyCode.down &&\n        keyCode !== KeyCode.left &&\n        keyCode !== KeyCode.space &&\n        keyCode !== KeyCode.enter\n      ) {\n        return;\n      }\n\n      // Preventing default fixes an issue in Safari+VO when VO additionally interprets arrow keys as its commands.\n      event.preventDefault();\n\n      // No keydown logic when the popover is pinned.\n      if (interactions.get().isPopoverPinned) {\n        return;\n      }\n\n      // Move up/down.\n      if (keyCode === KeyCode.down || keyCode === KeyCode.up) {\n        moveBetweenSeries(keyCode === KeyCode.down ? -1 : 1);\n      }\n      // Move left/right.\n      else if (keyCode === KeyCode.left || keyCode === KeyCode.right) {\n        moveWithinSeries(keyCode === KeyCode.right ? 1 : -1);\n      }\n      // Pin popover.\n      else if (keyCode === KeyCode.enter || keyCode === KeyCode.space) {\n        interactions.pinPopover();\n      }\n    };\n\n    // A callback for svg focus to highlight series.\n    const onSVGFocus = (_event: React.FocusEvent, trigger: 'mouse' | 'keyboard') => {\n      // When focus is caused by a click event nothing is expected as clicks are handled separately.\n      // Otherwise, select the first series point.\n      if (trigger === 'keyboard') {\n        interactions.highlightFirstPoint();\n      }\n    };\n\n    // A callback for svg blur to clear all highlights unless the popover is pinned.\n    const onSVGBlur = () => {\n      // Pinned popover stays pinned even if the focus is lost.\n      // If blur is not caused by the popover, forget the previously highlighted point.\n      if (!interactions.get().isPopoverPinned) {\n        interactions.clearHighlight();\n      }\n    };\n\n    const onFilterSeries = (series: readonly AreaChartProps.Series<T>[]) => {\n      stableSetVisibleSeries(series);\n    };\n\n    const onLegendHighlight = (series: null | AreaChartProps.Series<T>) => {\n      interactions.highlightSeries(series);\n    };\n\n    const onPopoverDismiss = (outsideClick?: boolean) => {\n      interactions.unpinPopover();\n\n      // Return focus back to the application or plot (when no point is highlighted).\n      if (!outsideClick) {\n        // The delay is needed to bypass focus events caused by click or keypress needed to unpin the popover.\n        setTimeout(() => {\n          if (interactions.get().highlightedPoint) {\n            plotRef.current!.focusApplication();\n          } else {\n            interactions.clearHighlight();\n            plotRef.current!.focusPlot();\n          }\n        }, 0);\n      }\n    };\n\n    const onContainerBlur = () => {\n      interactions.clearState();\n    };\n\n    return {\n      width,\n      height,\n      series,\n      allSeries,\n      getInternalSeries,\n      computed,\n      interactions,\n      handlers: {\n        onSVGMouseMove,\n        onSVGMouseOut,\n        onSVGMouseDown,\n        onSVGKeyDown,\n        onSVGFocus,\n        onSVGBlur,\n        onFilterSeries,\n        onLegendHighlight,\n        onPopoverDismiss,\n        onContainerBlur,\n      },\n      refs: {\n        plot: plotRef,\n        container: containerRef,\n        verticalMarker: verticalMarkerRef,\n      },\n    };\n  }, [allSeries, series, xDomain, yDomain, xScaleType, yScaleType, height, width, stableSetVisibleSeries]);\n\n  // Notify client when series highlight change.\n  useReaction(model.interactions, state => state.highlightedSeries, setHighlightedSeries);\n\n  // Update interactions store when series highlight in a controlled way.\n  useEffect(() => {\n    if (highlightedSeries !== model.interactions.get().highlightedSeries) {\n      model.interactions.highlightSeries(highlightedSeries);\n    }\n  }, [model, highlightedSeries]);\n\n  return model;\n}\n"]}