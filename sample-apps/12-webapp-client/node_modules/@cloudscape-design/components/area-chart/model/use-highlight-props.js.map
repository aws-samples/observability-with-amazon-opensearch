{"version":3,"file":"use-highlight-props.js","sourceRoot":"","sources":["../../../../src/area-chart/model/use-highlight-props.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAC/C,OAAO,EAAE,sBAAsB,EAA6B,MAAM,uBAAuB,CAAC;AAC1F,OAAO,EAAE,eAAe,EAAE,MAAM,uCAAuC,CAAC;AAKxE,yEAAyE;AACzE,MAAM,CAAC,OAAO,UAAU,iBAAiB,CACvC,MAA2C,EAC3C,2BAA6D,EAC7D,2BAAgG;IAE1F,IAAA,KAAmD,eAAe,CACtE,2BAA2B,EAC3B,2BAA2B,EAC3B,IAAI,EACJ;QACE,aAAa,EAAE,WAAW;QAC1B,cAAc,EAAE,mBAAmB;QACnC,aAAa,EAAE,mBAAmB;KACnC,CACF,EATM,UAAwB,EAAxB,iBAAiB,mBAAG,IAAI,KAAA,EAAE,oBAAoB,QASpD,CAAC;IAEF,IAAM,uBAAuB,GAAG,WAAW,CACzC,UAAC,CAAkC;QACjC,sBAAsB,CAAC,2BAA2B,EAAE,EAAE,iBAAiB,EAAE,CAAC,EAAE,CAAC,CAAC;IAChF,CAAC,EACD,CAAC,2BAA2B,CAAC,CAC9B,CAAC;IAEF,qCAAqC;IACrC,SAAS,CAAC;QACR,IAAI,2BAA2B,EAAE;YAC/B,IAAM,sBAAsB,GAAG,MAAM,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;YAE3E,IAAI,sBAAsB,KAAK,CAAC,CAAC,EAAE;gBACjC,oBAAoB,CAAC,IAAI,CAAC,CAAC;gBAC3B,uBAAuB,CAAC,IAAI,CAAC,CAAC;aAC/B;SACF;IACH,CAAC,EAAE,CAAC,MAAM,EAAE,2BAA2B,EAAE,oBAAoB,EAAE,uBAAuB,CAAC,CAAC,CAAC;IAEzF,OAAO,CAAC,iBAAiB,EAAE,uBAAuB,CAAC,CAAC;AACtD,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useCallback, useEffect } from 'react';\nimport { fireNonCancelableEvent, NonCancelableEventHandler } from '../../internal/events';\nimport { useControllable } from '../../internal/hooks/use-controllable';\nimport { AreaChartProps } from '../interfaces';\n\ntype HighlightProps<T> = [null | AreaChartProps.Series<T>, (s: null | AreaChartProps.Series<T>) => void];\n\n// Provides controlled or uncontrolled props to highlight chart elements.\nexport default function useHighlightProps<T>(\n  series: readonly AreaChartProps.Series<T>[],\n  controlledHighlightedSeries?: null | AreaChartProps.Series<T>,\n  controlledOnHighlightChange?: NonCancelableEventHandler<AreaChartProps.HighlightChangeDetail<T>>\n): HighlightProps<T> {\n  const [highlightedSeries = null, setHighlightedSeries] = useControllable(\n    controlledHighlightedSeries,\n    controlledOnHighlightChange,\n    null,\n    {\n      componentName: 'AreaChart',\n      controlledProp: 'highlightedSeries',\n      changeHandler: 'onHighlightChange',\n    }\n  );\n\n  const notifyHighlightedSeries = useCallback(\n    (s: null | AreaChartProps.Series<T>) => {\n      fireNonCancelableEvent(controlledOnHighlightChange, { highlightedSeries: s });\n    },\n    [controlledOnHighlightChange]\n  );\n\n  // Reset highlights if series change.\n  useEffect(() => {\n    if (controlledHighlightedSeries) {\n      const highlightedSeriesIndex = series.indexOf(controlledHighlightedSeries);\n\n      if (highlightedSeriesIndex === -1) {\n        setHighlightedSeries(null);\n        notifyHighlightedSeries(null);\n      }\n    }\n  }, [series, controlledHighlightedSeries, setHighlightedSeries, notifyHighlightedSeries]);\n\n  return [highlightedSeries, notifyHighlightedSeries];\n}\n"]}