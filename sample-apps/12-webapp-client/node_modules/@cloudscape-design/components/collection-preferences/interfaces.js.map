{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/collection-preferences/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { BaseComponentProps } from '../internal/base-component';\nimport { NonCancelableEventHandler } from '../internal/events';\n\nexport interface CollectionPreferencesProps<CustomPreferenceType = any> extends BaseComponentProps {\n  /**\n   * Specifies the title of the preferences modal dialog. It is also used as an `aria-label` for the trigger button.\n   */\n  title: string;\n  /**\n   * Label of the confirm button in the modal footer.\n   */\n  confirmLabel: string;\n  /**\n   * Label of the cancel button in the modal footer.\n   */\n  cancelLabel: string;\n  /**\n   * Determines whether the preferences trigger button is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Configures the built-in \"page size selection\" preference.\n   *\n   * If you set it, the component displays this preference in the modal.\n   *\n   * It contains the following:\n   * - `title` (string) - Specifies the text displayed at the top of the preference.\n   * - `options` - Specifies an array of options for page size selection. Each entry contains:\n   *   - `value` (number) - The value for the radio button (that is, the number of items per page).\n   *   - `label` (string) - A label for the radio button (for example, \"10 resources\").\n   *\n   * You must set the current value in the `preferences.pageSize` property.\n   */\n  pageSizePreference?: CollectionPreferencesProps.PageSizePreference;\n  /**\n   * Configures the built-in \"wrap lines\" preference.\n   *\n   * If you set it, the component displays this preference in the modal.\n   *\n   * It contains the following:\n   * - `label` (string) - Specifies the label for the option checkbox.\n   * - `description` (string) - Specifies the text displayed below the checkbox label.\n   *\n   * You must set the current value in the `preferences.wrapLines` property.\n   */\n  wrapLinesPreference?: CollectionPreferencesProps.WrapLinesPreference;\n  /**\n   * Configures the built-in \"visible content selection\" preference (for example, visible columns in a table).\n   *\n   * If you set it, the component displays this preference in the modal.\n   *\n   * It contains the following:\n   * - `title` (string) - Specifies the text displayed at the top of the preference.\n   * - `options` - Specifies an array of groups of options for visible content selection.\n   *\n   * Each group of options contains the following:\n   * - `label` (string) - The text to display as a title for the options group.\n   * - `options` - Specifies an aray of options in the group. Each option contains the following:\n   *   - `id` (string) - Corresponds to a column `id` for tables or to a section `id` for cards.\n   *   - `label` (string) - Specifies a short description of the content.\n   *   - `editable` (boolean) - (Optional) Determines whether the user is able to toggle its visibility. This is `true` by default.\n   *\n   * You must set the current list of visible content `id`s in the `preferences.visibleContent` property.\n   */\n  visibleContentPreference?: CollectionPreferencesProps.VisibleContentPreference;\n  /**\n   * Specifies the current preference values. This includes both built-in and custom preferences.\n   *\n   * It contains the following:\n   * - `pageSize` (number) - (Optional)\n   * - `wrapLines` (boolean) - (Optional)\n   * - `visibleContent` (ReadonlyArray<string>) - Specifies the list of visible content `id`s. The order of the `id`s does not influence the display.\n   * - `custom` (CustomPreferenceType) - Specifies the value for your custom preference.\n   */\n  preferences?: CollectionPreferencesProps.Preferences<CustomPreferenceType>;\n  /**\n   * Configures custom preferences. The function receives two parameters:\n   *\n   * - `customValue` (CustomPreferenceType) - Current value for your custom preference. It is initialized using the value you provide in `preferences.custom`.\n   * - `setCustomValue` - A function that is called to notify a state update.\n   *\n   * It should return the content of your custom preference, for example:\n   * ```\n   * (customValue, setCustomValue) => (\n   *   <Checkbox checked={customValue} onChange={({ detail }) => setCustomValue(detail.checked)} />\n   * )\n   * ```\n   *\n   * When the user confirms the changes, the new value is passed in the `detail.custom` property of the `onConfirm` listener.\n   * When the user cancels the changes, the `customValue` is reset to the one present in `preferences.custom` property.\n   *\n   * **Display**\n   * - If any of the built-in preferences (`pageSizePreference`, `wrapLinesPreference`, or `visibleContentPreference`) are displayed,\n   * the custom content is displayed at the bottom of the left column within the modal.\n   * - If no built-in preference is displayed, the custom content occupies the whole modal.\n   */\n  customPreference?: (\n    customValue: CustomPreferenceType,\n    setCustomValue: React.Dispatch<CustomPreferenceType>\n  ) => React.ReactNode;\n  /**\n   * Called when the user cancels a preference change using the cancel button in the modal footer or by dismissing the modal.\n   */\n  onCancel?: NonCancelableEventHandler;\n  /**\n   * Called when the user confirms a preference change using the confirm button in the modal footer.\n   *\n   * The event `detail` contains the following:\n   * - `pageSize` (number) - (Optional) The selected page size value. Available only if you specify the `pageSizePreference` property.\n   * - `wrapLines` (boolean) - (Optional) The current line wrapping preference value. Available only if you specify the `wrapLinesPreference` property.\n   * - `visibleContent` (ReadonlyArray<string>) - (Optional) The list of selected content `id`s. Available only if you specify the `visibleContentPreference` property.\n   * - `custom` (CustomPreferenceType) - (Optional) The selected value for your custom preference.\n   *\n   * The values for all configured preferences are present even if the user didn't change their values.\n   */\n  onConfirm?: NonCancelableEventHandler<CollectionPreferencesProps.Preferences<CustomPreferenceType>>;\n}\n\nexport namespace CollectionPreferencesProps {\n  export interface Preferences<CustomPreferenceType = any> {\n    pageSize?: number;\n    wrapLines?: boolean;\n    visibleContent?: ReadonlyArray<string>;\n    custom?: CustomPreferenceType;\n  }\n\n  export interface VisibleContentPreference {\n    title: string;\n    options: ReadonlyArray<CollectionPreferencesProps.VisibleContentOptionsGroup>;\n  }\n\n  export interface VisibleContentOptionsGroup {\n    label: string;\n    options: ReadonlyArray<CollectionPreferencesProps.VisibleContentOption>;\n  }\n\n  export interface VisibleContentOption {\n    id: string;\n    label: string;\n    editable?: boolean;\n  }\n\n  export interface PageSizePreference {\n    title: string;\n    options: ReadonlyArray<PageSizeOption>;\n  }\n\n  export interface PageSizeOption {\n    value: number;\n    label: string;\n  }\n\n  export interface WrapLinesPreference {\n    label: string;\n    description: string;\n  }\n}\n"]}