{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/token-group/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { BaseComponentProps } from '../internal/base-component';\nimport { NonCancelableEventHandler } from '../internal/events';\nimport { IconProps } from '../icon/interfaces';\n\nexport interface TokenGroupProps extends BaseComponentProps {\n  /**\n   * An object containing all the necessary localized strings required by the component.\n   */\n  i18nStrings?: TokenGroupProps.I18nStrings;\n\n  /**\n   * Specifies the maximum number of displayed tokens. If the property isn't set, all of the tokens are displayed.\n   */\n  limit?: number;\n\n  /**\n   * Specifies the direction in which tokens are aligned (`horizontal | vertical`).\n   */\n  alignment?: TokenGroupProps.Alignment;\n\n  /**\n   *\n   * An array of objects representing token items. Each token has the following properties:\n   *\n   * - `label` (string) - Title text of the token.\n   * - `description` (string) - (Optional) Further information about the token that appears below the label.\n   * - `disabled` [boolean] - (Optional) Determines whether the token is disabled.\n   * - `labelTag` (string) - (Optional) A label tag that provides additional guidance, shown next to the label.\n   * - `tags` [string[]] - (Optional) A list of tags giving further guidance about the token.\n   * - `dismissLabel` (string) - (Optional) Adds an `aria-label` to the dismiss button.\n   * - `iconName` (string) - (Optional) Specifies the name of an [icon](/components/icon/) to display in the token.\n   * - `iconAlt` (string) - (Optional) Specifies alternate text for a custom icon, for use with `iconUrl`.\n   * - `iconUrl` (string) - (Optional) URL of a custom icon.\n   * - `iconSvg` (ReactNode) - (Optional) Custom SVG icon. Equivalent to the `svg` slot of the [icon component](/components/icon/).\n   */\n  items?: ReadonlyArray<TokenGroupProps.Item>;\n  /**\n   *  Called when the user clicks on the dismiss button. The token won't be automatically removed.\n   *  Make sure that you add a listener to this event to update your application state.\n   */\n  onDismiss?: NonCancelableEventHandler<TokenGroupProps.DismissDetail>;\n}\n\nexport namespace TokenGroupProps {\n  export type Alignment = 'horizontal' | 'vertical';\n  export interface Item {\n    label?: string;\n    disabled?: boolean;\n    labelTag?: string;\n    description?: string;\n    iconAlt?: string;\n    iconName?: IconProps.Name;\n    iconUrl?: string;\n    iconSvg?: React.ReactNode;\n    tags?: ReadonlyArray<string>;\n    dismissLabel?: string;\n  }\n\n  export interface DismissDetail {\n    itemIndex: number;\n  }\n\n  export interface I18nStrings {\n    limitShowFewer?: string;\n    limitShowMore?: string;\n  }\n}\n"]}