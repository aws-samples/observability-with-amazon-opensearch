{"version":3,"file":"load-more-controller.js","sourceRoot":"","sources":["../../../src/autosuggest/load-more-controller.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AAEtC,OAAO,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AAkB/B,MAAM,CAAC,IAAM,sBAAsB,GAAG,UAAC,EAIT;QAH5B,eAAY,EAAZ,OAAO,mBAAG,EAAE,KAAA,EACZ,UAAU,gBAAA,EACV,WAAW,iBAAA;IAEX,IAAM,iBAAiB,GAAG,MAAM,CAAgB,IAAI,CAAC,CAAC;IAEtD,IAAM,YAAY,GAAG,UAAC,EAQrB;;YAPC,SAAS,eAAA,EACT,QAAQ,cAAA,EACR,aAAa,mBAAA;QAMb,IAAI,aAAa,KAAK,SAAS,IAAI,iBAAiB,CAAC,OAAO,KAAK,aAAa,EAAE;YAC9E,IAAI,aAAa,KAAK,SAAS,EAAE;gBAC/B,iBAAiB,CAAC,OAAO,GAAG,aAAa,CAAC;aAC3C;YACD,WAAW,CAAC,EAAE,aAAa,EAAE,MAAA,iBAAiB,CAAC,OAAO,mCAAI,EAAE,EAAE,SAAS,WAAA,EAAE,QAAQ,UAAA,EAAE,CAAC,CAAC;SACtF;IACH,CAAC,CAAC;IAEF,IAAM,oBAAoB,GAAG;QAC3B,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,UAAU,KAAK,SAAS,IAAI,YAAY,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;IACxG,CAAC,CAAC;IAEF,IAAM,2BAA2B,GAAG,cAAM,OAAA,YAAY,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAlD,CAAkD,CAAC;IAE7F,IAAM,wBAAwB,GAAG,cAAM,OAAA,YAAY,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,aAAa,EAAE,EAAE,EAAE,CAAC,EAArE,CAAqE,CAAC;IAE7G,IAAM,yBAAyB,GAAG,UAAC,aAAqB;QACtD,OAAA,YAAY,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,aAAa,eAAA,EAAE,CAAC;IAAjE,CAAiE,CAAC;IAEpE,OAAO,EAAE,oBAAoB,sBAAA,EAAE,2BAA2B,6BAAA,EAAE,wBAAwB,0BAAA,EAAE,yBAAyB,2BAAA,EAAE,CAAC;AACpH,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { useRef } from 'react';\nimport { AutosuggestProps } from './interfaces';\nimport { OptionsLoadItemsDetail } from '../internal/components/dropdown/interfaces';\nimport { DropdownStatusProps } from '../internal/components/dropdown-status/interfaces';\n\nexport interface UseAutosuggestLoadMoreProps {\n  options?: AutosuggestProps.Options;\n  statusType: DropdownStatusProps.StatusType;\n  onLoadItems: (detail: OptionsLoadItemsDetail) => void;\n}\n\nexport interface AutosuggestLoadMoreHandlers {\n  fireLoadMoreOnScroll(): void;\n  fireLoadMoreOnRecoveryClick(): void;\n  fireLoadMoreOnInputFocus(): void;\n  fireLoadMoreOnInputChange(filteringText: string): void;\n}\n\nexport const useAutosuggestLoadMore = ({\n  options = [],\n  statusType,\n  onLoadItems,\n}: UseAutosuggestLoadMoreProps): AutosuggestLoadMoreHandlers => {\n  const lastFilteringText = useRef<string | null>(null);\n\n  const fireLoadMore = ({\n    firstPage,\n    samePage,\n    filteringText,\n  }: {\n    firstPage: boolean;\n    samePage: boolean;\n    filteringText?: string;\n  }) => {\n    if (filteringText === undefined || lastFilteringText.current !== filteringText) {\n      if (filteringText !== undefined) {\n        lastFilteringText.current = filteringText;\n      }\n      onLoadItems({ filteringText: lastFilteringText.current ?? '', firstPage, samePage });\n    }\n  };\n\n  const fireLoadMoreOnScroll = () => {\n    options.length > 0 && statusType === 'pending' && fireLoadMore({ firstPage: false, samePage: false });\n  };\n\n  const fireLoadMoreOnRecoveryClick = () => fireLoadMore({ firstPage: false, samePage: true });\n\n  const fireLoadMoreOnInputFocus = () => fireLoadMore({ firstPage: true, samePage: false, filteringText: '' });\n\n  const fireLoadMoreOnInputChange = (filteringText: string) =>\n    fireLoadMore({ firstPage: true, samePage: false, filteringText });\n\n  return { fireLoadMoreOnScroll, fireLoadMoreOnRecoveryClick, fireLoadMoreOnInputFocus, fireLoadMoreOnInputChange };\n};\n"]}