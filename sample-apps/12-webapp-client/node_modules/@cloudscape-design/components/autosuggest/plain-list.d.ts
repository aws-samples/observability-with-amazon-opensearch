import React from 'react';
import { OptionsListProps } from '../internal/components/options-list';
import { AutosuggestProps, AutosuggestItem } from './interfaces';
export interface ListProps {
    menuProps: Omit<OptionsListProps, 'children'>;
    handleLoadMore: () => void;
    filteredItems: AutosuggestItem[];
    usingMouse: React.MutableRefObject<boolean>;
    highlightedOption?: AutosuggestItem;
    enteredTextLabel: AutosuggestProps.EnteredTextLabel;
    highlightedA11yProps: Record<string, string | number | boolean>;
    hasDropdownStatus?: boolean;
    highlightText: string;
    listBottom?: React.ReactNode;
    screenReaderContent?: string;
}
declare namespace PlainListProps {
    type PlainListRef = (index: number) => void;
}
export declare const getOptionProps: (index: number, item: AutosuggestItem, filteredItems: AutosuggestItem[], highlightedA11yProps: ListProps['highlightedA11yProps'], highlightedOption?: ListProps['highlightedOption'], hasDropdownStatus?: boolean | undefined) => {
    className?: string | undefined;
    id?: string | undefined;
    nativeAttributes: Record<string, string | number | boolean>;
    padBottom: boolean;
};
declare const _default: React.ForwardRefExoticComponent<ListProps & React.RefAttributes<PlainListProps.PlainListRef>>;
export default _default;
//# sourceMappingURL=plain-list.d.ts.map