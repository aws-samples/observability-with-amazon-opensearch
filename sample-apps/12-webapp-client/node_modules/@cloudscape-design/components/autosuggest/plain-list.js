import { __assign } from "tslib";
// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
import React, { forwardRef, useImperativeHandle, useRef } from 'react';
import OptionsList from '../internal/components/options-list';
import { scrollUntilVisible } from '../internal/utils/scrollable-containers';
import { getBaseProps } from '../internal/base-component';
import AutosuggestOption from './autosuggest-option';
import styles from './styles.css.js';
export var getOptionProps = function (index, item, filteredItems, highlightedA11yProps, highlightedOption, hasDropdownStatus) {
    var nativeAttributes = item === highlightedOption ? highlightedA11yProps : {};
    var baseOptionProps = getBaseProps(nativeAttributes);
    var isLastItem = index === filteredItems.length - 1;
    var isNotEnteredTextItem = filteredItems.length > 1;
    var padBottom = !hasDropdownStatus && isNotEnteredTextItem && isLastItem;
    return __assign({ nativeAttributes: nativeAttributes, padBottom: padBottom }, baseOptionProps);
};
var PlainList = function (_a, ref) {
    var handleLoadMore = _a.handleLoadMore, filteredItems = _a.filteredItems, usingMouse = _a.usingMouse, menuProps = _a.menuProps, highlightedOption = _a.highlightedOption, enteredTextLabel = _a.enteredTextLabel, highlightedA11yProps = _a.highlightedA11yProps, hasDropdownStatus = _a.hasDropdownStatus, highlightText = _a.highlightText, listBottom = _a.listBottom, screenReaderContent = _a.screenReaderContent;
    var listRef = useRef(null);
    useImperativeHandle(ref, function () { return function (index) {
        var _a;
        var item = (_a = listRef.current) === null || _a === void 0 ? void 0 : _a.querySelector("[data-mouse-target=\"".concat(index, "\"]"));
        if (!usingMouse.current && item) {
            scrollUntilVisible(item);
        }
    }; }, [usingMouse, listRef]);
    return (React.createElement(OptionsList, __assign({}, menuProps, { onLoadMore: handleLoadMore, open: true, ref: listRef, 
        // to prevent closing the list when clicking the scrollbar on IE11
        nativeAttributes: { unselectable: 'on' } }),
        filteredItems.map(function (item, index) {
            var optionProps = getOptionProps(index, item, filteredItems, highlightedA11yProps, highlightedOption, hasDropdownStatus);
            return (React.createElement(AutosuggestOption, __assign({ highlightText: highlightText, option: item, highlighted: item === highlightedOption, key: index, "data-mouse-target": index, enteredTextLabel: enteredTextLabel, screenReaderContent: screenReaderContent }, optionProps)));
        }),
        listBottom ? (React.createElement("li", { role: "option", className: styles['list-bottom'] }, listBottom)) : null));
};
export default forwardRef(PlainList);
//# sourceMappingURL=plain-list.js.map