import { CancelableEventHandler, BaseKeyDetail } from '../internal/events';
import { AutosuggestItem, AutosuggestProps } from './interfaces';
export declare const getParentGroup: (item: AutosuggestItem) => AutosuggestItem | undefined;
export declare const useAutosuggestItems: (options?: AutosuggestProps.Options) => AutosuggestItem[];
export declare const useFilteredItems: (autosuggestItems: AutosuggestItem[], value: string, filterText: string, filteringType: AutosuggestProps.FilteringType, showAll: boolean, __hideEnteredTextLabel?: boolean | undefined) => AutosuggestItem[];
export declare const useSelectVisibleOption: (filteredItems: AutosuggestItem[], selectOption: (option: AutosuggestItem) => void, isInteractive: (option: AutosuggestItem) => boolean) => (index: number) => void;
export declare const useHighlightVisibleOption: (filteredItems: AutosuggestItem[], setHighlightedIndex: (index: number) => void, isHighlightable: (option: AutosuggestItem) => boolean) => (index: number) => void;
export declare const useKeyboardHandler: (moveHighlight: (direction: -1 | 1) => void, openDropdown: () => void, selectHighlighted: () => void, usingMouse: React.MutableRefObject<boolean>, open: boolean, onKeyDown?: CancelableEventHandler<BaseKeyDetail> | undefined) => (e: CustomEvent<BaseKeyDetail>) => void;
//# sourceMappingURL=controller.d.ts.map