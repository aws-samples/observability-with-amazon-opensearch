{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/annotation-context/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { NonCancelableEventHandler } from '../internal/events';\nimport { TutorialPanelProps } from '../tutorial-panel/interfaces';\n\nexport interface AnnotationContextProps {\n  /**\n   * The currently launched tutorial. This should be the object received\n   * in the `detail` property of the `onStartTutorial` event.\n   */\n  currentTutorial: AnnotationContextProps.Tutorial | null;\n\n  /**\n   * This event is fired when a user clicks the \"Next\" or \"Previous\"\n   * button on a popover, when the user clicks on a closed hotspot icon,\n   * or when the AnnotationOverlay determines that the current hotspot\n   * has disappeared from the page and a different one should be\n   * selected (e.g. when navigating between pages).\n   *\n   * Use the `reason` property of the event detail to determine why\n   * this event was fired.\n   */\n  onStepChange?: NonCancelableEventHandler<AnnotationContextProps.StepChangeDetail>;\n\n  /**\n   * Fired when the user selects a tutorial from the list.\n   */\n  onStartTutorial: NonCancelableEventHandler<TutorialPanelProps.TutorialDetail>;\n\n  /**\n   * Fired when the user exits the current tutorial.\n   */\n  onExitTutorial: NonCancelableEventHandler<TutorialPanelProps.TutorialDetail>;\n\n  /**\n   * Fired when the user clicks the \"Finish\" button on the last step of\n   * the tutorial.\n   */\n  onFinish?: NonCancelableEventHandler<void>;\n\n  /**\n   * Put all page content inside this component's children. This component\n   * will provide a context which is used by the Hotspot elements throughout\n   * the page.\n   */\n  children: React.ReactNode;\n\n  /**\n   * An object containing all the necessary localized strings required by\n   * the component.\n   */\n  i18nStrings: AnnotationContextProps.I18nStrings;\n}\n\nexport namespace AnnotationContextProps {\n  export interface StepChangeDetail {\n    step: number;\n    reason: 'next' | 'previous' | 'open' | 'auto-fallback';\n  }\n\n  export interface OpenChangeDetail {\n    open: boolean;\n  }\n\n  export type Task = TutorialPanelProps.Task;\n  export type Step = TutorialPanelProps.Step;\n  export type Tutorial = TutorialPanelProps.Tutorial;\n\n  export interface I18nStrings {\n    nextButtonText: string;\n    previousButtonText: string;\n    finishButtonText: string;\n\n    labelDismissAnnotation: string;\n    labelHotspot: (openState: boolean) => string;\n\n    stepCounterText: (stepIndex: number, totalStepCount: number) => string;\n    taskTitle: (taskIndex: number, taskTitle: string) => string;\n  }\n}\n"]}