{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/radio-group/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\nimport { BaseComponentProps } from '../internal/base-component';\nimport { NonCancelableEventHandler } from '../internal/events';\nimport { FormFieldControlProps } from '../internal/context/form-field-context';\n\nexport interface RadioGroupProps extends BaseComponentProps, FormFieldControlProps {\n  /**\n   * Specify a custom name for the radio buttons. If not provided, the radio group generates a random name.\n   */\n  name?: string;\n\n  /**\n   * Sets the value of the selected radio button.\n   * If you want to clear the selection, use `null`.\n   */\n  value: string | null;\n\n  /**\n   * Specifies an array of radio buttons to display. Each of these objects have the following properties:\n   *\n   * - `value` (string) - Sets the value of the radio button. Assigned to the radio group when a user selects the radio button.\n   * - `label` (ReactNode) - Specifies a label for the radio button.\n   * - `description` (ReactNode) - (Optional) Specifies descriptive text that appears below the label.\n   * - `disabled` (boolean) - (Optional) Determines whether the radio button is disabled, which prevents the user from selecting it.\n   * - `controlId` (string) - (Optional) Sets the ID of the internal input. You can use it to relate a label element's `for` attribute to this control.\n   *        In general it's not recommended to set this because the ID is automatically set by the radio group component.\n   */\n  items?: ReadonlyArray<RadioGroupProps.RadioButtonDefinition>;\n\n  /**\n   * Adds `aria-label` to the group. If you are using this form element within a form field,\n   * don't set this property because the form field component automatically sets the correct labels to make the component accessible.\n   */\n  ariaLabel?: string;\n\n  /**\n   * Adds `aria-required` to the group.\n   */\n  ariaRequired?: boolean;\n\n  /**\n   * Called when the user selects a different radio button. The event `detail` contains the current `value`.\n   */\n  onChange?: NonCancelableEventHandler<RadioGroupProps.ChangeDetail>;\n}\n\nexport namespace RadioGroupProps {\n  export interface RadioButtonDefinition {\n    value: string;\n    label: React.ReactNode;\n    description?: React.ReactNode;\n    disabled?: boolean;\n    controlId?: string;\n  }\n\n  export interface ChangeDetail {\n    value: string;\n  }\n}\n"]}