{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../src/line-chart/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CartesianChartProps } from '../internal/components/cartesian-chart/interfaces';\nimport { ChartDataTypes, MixedLineBarChartProps } from '../mixed-line-bar-chart/interfaces';\n\ntype LineSeries<T> = MixedLineBarChartProps.LineDataSeries<T> | MixedLineBarChartProps.ThresholdSeries<T>;\n\nexport interface LineChartProps<T extends ChartDataTypes>\n  extends CartesianChartProps<T, MixedLineBarChartProps.ChartSeries<T>> {\n  /**\n   * Array that represents the source of data for the displayed chart.\n   * Each element can represent a line series or a threshold, and can have the following properties:\n   *\n   * * `title` (string): A human-readable title for this series\n   * * `type` (string): Series type (`\"line\"`, or `\"threshold\"`)\n   * * `data` (Array): An array of data points, represented as objects with `x` and `y` properties\n   * * `color` (string): (Optional) A color hex value for this series. When assigned, it takes priority over the automatically assigned color\n   * * `valueFormatter` (Function): (Optional) A function that formats data values before rendering in the UI, For example, in the details popover.\n   */\n  series: ReadonlyArray<LineSeries<T>>;\n\n  /**\n   * When set to `true`, adds a visual emphasis on the zero baseline axis.\n   * See the usage guidelines for more details.\n   */\n  emphasizeBaselineAxis?: boolean;\n}\n\n// W/o this documenter injects CartesianChartProps namespace properties into LineChartProps definition.\nexport namespace LineChartProps {}\n"]}