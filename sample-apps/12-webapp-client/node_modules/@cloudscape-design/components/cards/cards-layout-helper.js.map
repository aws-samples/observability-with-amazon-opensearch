{"version":3,"file":"cards-layout-helper.js","sourceRoot":"","sources":["../../../src/cards/cards-layout-helper.ts"],"names":[],"mappings":"AAIA,IAAM,MAAM,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAE5C,0FAA0F;AAC1F,IAAM,kBAAkB,GAAG,MAAM,CAAC,GAAG,CAAC,UAAC,KAAK,EAAE,KAAK,EAAE,MAAM,IAAK,OAAA,CAAC;IAC/D,QAAQ,EAAE,KAAK;IACf,KAAK,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,KAAK;CACjC,CAAC,EAH8D,CAG9D,CAAC,CAAC;AAEJ,MAAM,CAAC,IAAM,cAAc,GAAG,UAAC,KAAa,EAAE,MAA6C;IACzF,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;QACvB,MAAM,GAAG,kBAAkB,CAAC;KAC7B;IACD,IAAI,WAAW,GAAG,CAAC,CAAC;IACpB,4CAA4C;IAC5C,IAAM,YAAY,GAAuC,MAAM;SAC5D,KAAK,EAAE;SACP,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,CAAC;QACb,QAAQ,EAAE,KAAK,CAAC,QAAQ,IAAI,CAAC;QAC7B,KAAK,EAAE,KAAK,CAAC,KAAK;KACnB,CAAC,EAHY,CAGZ,CAAC;SACF,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,EAAvB,CAAuB,CAAC,CAAC;IAE3C,YAAY,CAAC,IAAI,CAAC,UAAA,MAAM;QACtB,IAAI,KAAK,IAAI,MAAM,CAAC,QAAQ,EAAE;YAC5B,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC;YAC3B,OAAO,IAAI,CAAC;SACb;IACH,CAAC,CAAC,CAAC;IACH,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CardsProps } from './interfaces';\n\nconst WIDTHS = [1920, 1400, 1200, 992, 768];\n\n// Transform the array of widths into a valid cardsPerRow property that is used as default\nconst defaultCardsPerRow = WIDTHS.map((value, index, widths) => ({\n  minWidth: value,\n  cards: widths.length + 1 - index,\n}));\n\nexport const getCardsPerRow = (width: number, config: ReadonlyArray<CardsProps.CardsLayout>) => {\n  if (config.length === 0) {\n    config = defaultCardsPerRow;\n  }\n  let cardsPerRow = 1;\n  // sort them by descending order of minWidth\n  const sortedConfig: Required<CardsProps.CardsLayout>[] = config\n    .slice()\n    .map(value => ({\n      minWidth: value.minWidth || 0,\n      cards: value.cards,\n    }))\n    .sort((a, b) => b.minWidth - a.minWidth);\n\n  sortedConfig.some(layout => {\n    if (width >= layout.minWidth) {\n      cardsPerRow = layout.cards;\n      return true;\n    }\n  });\n  return cardsPerRow;\n};\n"]}