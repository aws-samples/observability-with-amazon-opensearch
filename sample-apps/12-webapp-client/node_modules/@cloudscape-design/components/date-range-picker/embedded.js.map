{"version":3,"file":"embedded.js","sourceRoot":"","sources":["../../../src/date-range-picker/embedded.tsx"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AACtC,OAAO,QAAQ,MAAM,YAAY,CAAC;AAClC,OAAO,WAAW,MAAM,iBAAiB,CAAC;AAC1C,OAAO,YAAY,MAAM,2BAA2B,CAAC;AAErD,OAAO,mBAAmB,MAAM,kBAAkB,CAAC;AACnD,OAAO,YAAY,MAAM,iBAAiB,CAAC;AAC3C,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAE7D,OAAO,EAAE,sBAAsB,EAAE,MAAM,6BAA6B,CAAC;AAErE,OAAO,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AACzD,OAAO,EAAE,SAAS,EAAE,MAAM,8BAA8B,CAAC;AAOzD,MAAM,UAAU,uBAAuB,CAAC,EAYT;QAX7B,KAAK,WAAA,EACL,cAAW,EAAX,MAAM,mBAAG,EAAE,KAAA,EACX,WAAW,iBAAA,EACX,qBAA0B,EAA1B,aAAa,mBAAG,cAAM,OAAA,IAAI,EAAJ,CAAI,KAAA,EAC1B,eAAe,qBAAA,EACf,WAAW,iBAAA,EACX,gBAAgB,EAAhB,QAAQ,mBAAG,KAAK,KAAA,EAChB,uBAA4B,EAA5B,eAAe,mBAAG,UAAU,KAAA,EAC5B,yBAA6B,EAA7B,iBAAiB,mBAAG,SAAS,KAAA,EAC7B,QAAQ,cAAA,EACR,UAAU,gBAAA;IAEJ,IAAA,KAQF,kBAAkB,CAAC;QACrB,KAAK,OAAA;QACL,eAAe,iBAAA;QACf,iBAAiB,mBAAA;KAClB,CAAC,EAXA,eAAe,qBAAA,EACf,kBAAkB,wBAAA,EAClB,qBAAqB,2BAAA,EACrB,qBAAqB,2BAAA,EACrB,wBAAwB,8BAAA,EACxB,qBAAqB,2BAAA,EACrB,wBAAwB,8BAKxB,CAAC;IAEH,IAAM,YAAY,GAAG,SAAS,EAAE,CAAC;IAEjC,SAAS,WAAW,CAAC,KAA8E;QACjG,IAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAE5E,sBAAsB,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,WAAW,CAAC,QAAQ,EAAE,EAAE,QAAQ,UAAA,EAAE,UAAU,YAAA,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/F,CAAC;IAED,IAAM,SAAS,GAAG;QAChB,SAAO,EAAE,MAAM,CAAY,IAAI,CAAC;QAChC,eAAe,EAAE,MAAM,CAAY,IAAI,CAAC;QACxC,eAAe,EAAE,MAAM,CAAY,IAAI,CAAC;KACzC,CAAC;IAEF,OAAO,CACL,oBAAC,YAAY,IAAC,IAAI,EAAC,GAAG;QACpB,oBAAC,WAAW,IAAC,OAAO,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,EAAE;YACjD,oBAAC,YAAY,IAAC,SAAS,EAAC,UAAU,EAAC,IAAI,EAAC,GAAG;gBACxC,iBAAiB,KAAK,SAAS,IAAI,CAClC,oBAAC,YAAY,IACX,GAAG,EAAE,SAAS,CAAC,SAAO,CAAA,EACtB,IAAI,EAAE,kBAAkB,EACxB,QAAQ,EAAE,UAAC,IAA6B;wBACtC,qBAAqB,CAAC,IAAI,CAAC,CAAC;oBAC9B,CAAC,EACD,WAAW,EAAE,WAAW,GACxB,CACH;gBAEA,kBAAkB,KAAK,UAAU,IAAI,CACpC,oBAAC,QAAQ,IACP,GAAG,EAAE,SAAS,CAAC,eAAe,CAAC,EAC/B,YAAY,EAAE,YAAY,EAC1B,cAAc,EAAE,qBAAqB,aAArB,qBAAqB,uBAArB,qBAAqB,CAAE,OAAO,EAC9C,gBAAgB,EAAE,qBAAqB,aAArB,qBAAqB,uBAArB,qBAAqB,CAAE,SAAS,EAClD,MAAM,EAAE,MAAM,EACd,WAAW,EAAE,WAAW,EACxB,aAAa,EAAE,aAAa,EAC5B,WAAW,EAAE,WAAW,EACxB,iBAAiB,EAAE,UAAA,KAAK;wBACtB,wBAAwB,CAAC,KAAK,CAAC,CAAC;wBAChC,WAAW,CAAC,KAAK,CAAC,CAAC;oBACrB,CAAC,EACD,QAAQ,EAAE,QAAQ,EAClB,eAAe,EAAE,eAAe,GAChC,CACH;gBAEA,kBAAkB,KAAK,UAAU,IAAI,CACpC,oBAAC,mBAAmB,IAClB,GAAG,EAAE,SAAS,CAAC,eAAe,CAAC,EAC/B,YAAY,EAAE,YAAY,EAC1B,OAAO,EAAE,eAAe,EACxB,QAAQ,EAAE,QAAQ,EAClB,gBAAgB,EAAE,qBAAqB,EACvC,QAAQ,EAAE,UAAA,KAAK;wBACb,wBAAwB,CAAC,KAAK,CAAC,CAAC;wBAChC,WAAW,CAAC,KAAK,CAAC,CAAC;oBACrB,CAAC,EACD,WAAW,EAAE,WAAW,GACxB,CACH,CACY,CACH,CACD,CAChB,CAAC;AACJ,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport Calendar from './calendar';\nimport InternalBox from '../box/internal';\nimport SpaceBetween from '../space-between/index.js';\n\nimport RelativeRangePicker from './relative-range';\nimport ModeSwitcher from './mode-switcher';\nimport { useDateRangePicker } from './use-date-range-picker';\nimport { DateRangePickerBaseProps } from './interfaces';\nimport { fireNonCancelableEvent } from '../internal/events/index.js';\nimport { DateRangePickerProps, Focusable } from './interfaces';\nimport { formatValue } from './use-date-range-picker.js';\nimport { useMobile } from '../internal/hooks/use-mobile';\n\nexport interface DateRangePickerEmbeddedProps extends DateRangePickerBaseProps {\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n}\n\nexport function DateRangePickerEmbedded({\n  value,\n  locale = '',\n  startOfWeek,\n  isDateEnabled = () => true,\n  relativeOptions,\n  i18nStrings,\n  dateOnly = false,\n  timeInputFormat = 'hh:mm:ss',\n  rangeSelectorMode = 'default',\n  onChange,\n  timeOffset,\n}: DateRangePickerEmbeddedProps) {\n  const {\n    fillMissingTime,\n    rangeSelectionMode,\n    setRangeSelectionMode,\n    selectedAbsoluteRange,\n    setSelectedAbsoluteRange,\n    selectedRelativeRange,\n    setSelectedRelativeRange,\n  } = useDateRangePicker({\n    value,\n    relativeOptions,\n    rangeSelectorMode,\n  });\n\n  const isSingleGrid = useMobile();\n\n  function updateRange(value: DateRangePickerProps.AbsoluteValue | DateRangePickerProps.RelativeValue) {\n    const newValue = value.type === 'relative' ? value : fillMissingTime(value);\n\n    fireNonCancelableEvent(onChange, { value: formatValue(newValue, { dateOnly, timeOffset }) });\n  }\n\n  const focusRefs = {\n    default: useRef<Focusable>(null),\n    'absolute-only': useRef<Focusable>(null),\n    'relative-only': useRef<Focusable>(null),\n  };\n\n  return (\n    <SpaceBetween size=\"l\">\n      <InternalBox padding={{ top: 'm', horizontal: 'l' }}>\n        <SpaceBetween direction=\"vertical\" size=\"s\">\n          {rangeSelectorMode === 'default' && (\n            <ModeSwitcher\n              ref={focusRefs.default}\n              mode={rangeSelectionMode}\n              onChange={(mode: 'absolute' | 'relative') => {\n                setRangeSelectionMode(mode);\n              }}\n              i18nStrings={i18nStrings}\n            />\n          )}\n\n          {rangeSelectionMode === 'absolute' && (\n            <Calendar\n              ref={focusRefs['absolute-only']}\n              isSingleGrid={isSingleGrid}\n              initialEndDate={selectedAbsoluteRange?.endDate}\n              initialStartDate={selectedAbsoluteRange?.startDate}\n              locale={locale}\n              startOfWeek={startOfWeek}\n              isDateEnabled={isDateEnabled}\n              i18nStrings={i18nStrings}\n              onSelectDateRange={range => {\n                setSelectedAbsoluteRange(range);\n                updateRange(range);\n              }}\n              dateOnly={dateOnly}\n              timeInputFormat={timeInputFormat}\n            />\n          )}\n\n          {rangeSelectionMode === 'relative' && (\n            <RelativeRangePicker\n              ref={focusRefs['relative-only']}\n              isSingleGrid={isSingleGrid}\n              options={relativeOptions}\n              dateOnly={dateOnly}\n              initialSelection={selectedRelativeRange}\n              onChange={range => {\n                setSelectedRelativeRange(range);\n                updateRange(range);\n              }}\n              i18nStrings={i18nStrings}\n            />\n          )}\n        </SpaceBetween>\n      </InternalBox>\n    </SpaceBetween>\n  );\n}\n"]}