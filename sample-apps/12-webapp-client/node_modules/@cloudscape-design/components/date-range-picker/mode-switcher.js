// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
import React, { forwardRef, useImperativeHandle, useRef } from 'react';
import InternalSegmentedControl from '../segmented-control/internal';
import segmentedControlStyles from '../segmented-control/styles.css.js';
import buttonTriggerStyles from '../internal/components/button-trigger/styles.css.js';
import styles from './styles.css.js';
export default forwardRef(ModeSwitcher);
function ModeSwitcher(_a, ref) {
    var i18nStrings = _a.i18nStrings, mode = _a.mode, onChange = _a.onChange;
    var elementRef = useRef(null);
    useImperativeHandle(ref, function () { return ({
        focus: function () {
            if (elementRef.current) {
                elementRef.current.getElementsByClassName(segmentedControlStyles.selected)[0].focus();
                var select = elementRef.current.getElementsByClassName(buttonTriggerStyles['button-trigger']);
                for (var _i = 0, _a = Array.prototype.slice.call(select); _i < _a.length; _i++) {
                    var button = _a[_i];
                    button.focus();
                }
            }
        }
    }); });
    return (React.createElement("div", { ref: elementRef },
        React.createElement(InternalSegmentedControl, { className: styles['mode-switch'], selectedId: mode, options: [
                { id: 'relative', text: i18nStrings.relativeModeTitle },
                { id: 'absolute', text: i18nStrings.absoluteModeTitle },
            ], onChange: function (e) { return onChange(e.detail.selectedId); } })));
}
//# sourceMappingURL=mode-switcher.js.map