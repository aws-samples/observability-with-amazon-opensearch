import { DateRangePickerProps } from './interfaces';
/**
 * This function fills in a start and end time if they are missing.
 */
declare function fillMissingTime(value: DateRangePickerProps.AbsoluteValue | null): {
    startDate: string;
    endDate: string;
    type: "absolute";
} | null;
export declare function formatValue(value: null | DateRangePickerProps.Value, { timeOffset, dateOnly }: {
    timeOffset?: number;
    dateOnly: boolean;
}): null | DateRangePickerProps.Value;
export declare function useDateRangePicker({ value, relativeOptions, rangeSelectorMode }: UseDateRangePickerProps): {
    fillMissingTime: typeof fillMissingTime;
    rangeSelectionMode: "absolute" | "relative";
    setRangeSelectionMode: import("react").Dispatch<import("react").SetStateAction<"absolute" | "relative">>;
    selectedAbsoluteRange: DateRangePickerProps.AbsoluteValue | null;
    setSelectedAbsoluteRange: import("react").Dispatch<import("react").SetStateAction<DateRangePickerProps.AbsoluteValue | null>>;
    selectedRelativeRange: DateRangePickerProps.RelativeValue | null;
    setSelectedRelativeRange: import("react").Dispatch<import("react").SetStateAction<DateRangePickerProps.RelativeValue | null>>;
};
export interface UseDateRangePickerProps {
    value: null | DateRangePickerProps.Value;
    relativeOptions: ReadonlyArray<DateRangePickerProps.RelativeOption>;
    rangeSelectorMode: DateRangePickerProps.RangeSelectorMode;
}
export {};
//# sourceMappingURL=use-date-range-picker.d.ts.map