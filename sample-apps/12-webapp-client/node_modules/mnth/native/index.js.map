{"version":3,"sources":["index.ts"],"names":["DAYS_IN_WEEK","getCalendarMonth","date","options","firstDayOfWeek","firstDateOfMonth","Date","getFullYear","getMonth","lastDateOfMonth","firstWeekdayOfMonth","getDay","lastWeekdayOfMonth","daysInMonth","getDate","daysToPrepend","daysToAppend","month","week","i","push","length"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;AAEA,IAAMA,YAAY,GAAG,CAArB;;AAMO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAaC,OAAb,EAA8C;AAAA;AAE1EC,IAAAA,cAAc,EAAE;AAF0D,KAGvED,OAHuE;AAAA,MACpEC,cADoE,yBACpEA,cADoE;;AAK5E,MAAMC,gBAAgB,GAAG,IAAIC,IAAJ,CAASJ,IAAI,CAACK,WAAL,EAAT,EAA6BL,IAAI,CAACM,QAAL,EAA7B,EAA8C,CAA9C,CAAzB;AACA,MAAMC,eAAe,GAAG,IAAIH,IAAJ,CAASJ,IAAI,CAACK,WAAL,EAAT,EAA6BL,IAAI,CAACM,QAAL,KAAkB,CAA/C,EAAkD,CAAlD,CAAxB;AACA,MAAME,mBAAmB,GAAGL,gBAAgB,CAACM,MAAjB,EAA5B;AACA,MAAMC,kBAAkB,GAAGH,eAAe,CAACE,MAAhB,EAA3B;AACA,MAAME,WAAW,GAAGJ,eAAe,CAACK,OAAhB,EAApB;AACA,MAAMC,aAAa,GAAG,CAACL,mBAAmB,GAAGN,cAAtB,GAAuCJ,YAAxC,IAAwDA,YAA9E;AACA,MAAMgB,YAAY,GAAG,CAAChB,YAAY,GAAG,CAAf,GAAmBY,kBAAnB,GAAwCR,cAAzC,IAA2DJ,YAAhF;AACA,MAAMiB,KAAe,GAAG,EAAxB;AACA,MAAIC,IAAY,GAAG,EAAnB;;AAEA,OAAK,IAAIC,CAAC,GAAG,IAAIJ,aAAjB,EAAgCI,CAAC,IAAIN,WAAW,GAAGG,YAAd,GAA6B,CAAlE,EAAqEG,CAAC,EAAtE,EAA0E;AACxE,QAAIA,CAAC,IAAI,CAAT,EAAY;AACVD,MAAAA,IAAI,CAACE,IAAL,CACE,sBAAQf,gBAAR,EAA0Bc,CAAC,GAAG,CAA9B,CADF;AAGD,KAJD,MAIO,IAAIA,CAAC,GAAGN,WAAR,EAAqB;AAC1BK,MAAAA,IAAI,CAACE,IAAL,CACE,sBAAQX,eAAR,EAAyBU,CAAC,GAAGN,WAA7B,CADF;AAGD,KAJM,MAIA;AACLK,MAAAA,IAAI,CAACE,IAAL,CACE,sBAAQlB,IAAR,EAAciB,CAAd,CADF;AAGD;;AAED,QAAID,IAAI,CAACG,MAAL,KAAgB,CAApB,EAAuB;AACrBJ,MAAAA,KAAK,CAACG,IAAN,CAAWF,IAAX;AACAA,MAAAA,IAAI,GAAG,EAAP;AACD;AACF;;AAED,SAAOD,KAAP;AACD,CArCM","sourcesContent":["import { addDays } from './add-days'\nimport { setDate } from './set-date'\n\nconst DAYS_IN_WEEK = 7\n\ntype TOptions = {\n  firstDayOfWeek: 0 | 1 | 2 | 3 | 4 | 5 | 6,\n}\n\nexport const getCalendarMonth = (date: Date, options?: TOptions): Date[][] => {\n  const { firstDayOfWeek } = {\n    firstDayOfWeek: 1,\n    ...options,\n  }\n  const firstDateOfMonth = new Date(date.getFullYear(), date.getMonth(), 1)\n  const lastDateOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0)\n  const firstWeekdayOfMonth = firstDateOfMonth.getDay()\n  const lastWeekdayOfMonth = lastDateOfMonth.getDay()\n  const daysInMonth = lastDateOfMonth.getDate()\n  const daysToPrepend = (firstWeekdayOfMonth - firstDayOfWeek + DAYS_IN_WEEK) % DAYS_IN_WEEK\n  const daysToAppend = (DAYS_IN_WEEK - 1 - lastWeekdayOfMonth + firstDayOfWeek) % DAYS_IN_WEEK\n  const month: Date[][] = []\n  let week: Date[] = []\n\n  for (let i = 1 - daysToPrepend; i <= daysInMonth + daysToAppend + 1; i++) {\n    if (i <= 0) {\n      week.push(\n        addDays(firstDateOfMonth, i - 1)\n      )\n    } else if (i > daysInMonth) {\n      week.push(\n        addDays(lastDateOfMonth, i - daysInMonth)\n      )\n    } else {\n      week.push(\n        setDate(date, i)\n      )\n    }\n\n    if (week.length === 7) {\n      month.push(week)\n      week = []\n    }\n  }\n\n  return month\n}\n"],"file":"index.js"}