AWSTemplateFormatVersion: 2010-09-09
Description: "This template create the Amazon CodeBuild resources for the Microservice Observability with Amazon OpenSearch Service Workshop."

Parameters:
  Analytics:
    Type: String
    Default: analytics-service
  Database:
    Type: String
    Default: database-service
  Order:
    Type: String
    Default: order-service
  Inventory:
    Type: String
    Default: inventory-service
  Payment:
    Type: String
    Default: payment-service
  Recommendation:
    Type: String
    Default: recommendation-service
  Authentication:
    Type: String
    Default: authentication-service
  Client:
    Type: String
    Default: client

Resources:
  CodeBuildAssetsBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub 'codebuild-assets-${AWS::Region}-${AWS::AccountId}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault: 
              SSEAlgorithm: 'aws:kms'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      ObjectLockEnabled: false

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub CodeBuildServiceRole-${AWS::Region}-${AWS::AccountId}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildCloudWatch
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
        - PolicyName: CodeBuildCodePipeline
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource: 'arn:aws:s3:::codepipeline-${AWS::Region}-*'
        - PolicyName: CodeBuild
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:BatchPutCodeCoverages
                Resource: !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/*'
        - PolicyName: CodeBuildAssetsBucket
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListBucket
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource: 
                  - !Sub arn:aws:s3:::${CodeBuildAssetsBucket}
                  - !Sub arn:aws:s3:::${CodeBuildAssetsBucket}/*
        - PolicyName: CodeBuildECR
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:CompleteLayerUpload
                  - ecr:DescribeImages
                  - ecr:DescribeRepositories
                  - ecr:GetAuthorizationToken
                  - ecr:GetDownloadUrlForLayer
                  - ecr:InitiateLayerUpload
                  - ecr:ListImages
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                Resource: "*"

  AnalyticCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref Analytics
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: IMAGE_REPO_NAME
            Value: !Ref Analytics
          - Name: IMAGE_TAG
            Value: latest
        PrivilegedMode: true
      Source:
        Type: S3
        Location: !Sub ${CodeBuildAssetsBucket}/${Analytics}.zip
  DatabaseCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref Database
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: IMAGE_REPO_NAME
            Value: !Ref Database
          - Name: IMAGE_TAG
            Value: latest
        PrivilegedMode: true
      Source:
        Type: S3
        Location: !Sub ${CodeBuildAssetsBucket}/${Database}.zip
  OrderCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref Order
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: IMAGE_REPO_NAME
            Value: !Ref Order
          - Name: IMAGE_TAG
            Value: latest
        PrivilegedMode: true
      Source:
        Type: S3
        Location: !Sub ${CodeBuildAssetsBucket}/${Order}.zip
  InventoryCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref Inventory
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: IMAGE_REPO_NAME
            Value: !Ref Inventory
          - Name: IMAGE_TAG
            Value: latest
        PrivilegedMode: true
      Source:
        Type: S3
        Location: !Sub ${CodeBuildAssetsBucket}/${Inventory}.zip
  PaymentCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref Payment
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: IMAGE_REPO_NAME
            Value: !Ref Payment
          - Name: IMAGE_TAG
            Value: latest
        PrivilegedMode: true
      Source:
        Type: S3
        Location: !Sub ${CodeBuildAssetsBucket}/${Analytics}.zip
  RecommendationCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref Recommendation
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: IMAGE_REPO_NAME
            Value: !Ref Recommendation
          - Name: IMAGE_TAG
            Value: latest
        PrivilegedMode: true
      Source:
        Type: S3
        Location: !Sub ${CodeBuildAssetsBucket}/${Recommendation}.zip
  AuthenticationCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref Authentication
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: IMAGE_REPO_NAME
            Value: !Ref Authentication
          - Name: IMAGE_TAG
            Value: latest
        PrivilegedMode: true
      Source:
        Type: S3
        Location: !Sub ${CodeBuildAssetsBucket}/${Authentication}.zip
  ClientCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref Client
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: IMAGE_REPO_NAME
            Value: !Ref Client
          - Name: IMAGE_TAG
            Value: latest
        PrivilegedMode: true
      Source:
        Type: S3
        Location: !Sub ${CodeBuildAssetsBucket}/${Client}.zip
        
  AnalyticRepository:
    Type: AWS::ECR::Repository
    Properties:
      EmptyOnDelete: true
      RepositoryName: !Ref Analytics
  DatabaseRepository:
    Type: AWS::ECR::Repository
    Properties:
      EmptyOnDelete: true
      RepositoryName: !Ref Database
  OrderRepository:
    Type: AWS::ECR::Repository
    Properties:
      EmptyOnDelete: true
      RepositoryName: !Ref Order
  InventoryRepository:
    Type: AWS::ECR::Repository
    Properties:
      EmptyOnDelete: true
      RepositoryName: !Ref Inventory
  PaymentRepository:
    Type: AWS::ECR::Repository
    Properties:
      EmptyOnDelete: true
      RepositoryName: !Ref Payment
  RecommendationRepository:
    Type: AWS::ECR::Repository
    Properties:
      EmptyOnDelete: true
      RepositoryName: !Ref Recommendation
  AuthenticationRepository:
    Type: AWS::ECR::Repository
    Properties:
      EmptyOnDelete: true
      RepositoryName: !Ref Authentication
  ClientRepository:
    Type: AWS::ECR::Repository
    Properties:
      EmptyOnDelete: true
      RepositoryName: !Ref Client